/**
 * Minified by jsDelivr using UglifyJS v3.1.10.
 * Original file: /npm/three@0.54.1-dev/three.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var THREE=THREE||{REVISION:"54dev"};module.exports=THREE;var window={},self={};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var t=String(e),r=this.lastIndexOf(t);return(-1<r&&r)===this.length-t.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;r<t.length&&!window.requestAnimationFrame;++r)window.requestAnimationFrame=window[t[r]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[r]+"CancelAnimationFrame"]||window[t[r]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t,r){var i=Date.now(),o=Math.max(0,16-(i-e)),a=window.setTimeout(function(){t(i+o)},o);return e=i+o,a}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSV:function(e,t,r){var i,o,a,n,s;return 0===r?this.r=this.g=this.b=0:(a=r*(1-t),n=r*(1-t*(o=6*e-(i=Math.floor(6*e)))),s=r*(1-t*(1-o)),0===i?(this.r=r,this.g=s,this.b=a):1===i?(this.r=n,this.g=r,this.b=a):2===i?(this.r=a,this.g=r,this.b=s):3===i?(this.r=a,this.g=n,this.b=r):4===i?(this.r=s,this.g=a,this.b=r):5===i&&(this.r=r,this.g=a,this.b=n)),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)){t=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)){t=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},getHSV:function(e){var t,r,i=this.r,o=this.g,a=this.b,n=Math.max(Math.max(i,o),a),s=Math.min(Math.min(i,o),a),l=n;if(s===n)t=0,r=0;else{var h=n-s;r=h/n,t=i===n?(o-a)/h:o===n?2+(a-i)/h:4+(i-o)/h,(t/=6)<0&&(t+=1),t>1&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=r,e.v=l,e},lerpSelf:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},copy:function(e){return this.x=e.x,this.y=e.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addSelf:function(e){return this.x+=e.x,this.y+=e.y,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},subSelf:function(e){return this.x-=e.x,this.y-=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return e?(this.x/=e,this.y/=e):this.set(0,0),this},minSelf:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},maxSelf:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clampSelf:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addSelf:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},subSelf:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},multiply:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},multiplySelf:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},divideSelf:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return e?(this.x/=e,this.y/=e,this.z/=e):(this.x=0,this.y=0,this.z=0),this},minSelf:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},maxSelf:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clampSelf:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},crossSelf:function(e){var t=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-t*e.z,this.z=t*e.y-r*e.x,this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.elements,o=i[0],a=i[4],n=i[8],s=i[1],l=i[5],h=i[9],c=i[2],f=i[6],u=i[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(r(n)),Math.abs(n)<.99999?(this.x=Math.atan2(-h,u),this.z=Math.atan2(-a,o)):(this.x=Math.atan2(f,l),this.z=0)):"YXZ"===t?(this.x=Math.asin(-r(h)),Math.abs(h)<.99999?(this.y=Math.atan2(n,u),this.z=Math.atan2(s,l)):(this.y=Math.atan2(-c,o),this.z=0)):"ZXY"===t?(this.x=Math.asin(r(f)),Math.abs(f)<.99999?(this.y=Math.atan2(-c,u),this.z=Math.atan2(-a,l)):(this.y=0,this.z=Math.atan2(s,o))):"ZYX"===t?(this.y=Math.asin(-r(c)),Math.abs(c)<.99999?(this.x=Math.atan2(f,u),this.z=Math.atan2(s,o)):(this.x=0,this.z=Math.atan2(-a,l))):"YZX"===t?(this.z=Math.asin(r(s)),Math.abs(s)<.99999?(this.x=Math.atan2(-h,l),this.y=Math.atan2(-c,o)):(this.x=0,this.y=Math.atan2(n,u))):"XZY"===t&&(this.z=Math.asin(-r(a)),Math.abs(a)<.99999?(this.x=Math.atan2(f,l),this.y=Math.atan2(n,o)):(this.x=Math.atan2(-h,u),this.y=0)),this},setEulerFromQuaternion:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.x*e.x,o=e.y*e.y,a=e.z*e.z,n=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),n-i-o+a),this.y=Math.asin(r(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),n+i-o-a)):"YXZ"===t?(this.x=Math.asin(r(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),n-i-o+a),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),n-i+o-a)):"ZXY"===t?(this.x=Math.asin(r(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),n-i-o+a),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),n-i+o-a)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),n-i-o+a),this.y=Math.asin(r(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),n+i-o-a)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),n-i+o-a),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),n+i-o-a),this.z=Math.asin(r(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),n-i+o-a),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),n+i-o-a),this.z=Math.asin(r(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addSelf:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},subSelf:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},divideScalar:function(e){return e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.x=0,this.y=0,this.z=0,this.w=1),this},minSelf:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},maxSelf:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clampSelf:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,o,a=e.elements,n=a[0],s=a[4],l=a[8],h=a[1],c=a[5],f=a[9],u=a[2],p=a[6],E=a[10];if(Math.abs(s-h)<.01&&Math.abs(l-u)<.01&&Math.abs(f-p)<.01){if(Math.abs(s+h)<.1&&Math.abs(l+u)<.1&&Math.abs(f+p)<.1&&Math.abs(n+c+E-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var d=(n+1)/2,m=(c+1)/2,g=(E+1)/2,v=(s+h)/4,T=(l+u)/4,y=(f+p)/4;return d>m&&d>g?d<.01?(r=0,i=.707106781,o=.707106781):(i=v/(r=Math.sqrt(d)),o=T/r):m>g?m<.01?(r=.707106781,i=0,o=.707106781):(r=v/(i=Math.sqrt(m)),o=y/i):g<.01?(r=.707106781,i=.707106781,o=0):(r=T/(o=Math.sqrt(g)),i=y/o),this.set(r,i,o,t),this}var R=Math.sqrt((p-f)*(p-f)+(l-u)*(l-u)+(h-s)*(h-s));return Math.abs(R)<.001&&(R=1),this.x=(p-f)/R,this.y=(l-u)/R,this.z=(h-s)/R,this.w=Math.acos((n+c+E-1)/2),this}},THREE.Box2=function(e,t){this.min=void 0!==e?e.clone():new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t.clone():new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;r<i;r++)(t=e[r]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var r=THREE.Box2.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).subSelf(r),this.max.copy(e).addSelf(r),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).add(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).sub(this.max,this.min)},expandByPoint:function(e){return this.min.minSelf(e),this.max.maxSelf(e),this},expandByVector:function(e){return this.min.subSelf(e),this.max.addSelf(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return this.min.x<=e.x&&e.x<=this.max.x&&this.min.y<=e.y&&e.y<=this.max.y},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clampSelf(this.min,this.max)},distanceToPoint:function(e){return THREE.Box2.__v1.copy(e).clampSelf(this.min,this.max).subSelf(e).length()},intersect:function(e){return this.min.maxSelf(e.min),this.max.minSelf(e.max),this},union:function(e){return this.min.minSelf(e.min),this.max.maxSelf(e.max),this},translate:function(e){return this.min.addSelf(e),this.max.addSelf(e),this},scale:function(e){var t=this.size().multiplyScalar(.5*(e-1));return this.expandByVector(t),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box2.__v1=new THREE.Vector2,THREE.Box3=function(e,t){this.min=void 0!==e?e.clone():new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t.clone():new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;r<i;r++)(t=e[r]).x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var r=THREE.Box3.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).subSelf(r),this.max.copy(e).addSelf(r),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).add(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).sub(this.max,this.min)},expandByPoint:function(e){return this.min.minSelf(e),this.max.maxSelf(e),this},expandByVector:function(e){return this.min.subSelf(e),this.max.addSelf(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return this.min.x<=e.x&&e.x<=this.max.x&&this.min.y<=e.y&&e.y<=this.max.y&&this.min.z<=e.z&&e.z<=this.max.z},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},clampPoint:function(e,t){t||new THREE.Vector3;return(new THREE.Vector3).copy(e).clampSelf(this.min,this.max)},distanceToPoint:function(e){return THREE.Box3.__v1.copy(e).clampSelf(this.min,this.max).subSelf(e).length()},intersect:function(e){return this.min.maxSelf(e.min),this.max.minSelf(e.max),this},union:function(e){return this.min.minSelf(e.min),this.max.maxSelf(e.max),this},translate:function(e){return this.min.addSelf(e),this.max.addSelf(e),this},scale:function(e){var t=this.size().multiplyScalar(.5*(e-1));return this.expandByVector(t),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Box3.__v1=new THREE.Vector3,THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,multiplyVector3:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z;return e.x=t[0]*r+t[3]*i+t[6]*o,e.y=t[1]*r+t[4]*i+t[7]*o,e.z=t[2]*r+t[5]*i+t[8]*o,e},multiplyVector3Array:function(e){for(var t=THREE.Matrix3.__v1,r=0,i=e.length;r<i;r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],this.multiplyVector3(t),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e},getInverse:function(e){var t=e.elements,r=t[10]*t[5]-t[6]*t[9],i=-t[10]*t[1]+t[2]*t[9],o=t[6]*t[1]-t[2]*t[5],a=-t[10]*t[4]+t[6]*t[8],n=t[10]*t[0]-t[2]*t[8],s=-t[6]*t[0]+t[2]*t[4],l=t[9]*t[4]-t[5]*t[8],h=-t[9]*t[0]+t[1]*t[8],c=t[5]*t[0]-t[1]*t[4],f=t[0]*r+t[1]*a+t[2]*l;0===f&&console.warn("Matrix3.getInverse(): determinant == 0");var u=1/f,p=this.elements;return p[0]=u*r,p[1]=u*i,p[2]=u*o,p[3]=u*a,p[4]=u*n,p[5]=u*s,p[6]=u*l,p[7]=u*h,p[8]=u*c,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},THREE.Matrix3.__v1=new THREE.Vector3,THREE.Matrix4=function(e,t,r,i,o,a,n,s,l,h,c,f,u,p,E,d){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,r||0,i||0,o||0,void 0!==a?a:1,n||0,s||0,l||0,h||0,void 0!==c?c:1,f||0,u||0,p||0,E||0,void 0!==d?d:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,o,a,n,s,l,h,c,f,u,p,E,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=o,m[5]=a,m[9]=n,m[13]=s,m[2]=l,m[6]=h,m[10]=c,m[14]=f,m[3]=u,m[7]=p,m[11]=E,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15]),this},lookAt:function(e,t,r){var i=this.elements,o=THREE.Matrix4.__v1,a=THREE.Matrix4.__v2,n=THREE.Matrix4.__v3;return n.sub(e,t).normalize(),0===n.length()&&(n.z=1),o.cross(r,n).normalize(),0===o.length()&&(n.x+=1e-4,o.cross(r,n).normalize()),a.cross(n,o),i[0]=o.x,i[4]=a.x,i[8]=n.x,i[1]=o.y,i[5]=a.y,i[9]=n.y,i[2]=o.z,i[6]=a.z,i[10]=n.z,this},multiply:function(e,t){var r=e.elements,i=t.elements,o=this.elements,a=r[0],n=r[4],s=r[8],l=r[12],h=r[1],c=r[5],f=r[9],u=r[13],p=r[2],E=r[6],d=r[10],m=r[14],g=r[3],v=r[7],T=r[11],y=r[15],R=i[0],x=i[4],H=i[8],_=i[12],b=i[1],S=i[5],w=i[9],M=i[13],C=i[2],A=i[6],L=i[10],P=i[14],F=i[3],U=i[7],D=i[11],z=i[15];return o[0]=a*R+n*b+s*C+l*F,o[4]=a*x+n*S+s*A+l*U,o[8]=a*H+n*w+s*L+l*D,o[12]=a*_+n*M+s*P+l*z,o[1]=h*R+c*b+f*C+u*F,o[5]=h*x+c*S+f*A+u*U,o[9]=h*H+c*w+f*L+u*D,o[13]=h*_+c*M+f*P+u*z,o[2]=p*R+E*b+d*C+m*F,o[6]=p*x+E*S+d*A+m*U,o[10]=p*H+E*w+d*L+m*D,o[14]=p*_+E*M+d*P+m*z,o[3]=g*R+v*b+T*C+y*F,o[7]=g*x+v*S+T*A+y*U,o[11]=g*H+v*w+T*L+y*D,o[15]=g*_+v*M+T*P+y*z,this},multiplySelf:function(e){return this.multiply(this,e)},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiply(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z,a=1/(t[3]*r+t[7]*i+t[11]*o+t[15]);return e.x=(t[0]*r+t[4]*i+t[8]*o+t[12])*a,e.y=(t[1]*r+t[5]*i+t[9]*o+t[13])*a,e.z=(t[2]*r+t[6]*i+t[10]*o+t[14])*a,e},multiplyVector4:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z,a=e.w;return e.x=t[0]*r+t[4]*i+t[8]*o+t[12]*a,e.y=t[1]*r+t[5]*i+t[9]*o+t[13]*a,e.z=t[2]*r+t[6]*i+t[10]*o+t[14]*a,e.w=t[3]*r+t[7]*i+t[11]*o+t[15]*a,e},multiplyVector3Array:function(e){for(var t=THREE.Matrix4.__v1,r=0,i=e.length;r<i;r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],this.multiplyVector3(t),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e},rotateAxis:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z;return e.x=r*t[0]+i*t[4]+o*t[8],e.y=r*t[1]+i*t[5]+o*t[9],e.z=r*t[2]+i*t[6]+o*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,r=new THREE.Vector4;return r.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,r.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,r.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,r.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,r},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],o=e[12],a=e[1],n=e[5],s=e[9],l=e[13],h=e[2],c=e[6],f=e[10],u=e[14],p=e[3],E=e[7],d=e[11],m=e[15];return o*s*c*p-i*l*c*p-o*n*f*p+r*l*f*p+i*n*u*p-r*s*u*p-o*s*h*E+i*l*h*E+o*a*f*E-t*l*f*E-i*a*u*E+t*s*u*E+o*n*h*d-r*l*h*d-o*a*c*d+t*l*c*d+r*a*u*d-t*n*u*d-i*n*h*m+r*s*h*m+i*a*c*m-t*s*c*m-r*a*f*m+t*n*f*m},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e){var t=this.elements,r=e.elements,i=r[0],o=r[4],a=r[8],n=r[12],s=r[1],l=r[5],h=r[9],c=r[13],f=r[2],u=r[6],p=r[10],E=r[14],d=r[3],m=r[7],g=r[11],v=r[15];return t[0]=h*E*m-c*p*m+c*u*g-l*E*g-h*u*v+l*p*v,t[4]=n*p*m-a*E*m-n*u*g+o*E*g+a*u*v-o*p*v,t[8]=a*c*m-n*h*m+n*l*g-o*c*g-a*l*v+o*h*v,t[12]=n*h*u-a*c*u-n*l*p+o*c*p+a*l*E-o*h*E,t[1]=c*p*d-h*E*d-c*f*g+s*E*g+h*f*v-s*p*v,t[5]=a*E*d-n*p*d+n*f*g-i*E*g-a*f*v+i*p*v,t[9]=n*h*d-a*c*d-n*s*g+i*c*g+a*s*v-i*h*v,t[13]=a*c*f-n*h*f+n*s*p-i*c*p-a*s*E+i*h*E,t[2]=l*E*d-c*u*d+c*f*m-s*E*m-l*f*v+s*u*v,t[6]=n*u*d-o*E*d-n*f*m+i*E*m+o*f*v-i*u*v,t[10]=o*c*d-n*l*d+n*s*m-i*c*m-o*s*v+i*l*v,t[14]=n*l*f-o*c*f-n*s*u+i*c*u+o*s*E-i*l*E,t[3]=h*u*d-l*p*d-h*f*m+s*p*m+l*f*g-s*u*g,t[7]=o*p*d-a*u*d+a*f*m-i*p*m-o*f*g+i*u*g,t[11]=a*l*d-o*h*d-a*s*m+i*h*m+o*s*g-i*l*g,t[15]=o*h*f-a*l*f+a*s*u-i*h*u-o*s*p+i*l*p,this.multiplyScalar(1/e.determinant()),this},setRotationFromEuler:function(e,t){var r=this.elements,i=e.x,o=e.y,a=e.z,n=Math.cos(i),s=Math.sin(i),l=Math.cos(o),h=Math.sin(o),c=Math.cos(a),f=Math.sin(a);if(void 0===t||"XYZ"===t){var u=n*c,p=n*f,E=s*c,d=s*f;r[0]=l*c,r[4]=-l*f,r[8]=h,r[1]=p+E*h,r[5]=u-d*h,r[9]=-s*l,r[2]=d-u*h,r[6]=E+p*h,r[10]=n*l}else if("YXZ"===t){var m=l*c,g=l*f,v=h*c,T=h*f;r[0]=m+T*s,r[4]=v*s-g,r[8]=n*h,r[1]=n*f,r[5]=n*c,r[9]=-s,r[2]=g*s-v,r[6]=T+m*s,r[10]=n*l}else if("ZXY"===t){var m=l*c,g=l*f,v=h*c,T=h*f;r[0]=m-T*s,r[4]=-n*f,r[8]=v+g*s,r[1]=g+v*s,r[5]=n*c,r[9]=T-m*s,r[2]=-n*h,r[6]=s,r[10]=n*l}else if("ZYX"===t){var u=n*c,p=n*f,E=s*c,d=s*f;r[0]=l*c,r[4]=E*h-p,r[8]=u*h+d,r[1]=l*f,r[5]=d*h+u,r[9]=p*h-E,r[2]=-h,r[6]=s*l,r[10]=n*l}else if("YZX"===t){var y=n*l,R=n*h,x=s*l,H=s*h;r[0]=l*c,r[4]=H-y*f,r[8]=x*f+R,r[1]=f,r[5]=n*c,r[9]=-s*c,r[2]=-h*c,r[6]=R*f+x,r[10]=y-H*f}else if("XZY"===t){var y=n*l,R=n*h,x=s*l,H=s*h;r[0]=l*c,r[4]=-f,r[8]=h*c,r[1]=y*f+H,r[5]=n*c,r[9]=R*f-x,r[2]=x*f-R,r[6]=s*c,r[10]=H*f+y}return this},setRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z,a=e.w,n=r+r,s=i+i,l=o+o,h=r*n,c=r*s,f=r*l,u=i*s,p=i*l,E=o*l,d=a*n,m=a*s,g=a*l;return t[0]=1-(u+E),t[4]=c-g,t[8]=f+m,t[1]=c+g,t[5]=1-(h+E),t[9]=p-d,t[2]=f-m,t[6]=p+d,t[10]=1-(h+u),this},compose:function(e,t,r){var i=this.elements,o=THREE.Matrix4.__m1,a=THREE.Matrix4.__m2;return o.identity(),o.setRotationFromQuaternion(t),a.makeScale(r.x,r.y,r.z),this.multiply(o,a),i[12]=e.x,i[13]=e.y,i[14]=e.z,this},decompose:function(e,t,r){var i=this.elements,o=THREE.Matrix4.__v1,a=THREE.Matrix4.__v2,n=THREE.Matrix4.__v3;o.set(i[0],i[1],i[2]),a.set(i[4],i[5],i[6]),n.set(i[8],i[9],i[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,(r=r instanceof THREE.Vector3?r:new THREE.Vector3).x=o.length(),r.y=a.length(),r.z=n.length(),e.x=i[12],e.y=i[13],e.z=i[14];var s=THREE.Matrix4.__m1;return s.copy(this),s.elements[0]/=r.x,s.elements[1]/=r.x,s.elements[2]/=r.x,s.elements[4]/=r.y,s.elements[5]/=r.y,s.elements[6]/=r.y,s.elements[8]/=r.z,s.elements[9]/=r.z,s.elements[10]/=r.z,t.setFromRotationMatrix(s),[e,t,r]},extractPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractRotation:function(e){var t=this.elements,r=e.elements,i=THREE.Matrix4.__v1,o=1/i.set(r[0],r[1],r[2]).length(),a=1/i.set(r[4],r[5],r[6]).length(),n=1/i.set(r[8],r[9],r[10]).length();return t[0]=r[0]*o,t[1]=r[1]*o,t[2]=r[2]*o,t[4]=r[4]*a,t[5]=r[5]*a,t[6]=r[6]*a,t[8]=r[8]*n,t[9]=r[9]*n,t[10]=r[10]*n,this},translate:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z;return t[12]=t[0]*r+t[4]*i+t[8]*o+t[12],t[13]=t[1]*r+t[5]*i+t[9]*o+t[13],t[14]=t[2]*r+t[6]*i+t[10]*o+t[14],t[15]=t[3]*r+t[7]*i+t[11]*o+t[15],this},rotateX:function(e){var t=this.elements,r=t[4],i=t[5],o=t[6],a=t[7],n=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e),f=Math.sin(e);return t[4]=c*r+f*n,t[5]=c*i+f*s,t[6]=c*o+f*l,t[7]=c*a+f*h,t[8]=c*n-f*r,t[9]=c*s-f*i,t[10]=c*l-f*o,t[11]=c*h-f*a,this},rotateY:function(e){var t=this.elements,r=t[0],i=t[1],o=t[2],a=t[3],n=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e),f=Math.sin(e);return t[0]=c*r-f*n,t[1]=c*i-f*s,t[2]=c*o-f*l,t[3]=c*a-f*h,t[8]=c*n+f*r,t[9]=c*s+f*i,t[10]=c*l+f*o,t[11]=c*h+f*a,this},rotateZ:function(e){var t=this.elements,r=t[0],i=t[1],o=t[2],a=t[3],n=t[4],s=t[5],l=t[6],h=t[7],c=Math.cos(e),f=Math.sin(e);return t[0]=c*r+f*n,t[1]=c*i+f*s,t[2]=c*o+f*l,t[3]=c*a+f*h,t[4]=c*n-f*r,t[5]=c*s-f*i,t[6]=c*l-f*o,t[7]=c*h-f*a,this},rotateByAxis:function(e,t){var r=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var i=e.x,o=e.y,a=e.z,n=Math.sqrt(i*i+o*o+a*a),s=(i/=n)*i,l=(o/=n)*o,h=(a/=n)*a,c=Math.cos(t),f=Math.sin(t),u=1-c,p=i*o*u,E=i*a*u,d=o*a*u,m=i*f,g=o*f,v=a*f,T=s+(1-s)*c,y=p+v,R=E-g,x=p-v,H=l+(1-l)*c,_=d+m,b=E+g,S=d-m,w=h+(1-h)*c,M=r[0],C=r[1],A=r[2],L=r[3],P=r[4],F=r[5],U=r[6],D=r[7],z=r[8],N=r[9],B=r[10],V=r[11];r[12],r[13],r[14],r[15];return r[0]=T*M+y*P+R*z,r[1]=T*C+y*F+R*N,r[2]=T*A+y*U+R*B,r[3]=T*L+y*D+R*V,r[4]=x*M+H*P+_*z,r[5]=x*C+H*F+_*N,r[6]=x*A+H*U+_*B,r[7]=x*L+H*D+_*V,r[8]=b*M+S*P+w*z,r[9]=b*C+S*F+w*N,r[10]=b*A+S*U+w*B,r[11]=b*L+S*D+w*V,this},scale:function(e){var t=this.elements,r=e.x,i=e.y,o=e.z;return t[0]*=r,t[4]*=i,t[8]*=o,t[1]*=r,t[5]*=i,t[9]*=o,t[2]*=r,t[6]*=i,t[10]*=o,t[3]*=r,t[7]*=i,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,i)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),o=1-r,a=e.x,n=e.y,s=e.z,l=o*a,h=o*n;return this.set(l*a+r,l*n-i*s,l*s+i*n,0,l*n+i*s,h*n+r,h*s-i*a,0,l*s-i*n,h*s+i*a,o*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeFrustum:function(e,t,r,i,o,a){var n=this.elements,s=2*o/(t-e),l=2*o/(i-r),h=(t+e)/(t-e),c=(i+r)/(i-r),f=-(a+o)/(a-o),u=-2*a*o/(a-o);return n[0]=s,n[4]=0,n[8]=h,n[12]=0,n[1]=0,n[5]=l,n[9]=c,n[13]=0,n[2]=0,n[6]=0,n[10]=f,n[14]=u,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this},makePerspective:function(e,t,r,i){var o=r*Math.tan(e*Math.PI/360),a=-o,n=a*t,s=o*t;return this.makeFrustum(n,s,a,o,r,i)},makeOrthographic:function(e,t,r,i,o,a){var n=this.elements,s=t-e,l=r-i,h=a-o,c=(t+e)/s,f=(r+i)/l,u=(a+o)/h;return n[0]=2/s,n[4]=0,n[8]=0,n[12]=-c,n[1]=0,n[5]=2/l,n[9]=0,n[13]=-f,n[2]=0,n[6]=0,n[10]=-2/h,n[14]=-u,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Ray=function(e,t){this.origin=void 0!==e?e.clone():new THREE.Vector3,this.direction=void 0!==t?t.clone():new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).addSelf(this.origin)},recastSelf:function(e){return this.origin.copy(this.at(e,THREE.Ray.__v1)),this},closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.sub(e,this.origin);var i=r.dot(this.direction);return r.copy(this.direction).multiplyScalar(i).addSelf(this.origin)},distanceToPoint:function(e){var t=THREE.Ray.__v1.sub(e,this.origin).dot(this.direction);return THREE.Ray.__v1.copy(this.direction).multiplyScalar(t).addSelf(this.origin),THREE.Ray.__v1.distanceTo(e)},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){return 0!=e.normal.dot(this.direction)||0==e.distanceToPoint(this.origin)},distanceToPlane:function(e){var t=e.normal.dot(this.direction);{if(0!=t){return-(this.origin.dot(e.normal)+e.constant)/t}if(0==e.distanceToPoint(this.origin))return 0}},intersectPlane:function(e,t){var r=this.distanceToPlane(e);if(void 0!==r)return this.at(r,t)},transformSelf:function(e){return this.direction=e.multiplyVector3(this.direction.addSelf(this.origin)),this.origin=e.multiplyVector3(this.origin),this.direction.subSelf(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Ray.__v1=new THREE.Vector3,THREE.Ray.__v2=new THREE.Vector3,THREE.Frustum=function(){this.planes=[new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane]},THREE.Frustum.prototype.setFromMatrix=function(e){var t=this.planes,r=e.elements,i=r[0],o=r[1],a=r[2],n=r[3],s=r[4],l=r[5],h=r[6],c=r[7],f=r[8],u=r[9],p=r[10],E=r[11],d=r[12],m=r[13],g=r[14],v=r[15];t[0].setComponents(n-i,c-s,E-f,v-d),t[1].setComponents(n+i,c+s,E+f,v+d),t[2].setComponents(n+o,c+l,E+u,v+m),t[3].setComponents(n-o,c-l,E-u,v-m),t[4].setComponents(n-a,c-h,E-p,v-g),t[5].setComponents(n+a,c+h,E+p,v+g);for(var T=0;T<6;T++)t[T].normalize()},THREE.Frustum.prototype.contains=function(e){for(var t=this.planes,r=e.matrixWorld,i=r.getPosition(),o=-e.geometry.boundingSphere.radius*r.getMaxScaleOnAxis(),a=0;a<6;a++)if(t[a].distanceToPoint(i)<=o)return!1;return!0},THREE.Frustum.__v1=new THREE.Vector3,THREE.Plane=function(e,t){void 0===e&&void 0===t?(this.normal=new THREE.Vector3,this.constant=0):(this.normal=e.clone(),this.constant=t||0)},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(e),this},setFromCoplanarPoints:function(e,t,r){var i=THREE.Plane.__v1.sub(r,t).crossSelf(THREE.Plane.__v2.sub(e,t));return this.setFromNormalAndCoplanarPoint(i,e),this},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).subSelf(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e,t){var r=this.distanceToPoint(e),i=this.distanceToPoint(t);return r<0&&i>0||i<0&&r>0},coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},translate:function(e){return this.constant=-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Plane.__v1=new THREE.Vector3,THREE.Plane.__v2=new THREE.Vector3,THREE.Rectangle=function(){function e(){a=i-t,n=o-r}var t=0,r=0,i=0,o=0,a=0,n=0,s=!0;this.getX=function(){return t},this.getY=function(){return r},this.getWidth=function(){return a},this.getHeight=function(){return n},this.getLeft=function(){return t},this.getTop=function(){return r},this.getRight=function(){return i},this.getBottom=function(){return o},this.set=function(a,n,l,h){s=!1,t=a,r=n,i=l,o=h,e()},this.addPoint=function(a,n){!0===s?(s=!1,t=a,r=n,i=a,o=n,e()):(t=t<a?t:a,r=r<n?r:n,i=i>a?i:a,o=o>n?o:n,e())},this.add3Points=function(a,n,l,h,c,f){!0===s?(s=!1,t=a<l?a<c?a:c:l<c?l:c,r=n<h?n<f?n:f:h<f?h:f,i=a>l?a>c?a:c:l>c?l:c,o=n>h?n>f?n:f:h>f?h:f,e()):(t=a<l?a<c?a<t?a:t:c<t?c:t:l<c?l<t?l:t:c<t?c:t,r=n<h?n<f?n<r?n:r:f<r?f:r:h<f?h<r?h:r:f<r?f:r,i=a>l?a>c?a>i?a:i:c>i?c:i:l>c?l>i?l:i:c>i?c:i,o=n>h?n>f?n>o?n:o:f>o?f:o:h>f?h>o?h:o:f>o?f:o,e())},this.addRectangle=function(a){!0===s?(s=!1,t=a.getLeft(),r=a.getTop(),i=a.getRight(),o=a.getBottom(),e()):(t=t<a.getLeft()?t:a.getLeft(),r=r<a.getTop()?r:a.getTop(),i=i>a.getRight()?i:a.getRight(),o=o>a.getBottom()?o:a.getBottom(),e())},this.inflate=function(a){t-=a,r-=a,i+=a,o+=a,e()},this.minSelf=function(a){t=t>a.getLeft()?t:a.getLeft(),r=r>a.getTop()?r:a.getTop(),i=i<a.getRight()?i:a.getRight(),o=o<a.getBottom()?o:a.getBottom(),e()},this.intersects=function(e){return!(i<e.getLeft())&&(!(t>e.getRight())&&(!(o<e.getTop())&&!(r>e.getBottom())))},this.empty=function(){s=!0,t=0,r=0,i=0,o=0,e()},this.isEmpty=function(){return s}},THREE.Sphere=function(e,t){this.center=void 0===e?new THREE.Vector3:e.clone(),this.radius=void 0===t?0:t},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var r=0,i=0,o=t.length;i<o;i++){var a=e.distanceToSquared(t[i]);r=Math.max(r,a)}return this.center=e,this.radius=Math.sqrt(r),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.subSelf(this.center).normalize(),i.multiplyScalar(this.radius).addSelf(this.center)),i},bounds:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},translate:function(e){return this.center.addSelf(this.offset),this},scale:function(e){return this.radius*=e,this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere3).copy(this)}},THREE.Math={clamp:function(e,t,r){return e<t?t:e>r?r:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,r,i,o){return i+(e-t)*(o-i)/(r-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:e>0?1:0},degreesToRadians:function(e){return e*THREE.Math.__d2r},radiansToDegrees:function(e){return e*THREE.Math.__r2d}},THREE.Math.__d2r=Math.PI/180,THREE.Math.__r2d=180/Math.PI,THREE.Quaternion=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var r=Math.cos(e.x/2),i=Math.cos(e.y/2),o=Math.cos(e.z/2),a=Math.sin(e.x/2),n=Math.sin(e.y/2),s=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=a*i*o+r*n*s,this.y=r*n*o-a*i*s,this.z=r*i*s+a*n*o,this.w=r*i*o-a*n*s):"YXZ"===t?(this.x=a*i*o+r*n*s,this.y=r*n*o-a*i*s,this.z=r*i*s-a*n*o,this.w=r*i*o+a*n*s):"ZXY"===t?(this.x=a*i*o-r*n*s,this.y=r*n*o+a*i*s,this.z=r*i*s+a*n*o,this.w=r*i*o-a*n*s):"ZYX"===t?(this.x=a*i*o-r*n*s,this.y=r*n*o+a*i*s,this.z=r*i*s-a*n*o,this.w=r*i*o+a*n*s):"YZX"===t?(this.x=a*i*o+r*n*s,this.y=r*n*o+a*i*s,this.z=r*i*s-a*n*o,this.w=r*i*o-a*n*s):"XZY"===t&&(this.x=a*i*o-r*n*s,this.y=r*n*o-a*i*s,this.z=r*i*s+a*n*o,this.w=r*i*o+a*n*s),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(r),this},setFromRotationMatrix:function(e){var t,r=e.elements,i=r[0],o=r[4],a=r[8],n=r[1],s=r[5],l=r[9],h=r[2],c=r[6],f=r[10],u=i+s+f;return u>0?(t=.5/Math.sqrt(u+1),this.w=.25/t,this.x=(c-l)*t,this.y=(a-h)*t,this.z=(n-o)*t):i>s&&i>f?(t=2*Math.sqrt(1+i-s-f),this.w=(c-l)/t,this.x=.25*t,this.y=(o+n)/t,this.z=(a+h)/t):s>f?(t=2*Math.sqrt(1+s-i-f),this.w=(a-h)/t,this.x=(o+n)/t,this.y=.25*t,this.z=(l+c)/t):(t=2*Math.sqrt(1+f-i-s),this.w=(n-o)/t,this.x=(a+h)/t,this.y=(l+c)/t,this.z=.25*t),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?(this.x=0,this.y=0,this.z=0,this.w=1):(e=1/e,this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e),this},multiply:function(e,t){var r=e.x,i=e.y,o=e.z,a=e.w,n=t.x,s=t.y,l=t.z,h=t.w;return this.x=r*h+i*l-o*s+a*n,this.y=-r*l+i*h+o*n+a*s,this.z=r*s-i*n+o*h+a*l,this.w=-r*n-i*s-o*l+a*h,this},multiplySelf:function(e){var t=this.x,r=this.y,i=this.z,o=this.w,a=e.x,n=e.y,s=e.z,l=e.w;return this.x=t*l+o*a+r*s-i*n,this.y=r*l+o*n+i*a-t*s,this.z=i*l+o*s+t*n-r*a,this.w=o*l-t*a-r*n-i*s,this},multiplyVector3:function(e,t){t||(t=e);var r=e.x,i=e.y,o=e.z,a=this.x,n=this.y,s=this.z,l=this.w,h=l*r+n*o-s*i,c=l*i+s*r-a*o,f=l*o+a*i-n*r,u=-a*r-n*i-s*o;return t.x=h*l+u*-a+c*-s-f*-n,t.y=c*l+u*-n+f*-a-h*-s,t.z=f*l+u*-s+h*-n-c*-a,t},slerpSelf:function(e,t){var r=this.x,i=this.y,o=this.z,a=this.w,n=a*e.w+r*e.x+i*e.y+o*e.z;if(n<0?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,n=-n):this.copy(e),n>=1)return this.w=a,this.x=r,this.y=i,this.z=o,this;var s=Math.acos(n),l=Math.sqrt(1-n*n);if(Math.abs(l)<.001)return this.w=.5*(a+this.w),this.x=.5*(r+this.x),this.y=.5*(i+this.y),this.z=.5*(o+this.z),this;var h=Math.sin((1-t)*s)/l,c=Math.sin(t*s)/l;return this.w=a*h+this.w*c,this.x=r*h+this.x*c,this.y=i*h+this.y*c,this.z=o*h+this.z*c,this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,r,i){var o=e.w*t.w+e.x*t.x+e.y*t.y+e.z*t.z;if(o<0?(r.w=-t.w,r.x=-t.x,r.y=-t.y,r.z=-t.z,o=-o):r.copy(t),Math.abs(o)>=1)return r.w=e.w,r.x=e.x,r.y=e.y,r.z=e.z,r;var a=Math.acos(o),n=Math.sqrt(1-o*o);if(Math.abs(n)<.001)return r.w=.5*(e.w+r.w),r.x=.5*(e.x+r.x),r.y=.5*(e.y+r.y),r.z=.5*(e.z+r.z),r;var s=Math.sin((1-i)*a)/n,l=Math.sin(i*a)/n;return r.w=e.w*s+r.w*l,r.x=e.x*s+r.x*l,r.y=e.y*s+r.y*l,r.z=e.z*s+r.z*l,r},THREE.Spline=function(e){function t(e,t,r,i,o,a,n){var s=.5*(r-e),l=.5*(i-t);return(2*(t-r)+s+l)*n+(-3*(t-r)-2*s-l)*a+s*o+t}this.points=e;var r,i,o,a,n,s,l,h,c,f=[],u={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,i=Math.floor(r),o=r-i,f[0]=0===i?i:i-1,f[1]=i,f[2]=i>this.points.length-2?this.points.length-1:i+1,f[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[f[0]],l=this.points[f[1]],h=this.points[f[2]],c=this.points[f[3]],a=o*o,n=o*a,u.x=t(s.x,l.x,h.x,c.x,o,a,n),u.y=t(s.y,l.y,h.y,c.y,o,a,n),u.z=t(s.z,l.z,h.z,c.z,o,a,n),u},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;e<r;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,o,a=0,n=0,s=0,l=new THREE.Vector3,h=new THREE.Vector3,c=[],f=0;for(c[0]=0,e||(e=100),i=this.points.length*e,l.copy(this.points[0]),t=1;t<i;t++)r=t/i,o=this.getPoint(r),h.copy(o),f+=h.distanceTo(l),l.copy(o),a=(this.points.length-1)*r,(n=Math.floor(a))!=s&&(c[n]=f,s=n);return c[c.length]=f,{chunks:c,total:f}},this.reparametrizeByArcLength=function(e){var t,r,i,o,a,n,s,l,h=[],c=new THREE.Vector3,f=this.getLength();for(h.push(c.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(n=f.chunks[t]-f.chunks[t-1],s=Math.ceil(e*n/f.total),o=(t-1)/(this.points.length-1),a=t/(this.points.length-1),r=1;r<s-1;r++)i=o+r*(1/s)*(a-o),l=this.getPoint(i),h.push(c.copy(l).clone());h.push(c.copy(this.points[t]).clone())}this.points=h}},THREE.Triangle=function(e,t,r){this.a=new THREE.Vector3,this.b=new THREE.Vector3,this.c=new THREE.Vector3,void 0!==e&&void 0!==t&&void 0!==r&&(this.a.copy(e),this.b.copy(t),this.c.copy(r))},THREE.Triangle.normal=function(e,t,r,i){var o=i||new THREE.Vector3;o.sub(r,t),THREE.Triangle.__v0.sub(e,t),o.crossSelf(THREE.Triangle.__v0);var a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)},THREE.Triangle.barycoordFromPoint=function(e,t,r,i,o){THREE.Triangle.__v0.sub(i,t),THREE.Triangle.__v1.sub(r,t),THREE.Triangle.__v2.sub(e,t);var a=THREE.Triangle.__v0.dot(THREE.Triangle.__v0),n=THREE.Triangle.__v0.dot(THREE.Triangle.__v1),s=THREE.Triangle.__v0.dot(THREE.Triangle.__v2),l=THREE.Triangle.__v1.dot(THREE.Triangle.__v1),h=THREE.Triangle.__v1.dot(THREE.Triangle.__v2),c=a*l-n*n,f=o||new THREE.Vector3;if(0==c)return f.set(-2,-1,-1);var u=1/c,p=(l*s-n*h)*u,E=(a*h-n*s)*u;return f.set(1-p-E,E,p)},THREE.Triangle.containsPoint=function(e,t,r,i){var o=THREE.Triangle.barycoordFromPoint(e,t,r,i,THREE.Triangle.__v3);return o.x>=0&&o.y>=0&&o.x+o.y<=1},THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){return THREE.Triangle.__v0.sub(this.c,this.b),THREE.Triangle.__v1.sub(this.a,this.b),.5*THREE.Triangle.__v0.crossSelf(THREE.Triangle.__v1).length()},midpoint:function(e){return(e||new THREE.Vector3).add(this.a,this.b).addSelf(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Triangle.__v0=new THREE.Vector3,THREE.Triangle.__v1=new THREE.Vector3,THREE.Triangle.__v2=new THREE.Vector3,THREE.Triangle.__v3=new THREE.Vector3,THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.startTime=Date.now(),this.oldTime=this.startTime,this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e},THREE.EventTarget=function(){var e={};this.addEventListener=function(t,r){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(r)&&e[t].push(r)},this.dispatchEvent=function(t){var r=e[t.type];if(void 0!==r)for(var i=0,o=r.length;i<o;i++)r[i](t)},this.removeEventListener=function(t,r){var i=e[t].indexOf(r);-1!==i&&e[t].splice(i,1)}},function(e){e.Raycaster=function(t,r,i,o){this.ray=new e.Ray(t,r),this.ray.direction.length()>0&&this.ray.direction.normalize(),this.near=i||0,this.far=o||1/0};var t=new e.Sphere,r=new e.Ray,i=new e.Plane,o=new e.Vector3,a=new e.Matrix4,n=function(e,t){return e.distance-t.distance},s=(new e.Vector3,new e.Vector3,new e.Vector3,function(n,s,l){if(n instanceof e.Particle){var h=s.ray.distanceToPoint(n.matrixWorld.getPosition());if(h>n.scale.x)return l;l.push({distance:h,point:n.position,face:null,object:n})}else if(n instanceof e.Mesh){if(t.set(n.matrixWorld.getPosition(),n.geometry.boundingSphere.radius*n.matrixWorld.getMaxScaleOnAxis()),!s.ray.isIntersectionSphere(t))return l;var c,f,u,p,E=n.geometry,d=E.vertices,m=n.material instanceof e.MeshFaceMaterial,g=!0===m?n.material.materials:null,v=n.material.side,T=s.precision;n.matrixRotationWorld.extractRotation(n.matrixWorld),a.getInverse(n.matrixWorld),r.copy(s.ray).transformSelf(a);for(var y=0,R=E.faces.length;y<R;y++){var x=E.faces[y],H=!0===m?g[x.materialIndex]:n.material;if(void 0!==H){i.setFromNormalAndCoplanarPoint(x.normal,d[x.a]);var _=r.distanceToPlane(i);if(!(Math.abs(_)<T||_<0)){if((v=H.side)!==e.DoubleSide){var b=r.direction.dot(i.normal);if(!(v===e.FrontSide?b<0:b>0))continue}if(!(_<s.near||_>s.far)){if(o=r.at(_,o),x instanceof e.Face3){if(c=d[x.a],f=d[x.b],u=d[x.c],!e.Triangle.containsPoint(o,c,f,u))continue}else{if(!(x instanceof e.Face4))throw Error("face type not supported");if(c=d[x.a],f=d[x.b],u=d[x.c],p=d[x.d],!e.Triangle.containsPoint(o,c,f,p)&&!e.Triangle.containsPoint(o,f,u,p))continue}l.push({distance:_,point:s.ray.at(_),face:x,faceIndex:y,object:n})}}}}}}),l=function(e,t,r){for(var i=e.getDescendants(),o=0,a=i.length;o<a;o++)s(i[o],t,r)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),this.ray.direction.length()>0&&this.ray.direction.normalize()},e.Raycaster.prototype.intersectObject=function(e,t){var r=[];return!0===t&&l(e,this,r),s(e,this,r),r.sort(n),r},e.Raycaster.prototype.intersectObjects=function(e,t){for(var r=[],i=0,o=e.length;i<o;i++)s(e[i],this,r),!0===t&&l(e[i],this,r);return r.sort(n),r}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiply(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix);var t=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(t,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.addSelf(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return this.matrixWorld.multiplyVector3(e)},worldToLocal:function(e){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(e)},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e!==this){if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}}else console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,this.children.splice(t,1);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,r=this.children.length;t<r;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var r=0,i=this.children.length;r<i;r++){var o=this.children[r];if(o.name===e)return o;if(!0===t&&void 0!==(o=o.getChildByName(e,t)))return o}},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,r=this.children.length;t<r;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),1===this.scale.x&&1===this.scale.y&&1===this.scale.z||(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==e||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.boundRadius=this.boundRadius,e.boundRadiusScale=this.boundRadiusScale,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;t<this.children.length;t++){var r=this.children[t];e.add(r.clone())}return e}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(o===d){var e=new THREE.RenderableObject;return E.push(e),d++,o++,e}return E[o++]}function t(){if(n===g){var e=new THREE.RenderableVertex;return m.push(e),g++,n++,e}return m[n++]}function r(e,t){return t.z-e.z}var i,o,a,n,s,l,h,c,f,u,p,E=[],d=0,m=[],g=0,v=[],T=0,y=[],R=0,x=[],H=0,_=[],b=0,S={objects:[],sprites:[],lights:[],elements:[]},w=new THREE.Vector3,M=new THREE.Vector4,C=new THREE.Matrix4,A=new THREE.Matrix4,L=new THREE.Matrix3,P=new THREE.Frustum,F=new THREE.Vector4,U=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),C.multiply(t.projectionMatrix,t.matrixWorldInverse),C.multiplyVector3(e),e},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),C.multiply(t.matrixWorld,t.projectionMatrixInverse),C.multiplyVector3(e),e},this.pickingRay=function(e,t){var r;return e.z=-1,r=new THREE.Vector3(e.x,e.y,1),this.unprojectVector(e,t),this.unprojectVector(r,t),r.subSelf(e).normalize(),new THREE.Raycaster(e,r)};this.projectScene=function(E,d,g,D){var z,N,B,V,I,O,G,k,W,j,X,Y,q,K,Z,Q,J,$,ee,te,re,ie,oe,ae,ne,se,le,he,ce,fe,ue=d.near,pe=d.far,Ee=!1;for(l=0,h=0,f=0,p=0,S.elements.length=0,E.updateMatrixWorld(),void 0===d.parent&&d.updateMatrixWorld(),d.matrixWorldInverse.getInverse(d.matrixWorld),C.multiply(d.projectionMatrix,d.matrixWorldInverse),P.setFromMatrix(C),z=0,N=(S=function(t,a){o=0,S.objects.length=0,S.sprites.length=0,S.lights.length=0;var n=function(t){for(var r=0,o=t.children.length;r<o;r++){var a=t.children[r];!1!==a.visible&&(a instanceof THREE.Light?S.lights.push(a):a instanceof THREE.Mesh||a instanceof THREE.Line?!1!==a.frustumCulled&&!0!==P.contains(a)||((i=e()).object=a,null!==a.renderDepth?i.z=a.renderDepth:(w.copy(a.matrixWorld.getPosition()),C.multiplyVector3(w),i.z=w.z),S.objects.push(i)):a instanceof THREE.Sprite||a instanceof THREE.Particle?((i=e()).object=a,null!==a.renderDepth?i.z=a.renderDepth:(w.copy(a.matrixWorld.getPosition()),C.multiplyVector3(w),i.z=w.z),S.sprites.push(i)):((i=e()).object=a,null!==a.renderDepth?i.z=a.renderDepth:(w.copy(a.matrixWorld.getPosition()),C.multiplyVector3(w),i.z=w.z),S.objects.push(i)),n(a))}};return n(t),!0===a&&S.objects.sort(r),S}(E,g)).objects.length;z<N;z++)if(q=S.objects[z].object,K=q.matrixWorld,n=0,q instanceof THREE.Mesh){for(Q=(Z=q.geometry).vertices,J=Z.faces,re=Z.faceVertexUvs,L.getInverse(K),L.transpose(),he=!0===(le=q.material instanceof THREE.MeshFaceMaterial)?q.material:null,fe=q.material.side,B=0,V=Q.length;B<V;B++)(a=t()).positionWorld.copy(Q[B]),K.multiplyVector3(a.positionWorld),a.positionScreen.copy(a.positionWorld),C.multiplyVector4(a.positionScreen),a.positionScreen.x/=a.positionScreen.w,a.positionScreen.y/=a.positionScreen.w,a.visible=a.positionScreen.z>ue&&a.positionScreen.z<pe;for(I=0,O=J.length;I<O;I++)if($=J[I],void 0!==(ce=!0===le?he.materials[$.materialIndex]:q.material)){if(fe=ce.side,$ instanceof THREE.Face3){if(oe=m[$.a],ae=m[$.b],ne=m[$.c],!0!==oe.visible||!0!==ae.visible||!0!==ne.visible)continue;if(Ee=(ne.positionScreen.x-oe.positionScreen.x)*(ae.positionScreen.y-oe.positionScreen.y)-(ne.positionScreen.y-oe.positionScreen.y)*(ae.positionScreen.x-oe.positionScreen.x)<0,fe!==THREE.DoubleSide&&Ee!==(fe===THREE.FrontSide))continue;(s=function(){if(l===T){var e=new THREE.RenderableFace3;return v.push(e),T++,l++,e}return v[l++]}()).v1.copy(oe),s.v2.copy(ae),s.v3.copy(ne)}else if($ instanceof THREE.Face4){if(oe=m[$.a],ae=m[$.b],ne=m[$.c],se=m[$.d],!0!==oe.visible||!0!==ae.visible||!0!==ne.visible||!0!==se.visible)continue;if(Ee=(se.positionScreen.x-oe.positionScreen.x)*(ae.positionScreen.y-oe.positionScreen.y)-(se.positionScreen.y-oe.positionScreen.y)*(ae.positionScreen.x-oe.positionScreen.x)<0||(ae.positionScreen.x-ne.positionScreen.x)*(se.positionScreen.y-ne.positionScreen.y)-(ae.positionScreen.y-ne.positionScreen.y)*(se.positionScreen.x-ne.positionScreen.x)<0,fe!==THREE.DoubleSide&&Ee!==(fe===THREE.FrontSide))continue;(s=function(){if(h===R){var e=new THREE.RenderableFace4;return y.push(e),R++,h++,e}return y[h++]}()).v1.copy(oe),s.v2.copy(ae),s.v3.copy(ne),s.v4.copy(se)}for(s.normalWorld.copy($.normal),!1!==Ee||fe!==THREE.BackSide&&fe!==THREE.DoubleSide||s.normalWorld.negate(),L.multiplyVector3(s.normalWorld).normalize(),s.centroidWorld.copy($.centroid),K.multiplyVector3(s.centroidWorld),s.centroidScreen.copy(s.centroidWorld),C.multiplyVector3(s.centroidScreen),G=0,k=(ee=$.vertexNormals).length;G<k;G++)(te=s.vertexNormalsWorld[G]).copy(ee[G]),!1!==Ee||fe!==THREE.BackSide&&fe!==THREE.DoubleSide||te.negate(),L.multiplyVector3(te).normalize();for(s.vertexNormalsLength=ee.length,W=0,j=re.length;W<j;W++)if(void 0!==(ie=re[W][I]))for(X=0,Y=ie.length;X<Y;X++)s.uvs[W][X]=ie[X];s.color=$.color,s.material=ce,s.z=s.centroidScreen.z,S.elements.push(s)}}else if(q instanceof THREE.Line){A.multiply(C,K),Q=q.geometry.vertices,(oe=t()).positionScreen.copy(Q[0]),A.multiplyVector4(oe.positionScreen);var de=q.type===THREE.LinePieces?2:1;for(B=1,V=Q.length;B<V;B++)(oe=t()).positionScreen.copy(Q[B]),A.multiplyVector4(oe.positionScreen),(B+1)%de>0||(ae=m[n-2],F.copy(oe.positionScreen),U.copy(ae.positionScreen),!0===function(e,t){var r=0,i=1,o=e.z+e.w,a=t.z+t.w,n=-e.z+e.w,s=-t.z+t.w;return o>=0&&a>=0&&n>=0&&s>=0||!(o<0&&a<0||n<0&&s<0)&&(o<0?r=Math.max(r,o/(o-a)):a<0&&(i=Math.min(i,o/(o-a))),n<0?r=Math.max(r,n/(n-s)):s<0&&(i=Math.min(i,n/(n-s))),!(i<r||(e.lerpSelf(t,r),t.lerpSelf(e,1-i),0)))}(F,U)&&(F.multiplyScalar(1/F.w),U.multiplyScalar(1/U.w),(c=function(){if(f===H){var e=new THREE.RenderableLine;return x.push(e),H++,f++,e}return x[f++]}()).v1.positionScreen.copy(F),c.v2.positionScreen.copy(U),c.z=Math.max(F.z,U.z),c.material=q.material,S.elements.push(c)))}for(z=0,N=S.sprites.length;z<N;z++)K=(q=S.sprites[z].object).matrixWorld,q instanceof THREE.Particle&&(M.set(K.elements[12],K.elements[13],K.elements[14],1),C.multiplyVector4(M),M.z/=M.w,M.z>0&&M.z<1&&((u=function(){if(p===b){var e=new THREE.RenderableParticle;return _.push(e),b++,p++,e}return _[p++]}()).object=q,u.x=M.x/M.w,u.y=M.y/M.w,u.z=M.z,u.rotation=q.rotation.z,u.scale.x=q.scale.x*Math.abs(u.x-(M.x+d.projectionMatrix.elements[0])/(M.w+d.projectionMatrix.elements[12])),u.scale.y=q.scale.y*Math.abs(u.y-(M.y+d.projectionMatrix.elements[5])/(M.w+d.projectionMatrix.elements[13])),u.material=q.material,S.elements.push(u)));return!0===D&&S.elements.sort(r),S}},THREE.Face3=function(e,t,r,i,o,a){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;t<r;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;t<r;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;t<r;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,o,a,n){this.a=e,this.b=t,this.c=r,this.d=i,this.normal=o instanceof THREE.Vector3?o:new THREE.Vector3,this.vertexNormals=o instanceof Array?o:[],this.color=a instanceof THREE.Color?a:new THREE.Color,this.vertexColors=a instanceof Array?a:[],this.vertexTangents=[],this.materialIndex=void 0!==n?n:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;t<r;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;t<r;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;t<r;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){var t=new THREE.Matrix3;t.getInverse(e).transpose();for(var r=0,i=this.vertices.length;r<i;r++){var o=this.vertices[r];e.multiplyVector3(o)}for(var r=0,i=this.faces.length;r<i;r++){var a=this.faces[r];t.multiplyVector3(a.normal).normalize();for(var n=0,s=a.vertexNormals.length;n<s;n++)t.multiplyVector3(a.vertexNormals[n]).normalize();e.multiplyVector3(a.centroid)}},computeCentroids:function(){var e,t,r;for(e=0,t=this.faces.length;e<t;e++)(r=this.faces[e]).centroid.set(0,0,0),r instanceof THREE.Face3?(r.centroid.addSelf(this.vertices[r.a]),r.centroid.addSelf(this.vertices[r.b]),r.centroid.addSelf(this.vertices[r.c]),r.centroid.divideScalar(3)):r instanceof THREE.Face4&&(r.centroid.addSelf(this.vertices[r.a]),r.centroid.addSelf(this.vertices[r.b]),r.centroid.addSelf(this.vertices[r.c]),r.centroid.addSelf(this.vertices[r.d]),r.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,r,i,o,a,n=new THREE.Vector3,s=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)r=this.faces[e],i=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],n.sub(a,o),s.sub(i,o),n.crossSelf(s),n.normalize(),r.normal.copy(n)},computeVertexNormals:function(e){var t,r,i,o,a,n;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),n=this.__tmpVertices,t=0,r=this.vertices.length;t<r;t++)n[t]=new THREE.Vector3;for(i=0,o=this.faces.length;i<o;i++)(a=this.faces[i])instanceof THREE.Face3?a.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:a instanceof THREE.Face4&&(a.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(n=this.__tmpVertices,t=0,r=this.vertices.length;t<r;t++)n[t].set(0,0,0);if(e){var s,l,h,c,f=new THREE.Vector3,u=new THREE.Vector3,p=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3;for(i=0,o=this.faces.length;i<o;i++)(a=this.faces[i])instanceof THREE.Face3?(s=this.vertices[a.a],l=this.vertices[a.b],h=this.vertices[a.c],f.sub(h,l),u.sub(s,l),f.crossSelf(u),n[a.a].addSelf(f),n[a.b].addSelf(f),n[a.c].addSelf(f)):a instanceof THREE.Face4&&(s=this.vertices[a.a],l=this.vertices[a.b],h=this.vertices[a.c],c=this.vertices[a.d],p.sub(c,l),u.sub(s,l),p.crossSelf(u),n[a.a].addSelf(p),n[a.b].addSelf(p),n[a.d].addSelf(p),E.sub(c,h),d.sub(l,h),E.crossSelf(d),n[a.b].addSelf(E),n[a.c].addSelf(E),n[a.d].addSelf(E))}else for(i=0,o=this.faces.length;i<o;i++)(a=this.faces[i])instanceof THREE.Face3?(n[a.a].addSelf(a.normal),n[a.b].addSelf(a.normal),n[a.c].addSelf(a.normal)):a instanceof THREE.Face4&&(n[a.a].addSelf(a.normal),n[a.b].addSelf(a.normal),n[a.c].addSelf(a.normal),n[a.d].addSelf(a.normal));for(t=0,r=this.vertices.length;t<r;t++)n[t].normalize();for(i=0,o=this.faces.length;i<o;i++)(a=this.faces[i])instanceof THREE.Face3?(a.vertexNormals[0].copy(n[a.a]),a.vertexNormals[1].copy(n[a.b]),a.vertexNormals[2].copy(n[a.c])):a instanceof THREE.Face4&&(a.vertexNormals[0].copy(n[a.a]),a.vertexNormals[1].copy(n[a.b]),a.vertexNormals[2].copy(n[a.c]),a.vertexNormals[3].copy(n[a.d]))},computeMorphNormals:function(){var e,t,r,i,o;for(r=0,i=this.faces.length;r<i;r++)for((o=this.faces[r]).__originalFaceNormal?o.__originalFaceNormal.copy(o.normal):o.__originalFaceNormal=o.normal.clone(),o.__originalVertexNormals||(o.__originalVertexNormals=[]),e=0,t=o.vertexNormals.length;e<t;e++)o.__originalVertexNormals[e]?o.__originalVertexNormals[e].copy(o.vertexNormals[e]):o.__originalVertexNormals[e]=o.vertexNormals[e].clone();var a=new THREE.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var n=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)o=this.faces[r],h=new THREE.Vector3,c=o instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},n.push(h),s.push(c)}var l=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var h,c;for(r=0,i=this.faces.length;r<i;r++)o=this.faces[r],h=l.faceNormals[r],c=l.vertexNormals[r],h.copy(o.normal),o instanceof THREE.Face3?(c.a.copy(o.vertexNormals[0]),c.b.copy(o.vertexNormals[1]),c.c.copy(o.vertexNormals[2])):(c.a.copy(o.vertexNormals[0]),c.b.copy(o.vertexNormals[1]),c.c.copy(o.vertexNormals[2]),c.d.copy(o.vertexNormals[3]))}for(r=0,i=this.faces.length;r<i;r++)(o=this.faces[r]).normal=o.__originalFaceNormal,o.vertexNormals=o.__originalVertexNormals},computeTangents:function(){function e(e,t,r,i,o,a,n){h=e.vertices[t],c=e.vertices[r],f=e.vertices[i],u=l[o],p=l[a],E=l[n],d=c.x-h.x,m=f.x-h.x,g=c.y-h.y,v=f.y-h.y,T=c.z-h.z,y=f.z-h.z,R=p.x-u.x,x=E.x-u.x,H=p.y-u.y,_=E.y-u.y,b=1/(R*_-x*H),A.set((_*d-H*m)*b,(_*g-H*v)*b,(_*T-H*y)*b),L.set((R*m-x*d)*b,(R*v-x*g)*b,(R*y-x*T)*b),M[t].addSelf(A),M[r].addSelf(A),M[i].addSelf(A),C[t].addSelf(L),C[r].addSelf(L),C[i].addSelf(L)}var t,r,i,o,a,n,s,l,h,c,f,u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w,M=[],C=[],A=new THREE.Vector3,L=new THREE.Vector3,P=new THREE.Vector3,F=new THREE.Vector3,U=new THREE.Vector3;for(i=0,o=this.vertices.length;i<o;i++)M[i]=new THREE.Vector3,C[i]=new THREE.Vector3;for(t=0,r=this.faces.length;t<r;t++)s=this.faces[t],l=this.faceVertexUvs[0][t],s instanceof THREE.Face3?e(this,s.a,s.b,s.c,0,1,2):s instanceof THREE.Face4&&(e(this,s.a,s.b,s.d,0,1,3),e(this,s.b,s.c,s.d,1,2,3));var D=["a","b","c","d"];for(t=0,r=this.faces.length;t<r;t++)for(s=this.faces[t],a=0;a<s.vertexNormals.length;a++)U.copy(s.vertexNormals[a]),n=s[D[a]],S=M[n],P.copy(S),P.subSelf(U.multiplyScalar(U.dot(S))).normalize(),F.cross(s.vertexNormals[a],S),w=F.dot(C[n])<0?-1:1,s.vertexTangents[a]=new THREE.Vector4(P.x,P.y,P.z,w);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;r<i;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e,t,r,i,o,a,n,s,l,h,c={},f=[],u=[],p=Math.pow(10,4);for(r=0,i=this.vertices.length;r<i;r++)e=this.vertices[r],void 0===c[t=[Math.round(e.x*p),Math.round(e.y*p),Math.round(e.z*p)].join("_")]?(c[t]=r,f.push(this.vertices[r]),u[r]=f.length-1):u[r]=u[c[t]];for(r=0,i=this.faces.length;r<i;r++)if((o=this.faces[r])instanceof THREE.Face3)o.a=u[o.a],o.b=u[o.b],o.c=u[o.c];else if(o instanceof THREE.Face4)for(o.a=u[o.a],o.b=u[o.b],o.c=u[o.c],o.d=u[o.d],a=[o.a,o.b,o.c,o.d],n=3;n>0;n--)if(a.indexOf(o["abcd"[n]])!==n){for(a.splice(n,1),this.faces[r]=new THREE.Face3(a[0],a[1],a[2],o.normal,o.color,o.materialIndex),s=0,l=this.faceVertexUvs.length;s<l;s++)(h=this.faceVertexUvs[s][r])&&h.splice(n,1);this.faces[r].vertexColors=o.vertexColors;break}var E=this.vertices.length-f.length;return this.vertices=f,E},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;r<i;r++)e.vertices.push(t[r].clone());for(var o=this.faces,r=0,i=o.length;r<i;r++)e.faces.push(o[r].clone());for(var a=this.faceVertexUvs[0],r=0,i=a.length;r<i;r++){for(var n=a[r],s=[],l=0,h=n.length;l<h;l++)s.push(new THREE.Vector2(n[l].x,n[l].y));e.faceVertexUvs[0].push(s)}return e}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,r;if(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(r=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==r){var i=new THREE.Matrix3;i.getInverse(e).transpose(),i.multiplyVector3Array(r),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,r,i,o=this.boundingBox;e.length>=3&&(o.min.x=o.max.x=e[0],o.min.y=o.max.y=e[1],o.min.z=o.max.z=e[2]);for(var a=3,n=e.length;a<n;a+=3)t=e[a],r=e[a+1],i=e[a+2],t<o.min.x?o.min.x=t:t>o.max.x&&(o.max.x=t),r<o.min.y?o.min.y=r:r>o.max.y&&(o.max.y=r),i<o.min.z?o.min.z=i:i>o.max.z&&(o.max.z=i)}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,r,i,o,a=0,n=0,s=e.length;n<s;n+=3)(t=(r=e[n])*r+(i=e[n+1])*i+(o=e[n+2])*o)>a&&(a=t);this.boundingSphere.radius=Math.sqrt(a)}},computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i,o=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(o),numItems:o};else for(e=0,t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0;var a,n,s,l,h,c,f=this.attributes.position.array,u=this.attributes.normal.array,p=new THREE.Vector3,E=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,T=this.offsets;for(r=0,i=T.length;r<i;++r){var y=T[r].start,R=T[r].count,x=T[r].index;for(e=y,t=y+R;e<t;e+=3)a=x+v[e],n=x+v[e+1],s=x+v[e+2],l=f[3*a],h=f[3*a+1],c=f[3*a+2],p.set(l,h,c),l=f[3*n],h=f[3*n+1],c=f[3*n+2],E.set(l,h,c),l=f[3*s],h=f[3*s+1],c=f[3*s+2],d.set(l,h,c),m.sub(d,E),g.sub(p,E),m.crossSelf(g),u[3*a]+=m.x,u[3*a+1]+=m.y,u[3*a+2]+=m.z,u[3*n]+=m.x,u[3*n+1]+=m.y,u[3*n+2]+=m.z,u[3*s]+=m.x,u[3*s+1]+=m.y,u[3*s+2]+=m.z}}else for(e=0,t=f.length;e<t;e+=9)l=f[e],h=f[e+1],c=f[e+2],p.set(l,h,c),l=f[e+3],h=f[e+4],c=f[e+5],E.set(l,h,c),l=f[e+6],h=f[e+7],c=f[e+8],d.set(l,h,c),m.sub(d,E),g.sub(p,E),m.crossSelf(g),u[e]=m.x,u[e+1]=m.y,u[e+2]=m.z,u[e+3]=m.x,u[e+4]=m.y,u[e+5]=m.z,u[e+6]=m.x,u[e+7]=m.y,u[e+8]=m.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,r,i,o=this.attributes.normal.array,a=0,n=o.length;a<n;a+=3)e=o[a],t=o[a+1],r=o[a+2],i=1/Math.sqrt(e*e+t*t+r*r),o[a]*=i,o[a+1]*=i,o[a+2]*=i},computeTangents:function(){function e(e,t,r){u=i[3*e],p=i[3*e+1],E=i[3*e+2],d=i[3*t],m=i[3*t+1],g=i[3*t+2],v=i[3*r],T=i[3*r+1],y=i[3*r+2],R=a[2*e],x=a[2*e+1],H=a[2*t],_=a[2*t+1],b=a[2*r],S=a[2*r+1],w=d-u,M=v-u,C=m-p,A=T-p,L=g-E,P=y-E,N=1/((F=H-R)*(z=S-x)-(U=b-R)*(D=_-x)),j.set((z*w-D*M)*N,(z*C-D*A)*N,(z*L-D*P)*N),X.set((F*M-U*w)*N,(F*A-U*C)*N,(F*P-U*L)*N),h[e].addSelf(j),h[t].addSelf(j),h[r].addSelf(j),c[e].addSelf(X),c[t].addSelf(X),c[r].addSelf(X)}function t(e){re.x=o[3*e],re.y=o[3*e+1],re.z=o[3*e+2],ie.copy(re),J=h[e],ee.copy(J),ee.subSelf(re.multiplyScalar(re.dot(J))).normalize(),te.cross(ie,J),$=te.dot(c[e]),Q=$<0?-1:1,l[4*e]=ee.x,l[4*e+1]=ee.y,l[4*e+2]=ee.z,l[4*e+3]=Q}if(void 0!==this.attributes.index&&void 0!==this.attributes.position&&void 0!==this.attributes.normal&&void 0!==this.attributes.uv){var r=this.attributes.index.array,i=this.attributes.position.array,o=this.attributes.normal.array,a=this.attributes.uv.array,n=i.length/3;if(void 0===this.attributes.tangent){var s=4*n;this.attributes.tangent={itemSize:4,array:new Float32Array(s),numItems:s}}for(var l=this.attributes.tangent.array,h=[],c=[],f=0;f<n;f++)h[f]=new THREE.Vector3,c[f]=new THREE.Vector3;var u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w,M,C,A,L,P,F,U,D,z,N,B,V,I,O,G,k,W,j=new THREE.Vector3,X=new THREE.Vector3,Y=this.offsets;for(I=0,O=Y.length;I<O;++I){var q=Y[I].start,K=Y[I].count,Z=Y[I].index;for(B=q,V=q+K;B<V;B+=3)e(G=Z+r[B],k=Z+r[B+1],W=Z+r[B+2])}var Q,J,$,ee=new THREE.Vector3,te=new THREE.Vector3,re=new THREE.Vector3,ie=new THREE.Vector3;for(I=0,O=Y.length;I<O;++I){var q=Y[I].start,K=Y[I].count,Z=Y[I].index;for(B=q,V=q+K;B<V;B+=3)G=Z+r[B],k=Z+r[B+1],W=Z+r[B+2],t(G),t(k),t(W)}this.hasTangents=!0,this.tangentsNeedUpdate=!0}else console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,r,i,o,a){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==o?o:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*Math.atan(t/(2*e))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,o,a){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=o,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(this.fov*Math.PI/360)*this.near,r=-t,i=e*r,o=e*t,a=Math.abs(o-i),n=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,r,i,o){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/2,this.exponent=void 0!==o?o:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";e.total?t+=(100*e.loaded/e.total).toFixed(0)+"%":t+=(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=THREE.Loader.prototype.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;t<r;t++){if(e[t]instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){function r(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function i(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function o(e,o,a,s,l,h,c){var f=a.toLowerCase().endsWith(".dds"),u=t+"/"+a;if(f){p=THREE.ImageUtils.loadCompressedTexture(u);e[o]=p}else{var p=document.createElement("canvas");e[o]=new THREE.Texture(p)}if(e[o].sourceFile=a,s&&(e[o].repeat.set(s[0],s[1]),1!==s[0]&&(e[o].wrapS=THREE.RepeatWrapping),1!==s[1]&&(e[o].wrapT=THREE.RepeatWrapping)),l&&e[o].offset.set(l[0],l[1]),h){var E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==E[h[0]]&&(e[o].wrapS=E[h[0]]),void 0!==E[h[1]]&&(e[o].wrapT=E[h[1]])}c&&(e[o].anisotropy=c),f||function(e,t){var o=new Image;o.onload=function(){if(r(this.width)&&r(this.height))e.image=this;else{var t=i(this.width),o=i(this.height);e.image.width=t,e.image.height=o,e.image.getContext("2d").drawImage(this,0,0,t,o)}e.needsUpdate=!0},o.crossOrigin=n.crossOrigin,o.src=t}(e[o],u)}function a(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var n=this,s="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?s="MeshPhongMaterial":"basic"===h&&(s="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==THREE[e.blending]&&(l.blending=THREE[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(l.transparent=e.transparent),void 0!==e.depthTest&&(l.depthTest=e.depthTest),void 0!==e.depthWrite&&(l.depthWrite=e.depthWrite),void 0!==e.visible&&(l.visible=e.visible),void 0!==e.flipSided&&(l.side=THREE.BackSide),void 0!==e.doubleSided&&(l.side=THREE.DoubleSide),void 0!==e.wireframe&&(l.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?l.vertexColors=THREE.FaceColors:e.vertexColors&&(l.vertexColors=THREE.VertexColors)),e.colorDiffuse?l.color=a(e.colorDiffuse):e.DbgColor&&(l.color=e.DbgColor),e.colorSpecular&&(l.specular=a(e.colorSpecular)),e.colorAmbient&&(l.ambient=a(e.colorAmbient)),e.transparency&&(l.opacity=e.transparency),e.specularCoef&&(l.shininess=e.specularCoef),e.mapDiffuse&&t&&o(l,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&o(l,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&o(l,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&o(l,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&o(l,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(l.bumpScale=e.mapBumpScale),e.mapNormal){var c=THREE.ShaderUtils.lib.normal,f=THREE.UniformsUtils.clone(c.uniforms);f.tNormal.value=l.normalMap,e.mapNormalFactor&&f.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),l.map&&(f.tDiffuse.value=l.map,f.enableDiffuse.value=!0),l.specularMap&&(f.tSpecular.value=l.specularMap,f.enableSpecular.value=!0),l.lightMap&&(f.tAO.value=l.lightMap,f.enableAO.value=!0),f.uDiffuseColor.value.setHex(l.color),f.uSpecularColor.value.setHex(l.specular),f.uAmbientColor.value.setHex(l.ambient),f.uShininess.value=l.shininess,void 0!==l.opacity&&(f.uOpacity.value=l.opacity);var u={fragmentShader:c.fragmentShader,vertexShader:c.vertexShader,uniforms:f,lights:!0,fog:!0},p=new THREE.ShaderMaterial(u);l.transparent&&(p.transparent=!0)}else p=new THREE[s](l);return void 0!==e.DbgName&&(p.name=e.DbgName),p}},THREE.BinaryLoader=function(e){THREE.Loader.call(this,e)},THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype),THREE.BinaryLoader.prototype.load=function(e,t,r,i){r=r&&"string"==typeof r?r:this.extractUrlBase(e),i=i&&"string"==typeof i?i:this.extractUrlBase(e);var o=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart(),this.loadAjaxJSON(this,e,t,r,i,o)},THREE.BinaryLoader.prototype.loadAjaxJSON=function(e,t,r,i,o,a){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4==n.readyState)if(200==n.status||0==n.status){var s=JSON.parse(n.responseText);e.loadAjaxBuffers(s,r,o,i,a)}else console.error("THREE.BinaryLoader: Couldn't load ["+t+"] ["+n.status+"]")},n.open("GET",t,!0),n.send(null)},THREE.BinaryLoader.prototype.loadAjaxBuffers=function(e,t,r,i,o){var a=new XMLHttpRequest,n=r+"/"+e.buffers,s=0;a.onreadystatechange=function(){if(4==a.readyState)if(200==a.status||0==a.status){var r=a.response;void 0===r&&(r=new Uint8Array(a.responseBody).buffer),THREE.BinaryLoader.prototype.createBinModel(r,t,i,e.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+n+"] ["+a.status+"]");else 3==a.readyState?o&&(0==s&&(s=a.getResponseHeader("Content-Length")),o({total:s,loaded:a.responseText.length})):2==a.readyState&&(s=a.getResponseHeader("Content-Length"))},a.open("GET",n,!0),a.responseType="arraybuffer",a.send(null)},THREE.BinaryLoader.prototype.createBinModel=function(e,t,r,i){var o=function(t){function r(e){return e%4?4-e%4:0}function i(e,t){return new Uint8Array(e,t,1)[0]}function o(e,t){return new Uint32Array(e,t,1)[0]}function a(t,r){var i,o,a,n,s,l,h,c,f,u,p=new Uint32Array(e,r,3*t);for(i=0;i<t;i++)o=p[3*i],a=p[3*i+1],n=p[3*i+2],s=P[2*o],c=P[2*o+1],l=P[2*a],f=P[2*a+1],h=P[2*n],u=P[2*n+1],function(e,t,r,i,o,a,n){e.push([new THREE.Vector2(t,r),new THREE.Vector2(i,o),new THREE.Vector2(a,n)])}(C.faceVertexUvs[0],s,c,l,f,h,u)}function n(t,r){var i,o,a,n,s,l,h,c,f,u,p,E,d,m=new Uint32Array(e,r,4*t);for(i=0;i<t;i++)o=m[4*i],a=m[4*i+1],n=m[4*i+2],s=m[4*i+3],l=P[2*o],u=P[2*o+1],h=P[2*a],p=P[2*a+1],c=P[2*n],E=P[2*n+1],f=P[2*s],d=P[2*s+1],function(e,t,r,i,o,a,n,s,l){e.push([new THREE.Vector2(t,r),new THREE.Vector2(i,o),new THREE.Vector2(a,n),new THREE.Vector2(s,l)])}(C.faceVertexUvs[0],l,u,h,p,c,E,f,d)}function s(t,r,i){var o,a,n,s,l,h=new Uint32Array(e,r,3*t),c=new Uint16Array(e,i,t);for(o=0;o<t;o++)a=h[3*o],n=h[3*o+1],s=h[3*o+2],l=c[o],function(e,t,r,i,o){e.faces.push(new THREE.Face3(t,r,i,null,null,o))}(C,a,n,s,l)}function l(t,r,i){var o,a,n,s,l,h,c=new Uint32Array(e,r,4*t),f=new Uint16Array(e,i,t);for(o=0;o<t;o++)a=c[4*o],n=c[4*o+1],s=c[4*o+2],l=c[4*o+3],h=f[o],function(e,t,r,i,o,a){e.faces.push(new THREE.Face4(t,r,i,o,null,null,a))}(C,a,n,s,l,h)}function h(t,r,i,o){var a,n,s,l,h,c,f,u,p=new Uint32Array(e,r,3*t),E=new Uint32Array(e,i,3*t),d=new Uint16Array(e,o,t);for(a=0;a<t;a++)n=p[3*a],s=p[3*a+1],l=p[3*a+2],c=E[3*a],f=E[3*a+1],u=E[3*a+2],h=d[a],function(e,t,r,i,o,a,n,s,l){var h=t[3*n],c=t[3*n+1],f=t[3*n+2],u=t[3*s],p=t[3*s+1],E=t[3*s+2],d=t[3*l],m=t[3*l+1],g=t[3*l+2];e.faces.push(new THREE.Face3(r,i,o,[new THREE.Vector3(h,c,f),new THREE.Vector3(u,p,E),new THREE.Vector3(d,m,g)],null,a))}(C,L,n,s,l,h,c,f,u)}function c(t,r,i,o){var a,n,s,l,h,c,f,u,p,E,d=new Uint32Array(e,r,4*t),m=new Uint32Array(e,i,4*t),g=new Uint16Array(e,o,t);for(a=0;a<t;a++)n=d[4*a],s=d[4*a+1],l=d[4*a+2],h=d[4*a+3],f=m[4*a],u=m[4*a+1],p=m[4*a+2],E=m[4*a+3],c=g[a],function(e,t,r,i,o,a,n,s,l,h,c){var f=t[3*s],u=t[3*s+1],p=t[3*s+2],E=t[3*l],d=t[3*l+1],m=t[3*l+2],g=t[3*h],v=t[3*h+1],T=t[3*h+2],y=t[3*c],R=t[3*c+1],x=t[3*c+2];e.faces.push(new THREE.Face4(r,i,o,a,[new THREE.Vector3(f,u,p),new THREE.Vector3(E,d,m),new THREE.Vector3(g,v,T),new THREE.Vector3(y,R,x)],null,n))}(C,L,n,s,l,h,c,f,u,p,E)}var f,u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w,M,C=this,A=0,L=[],P=[];THREE.Geometry.call(this),A+=(f=function(e,t){return{signature:function(e,t,r){for(var i=new Uint8Array(e,t,r),o="",a=0;a<r;a++)o+=String.fromCharCode(i[t+a]);return o}(e,t,12),header_bytes:i(e,t+12),vertex_coordinate_bytes:i(e,t+13),normal_coordinate_bytes:i(e,t+14),uv_coordinate_bytes:i(e,t+15),vertex_index_bytes:i(e,t+16),normal_index_bytes:i(e,t+17),uv_index_bytes:i(e,t+18),material_index_bytes:i(e,t+19),nvertices:o(e,t+20),nnormals:o(e,t+20+4),nuvs:o(e,t+20+8),ntri_flat:o(e,t+20+12),ntri_smooth:o(e,t+20+16),ntri_flat_uv:o(e,t+20+20),ntri_smooth_uv:o(e,t+20+24),nquad_flat:o(e,t+20+28),nquad_smooth:o(e,t+20+32),nquad_flat_uv:o(e,t+20+36),nquad_smooth_uv:o(e,t+20+40)}}(e,A)).header_bytes,y=3*f.vertex_index_bytes+f.material_index_bytes,R=4*f.vertex_index_bytes+f.material_index_bytes,x=f.ntri_flat*y,H=f.ntri_smooth*(y+3*f.normal_index_bytes),_=f.ntri_flat_uv*(y+3*f.uv_index_bytes),b=f.ntri_smooth_uv*(y+3*f.normal_index_bytes+3*f.uv_index_bytes),S=f.nquad_flat*R,w=f.nquad_smooth*(R+4*f.normal_index_bytes),M=f.nquad_flat_uv*(R+4*f.uv_index_bytes),f.nquad_smooth_uv,f.normal_index_bytes,f.uv_index_bytes,A+=function(t){var r,i,o,a,n=f.nvertices,s=new Float32Array(e,t,3*n);for(r=0;r<n;r++)i=s[3*r],o=s[3*r+1],a=s[3*r+2],function(e,t,r,i){e.vertices.push(new THREE.Vector3(t,r,i))}(C,i,o,a);return 3*n*Float32Array.BYTES_PER_ELEMENT}(A),A+=function(t){var r=f.nnormals;if(r){var i,o,a,n,s=new Int8Array(e,t,3*r);for(i=0;i<r;i++)o=s[3*i],a=s[3*i+1],n=s[3*i+2],L.push(o/127,a/127,n/127)}return 3*r*Int8Array.BYTES_PER_ELEMENT}(A),A+=r(3*f.nnormals),T=(v=(g=(m=(d=(E=(p=(u=A+=function(t){var r=f.nuvs;if(r){var i,o,a,n=new Float32Array(e,t,2*r);for(i=0;i<r;i++)o=n[2*i],a=n[2*i+1],P.push(o,a)}return 2*r*Float32Array.BYTES_PER_ELEMENT}(A))+x+r(2*f.ntri_flat))+H+r(2*f.ntri_smooth))+_+r(2*f.ntri_flat_uv))+b+r(2*f.ntri_smooth_uv))+S+r(2*f.nquad_flat))+w+r(2*f.nquad_smooth))+M+r(2*f.nquad_flat_uv),function(e){var t=f.ntri_flat_uv;if(t){var r=e+t*Uint32Array.BYTES_PER_ELEMENT*3;s(t,e,r+t*Uint32Array.BYTES_PER_ELEMENT*3),a(t,r)}}(E),function(e){var t=f.ntri_smooth_uv;if(t){var r=e+t*Uint32Array.BYTES_PER_ELEMENT*3,i=r+t*Uint32Array.BYTES_PER_ELEMENT*3;h(t,e,r,i+t*Uint32Array.BYTES_PER_ELEMENT*3),a(t,i)}}(d),function(e){var t=f.nquad_flat_uv;if(t){var r=e+t*Uint32Array.BYTES_PER_ELEMENT*4;l(t,e,r+t*Uint32Array.BYTES_PER_ELEMENT*4),n(t,r)}}(v),function(e){var t=f.nquad_smooth_uv;if(t){var r=e+t*Uint32Array.BYTES_PER_ELEMENT*4,i=r+t*Uint32Array.BYTES_PER_ELEMENT*4;c(t,e,r,i+t*Uint32Array.BYTES_PER_ELEMENT*4),n(t,i)}}(T),function(e){var t=f.ntri_flat;t&&s(t,e,e+t*Uint32Array.BYTES_PER_ELEMENT*3)}(u),function(e){var t=f.ntri_smooth;if(t){var r=e+t*Uint32Array.BYTES_PER_ELEMENT*3;h(t,e,r,r+t*Uint32Array.BYTES_PER_ELEMENT*3)}}(p),function(e){var t=f.nquad_flat;t&&l(t,e,e+t*Uint32Array.BYTES_PER_ELEMENT*4)}(m),function(e){var t=f.nquad_smooth;if(t){var r=e+t*Uint32Array.BYTES_PER_ELEMENT*4;c(t,e,r,r+t*Uint32Array.BYTES_PER_ELEMENT*4)}}(g),this.computeCentroids(),this.computeFaceNormals()};o.prototype=Object.create(THREE.Geometry.prototype);var a=new o(r),n=this.initMaterials(i,r);this.needsTangents(n)&&a.computeTangents(),t(a,n)},THREE.ImageLoader=function(){THREE.EventTarget.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var r=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){r.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){r.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),r.crossOrigin&&(t.crossOrigin=r.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,o){var a=new XMLHttpRequest,n=0;a.withCredentials=this.withCredentials,a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText);e.createModel(s,r,i)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+a.status+"]");else a.readyState===a.LOADING?o&&(0===n&&(n=a.getResponseHeader("Content-Length")),o({total:n,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&(n=a.getResponseHeader("Content-Length"))},a.open("GET",t,!0),a.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,r){var i=new THREE.Geometry,o=void 0!==e.scale?1/e.scale:1;!function(t){function r(e,t){return e&1<<t}var o,a,n,s,l,h,c,f,u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w,M,C,A,L=e.faces,P=e.vertices,F=e.normals,U=e.colors,D=0;for(o=0;o<e.uvs.length;o++)e.uvs[o].length&&D++;for(o=0;o<D;o++)i.faceUvs[o]=[],i.faceVertexUvs[o]=[];for(s=0,l=P.length;s<l;)(H=new THREE.Vector3).x=P[s++]*t,H.y=P[s++]*t,H.z=P[s++]*t,i.vertices.push(H);for(s=0,l=L.length;s<l;){if(E=L[s++],d=r(E,0),m=r(E,1),g=r(E,2),v=r(E,3),T=r(E,4),y=r(E,5),R=r(E,6),x=r(E,7),d?((_=new THREE.Face4).a=L[s++],_.b=L[s++],_.c=L[s++],_.d=L[s++],h=4):((_=new THREE.Face3).a=L[s++],_.b=L[s++],_.c=L[s++],h=3),m&&(p=L[s++],_.materialIndex=p),n=i.faces.length,g)for(o=0;o<D;o++)C=(w=e.uvs[o])[2*(u=L[s++])],A=w[2*u+1],i.faceUvs[o][n]=new THREE.Vector2(C,A);if(v)for(o=0;o<D;o++){for(w=e.uvs[o],M=[],a=0;a<h;a++)C=w[2*(u=L[s++])],A=w[2*u+1],M[a]=new THREE.Vector2(C,A);i.faceVertexUvs[o][n]=M}if(T&&(f=3*L[s++],(S=new THREE.Vector3).x=F[f++],S.y=F[f++],S.z=F[f],_.normal=S),y)for(o=0;o<h;o++)f=3*L[s++],(S=new THREE.Vector3).x=F[f++],S.y=F[f++],S.z=F[f],_.vertexNormals.push(S);if(R&&(c=L[s++],b=new THREE.Color(U[c]),_.color=b),x)for(o=0;o<h;o++)c=L[s++],b=new THREE.Color(U[c]),_.vertexColors.push(b);i.faces.push(_)}}(o),function(){var t,r,o,a,n,s,l,h,c,f;if(e.skinWeights)for(t=0,r=e.skinWeights.length;t<r;t+=2)o=e.skinWeights[t],a=e.skinWeights[t+1],n=0,s=0,i.skinWeights.push(new THREE.Vector4(o,a,n,s));if(e.skinIndices)for(t=0,r=e.skinIndices.length;t<r;t+=2)l=e.skinIndices[t],h=e.skinIndices[t+1],c=0,f=0,i.skinIndices.push(new THREE.Vector4(l,h,c,f));i.bones=e.bones,i.animation=e.animation}(),function(t){if(void 0!==e.morphTargets){var r,o,a,n;for(l=0,h=e.morphTargets.length;l<h;l++)for(i.morphTargets[l]={},i.morphTargets[l].name=e.morphTargets[l].name,i.morphTargets[l].vertices=[],a=i.morphTargets[l].vertices,r=0,o=(n=e.morphTargets[l].vertices).length;r<o;r+=3){var s=new THREE.Vector3;s.x=n[r]*t,s.y=n[r+1]*t,s.z=n[r+2]*t,a.push(s)}}if(void 0!==e.morphColors){var l,h,c,f,u,p,E;for(l=0,h=e.morphColors.length;l<h;l++)for(i.morphColors[l]={},i.morphColors[l].name=e.morphColors[l].name,i.morphColors[l].colors=[],u=i.morphColors[l].colors,c=0,f=(p=e.morphColors[l].colors).length;c<f;c+=3)(E=new THREE.Color(16755200)).setRGB(p[c],p[c+1],p[c+2]),u.push(E)}}(o),i.computeCentroids(),i.computeFaceNormals();var a=this.initMaterials(e.materials,r);this.needsTangents(a)&&i.computeTangents(),t(i,a)},THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var e=this,t=0,r=0,i=function(i){t++,e.dispatchEvent({type:"progress",loaded:t,total:r}),t===r&&e.dispatchEvent({type:"load"})};this.add=function(e){r++,e.addEventListener("load",i,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader),this.addGeometryHandler("binary",THREE.BinaryLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var r=this,i=new XMLHttpRequest;i.onreadystatechange=function(){if(4===i.readyState)if(200===i.status||0===i.status){var o=JSON.parse(i.responseText);r.parse(o,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+i.status+"]")},i.open("GET",e,!0),i.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,t,r){function i(e,t){return"relativeToHTML"==t?e:S+"/"+e}function o(){a(_.scene,M.objects)}function a(e,t){var r,o,n,s,h,c;for(var E in t)if(void 0===_.objects[E]){var d=t[E],m=null;if(d.type&&d.type in b.hierarchyHandlerMap&&void 0===d.loading){var y={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},R={};for(var x in d)x in y||(R[x]=d[x]);u=_.materials[d.material],d.loading=!0;var H=b.hierarchyHandlerMap[d.type].loaderObject;H.addEventListener?(H.addEventListener("load",l(E,e,u,d)),H.load(i(d.url,M.urlBaseType))):H.options?H.load(i(d.url,M.urlBaseType),l(E,e,u,d)):H.load(i(d.url,M.urlBaseType),l(E,e,u,d),R)}else if(void 0!==d.geometry){if(f=_.geometries[d.geometry]){var S=!1;if(u=_.materials[d.material],S=u instanceof THREE.ShaderMaterial,n=d.position,s=d.rotation,h=d.scale,r=d.matrix,c=d.quaternion,c=0,d.material||(u=new THREE.MeshFaceMaterial(_.face_materials[d.geometry])),u instanceof THREE.MeshFaceMaterial&&0===u.materials.length&&(u=new THREE.MeshFaceMaterial(_.face_materials[d.geometry])),u instanceof THREE.MeshFaceMaterial)for(var C=0;C<u.materials.length;C++)S=S||u.materials[C]instanceof THREE.ShaderMaterial;S&&f.computeTangents(),d.skin?m=new THREE.SkinnedMesh(f,u):d.morph?(m=new THREE.MorphAnimMesh(f,u),void 0!==d.duration&&(m.duration=d.duration),void 0!==d.time&&(m.time=d.time),void 0!==d.mirroredLoop&&(m.mirroredLoop=d.mirroredLoop),u.morphNormals&&f.computeMorphNormals()):m=new THREE.Mesh(f,u),m.name=E,r?(m.matrixAutoUpdate=!1,m.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(m.position.set(n[0],n[1],n[2]),c?(m.quaternion.set(c[0],c[1],c[2],c[3]),m.useQuaternion=!0):m.rotation.set(s[0],s[1],s[2]),m.scale.set(h[0],h[1],h[2])),m.visible=d.visible,m.castShadow=d.castShadow,m.receiveShadow=d.receiveShadow,e.add(m),_.objects[E]=m}}else"DirectionalLight"===d.type||"PointLight"===d.type||"AmbientLight"===d.type?(v=void 0!==d.color?d.color:16777215,T=void 0!==d.intensity?d.intensity:1,"DirectionalLight"===d.type?(n=d.direction,(g=new THREE.DirectionalLight(v,T)).position.set(n[0],n[1],n[2]),d.target&&(w.push({object:g,targetName:d.target}),g.target=null)):"PointLight"===d.type?(n=d.position,o=d.distance,(g=new THREE.PointLight(v,T,o)).position.set(n[0],n[1],n[2])):"AmbientLight"===d.type&&(g=new THREE.AmbientLight(v)),e.add(g),g.name=E,_.lights[E]=g,_.objects[E]=g):"PerspectiveCamera"===d.type||"OrthographicCamera"===d.type?("PerspectiveCamera"===d.type?p=new THREE.PerspectiveCamera(d.fov,d.aspect,d.near,d.far):"OrthographicCamera"===d.type&&(p=new THREE.OrthographicCamera(d.left,d.right,d.top,d.bottom,d.near,d.far)),n=d.position,p.position.set(n[0],n[1],n[2]),e.add(p),p.name=E,_.cameras[E]=p,_.objects[E]=p):(n=d.position,s=d.rotation,h=d.scale,c=d.quaternion,c=0,(m=new THREE.Object3D).name=E,m.position.set(n[0],n[1],n[2]),c?(m.quaternion.set(c[0],c[1],c[2],c[3]),m.useQuaternion=!0):m.rotation.set(s[0],s[1],s[2]),m.scale.set(h[0],h[1],h[2]),m.visible=void 0!==d.visible&&d.visible,e.add(m),_.objects[E]=m,_.empties[E]=m);if(m){if(void 0!==d.properties)for(var A in d.properties){var L=d.properties[A];m.properties[A]=L}void 0!==d.children&&a(m,d.children)}}}function n(e,t,r,i,a){var n=a.position,s=a.rotation,l=a.quaternion,h=a.scale;e.position.set(n[0],n[1],n[2]),l?(e.quaternion.set(l[0],l[1],l[2],l[3]),e.useQuaternion=!0):e.rotation.set(s[0],s[1],s[2]),e.scale.set(h[0],h[1],h[2]),i&&e.traverse(function(e){e.material=i}),r.add(e),_.objects[t]=e,o()}function s(e){return function(t,r){!function(e,t,r){_.geometries[r]=e,_.face_materials[r]=t,o()}(t,r,e),y-=1,b.onLoadComplete(),c()}}function l(e,t,r,i){return function(o){n(o.content?o.content:o.dae?o.scene:o,e,t,r,i),y-=1,b.onLoadComplete(),c()}}function h(e){return function(t,r){_.geometries[e]=t,_.face_materials[e]=r}}function c(){var e={totalModels:x,totalTextures:H,loadedModels:x-y,loadedTextures:H-R};b.callbackProgress(e,_),b.onLoadProgress(),0===y&&0===R&&(!function(){for(var e=0;e<w.length;e++){var t=w[e],r=_.objects[t.targetName];r?t.object.target=r:(t.object.target=new THREE.Object3D,_.scene.add(t.object.target)),t.object.target.properties.targetInverse=t.object}}(),t(_))}var f,u,p,E,d,m,g,v,T,y,R,x,H,_,b=this,S=THREE.Loader.prototype.extractUrlBase(r),w=[],M=e;for(var C in this.geometryHandlerMap){A=this.geometryHandlerMap[C].loaderClass;this.geometryHandlerMap[C].loaderObject=new A}for(var C in this.hierarchyHandlerMap){var A=this.hierarchyHandlerMap[C].loaderClass;this.hierarchyHandlerMap[C].loaderObject=new A}if(y=0,R=0,_={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}},M.transform){var L=M.transform.position,P=M.transform.rotation,F=M.transform.scale;L&&_.scene.position.set(L[0],L[1],L[2]),P&&_.scene.rotation.set(P[0],P[1],P[2]),F&&_.scene.scale.set(F[0],F[1],F[2]),(L||P||F)&&(_.scene.updateMatrix(),_.scene.updateMatrixWorld())}var U,D,z=function(e){return function(){!function(e){R-=e,c(),b.onLoadComplete()}(e)}};for(U in M.fogs)"linear"===(D=M.fogs[U]).type?E=new THREE.Fog(0,D.near,D.far):"exp2"===D.type&&(E=new THREE.FogExp2(0,D.density)),m=D.color,E.color.setRGB(m[0],m[1],m[2]),_.fogs[U]=E;var N,B;for(N in M.geometries)(B=M.geometries[N]).type in this.geometryHandlerMap&&(y+=1,b.onLoadStart());var V,I;for(V in M.objects)(I=M.objects[V]).type&&I.type in this.hierarchyHandlerMap&&(y+=1,b.onLoadStart());x=y;for(N in M.geometries)if("cube"===(B=M.geometries[N]).type)f=new THREE.CubeGeometry(B.width,B.height,B.depth,B.widthSegments,B.heightSegments,B.depthSegments),_.geometries[N]=f;else if("plane"===B.type)f=new THREE.PlaneGeometry(B.width,B.height,B.widthSegments,B.heightSegments),_.geometries[N]=f;else if("sphere"===B.type)f=new THREE.SphereGeometry(B.radius,B.widthSegments,B.heightSegments),_.geometries[N]=f;else if("cylinder"===B.type)f=new THREE.CylinderGeometry(B.topRad,B.botRad,B.height,B.radSegs,B.heightSegs),_.geometries[N]=f;else if("torus"===B.type)f=new THREE.TorusGeometry(B.radius,B.tube,B.segmentsR,B.segmentsT),_.geometries[N]=f;else if("icosahedron"===B.type)f=new THREE.IcosahedronGeometry(B.radius,B.subdivisions),_.geometries[N]=f;else if(B.type in this.geometryHandlerMap){var O={};for(var G in B)"type"!==G&&"url"!==G&&(O[G]=B[G]);this.geometryHandlerMap[B.type].loaderObject.load(i(B.url,M.urlBaseType),s(N),O)}else if("embedded"===B.type){var k=M.embeds[B.id];if(k.metadata=M.metadata,k){this.geometryHandlerMap.ascii.loaderObject.createModel(k,h(N),"")}}var W,j;for(W in M.textures)if((j=M.textures[W]).url instanceof Array){R+=j.url.length;for(var X=0;X<j.url.length;X++)b.onLoadStart()}else R+=1,b.onLoadStart();H=R;for(W in M.textures){if(void 0!==(j=M.textures[W]).mapping&&void 0!==THREE[j.mapping]&&(j.mapping=new THREE[j.mapping]),j.url instanceof Array){for(var Y=j.url.length,q=[],K=0;K<Y;K++)q[K]=i(j.url[K],M.urlBaseType);d=(Z=q[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(q,j.mapping,z(Y)):THREE.ImageUtils.loadTextureCube(q,j.mapping,z(Y))}else{var Z=j.url.toLowerCase().endsWith(".dds"),Q=i(j.url,M.urlBaseType),J=z(1);if(d=Z?THREE.ImageUtils.loadCompressedTexture(Q,j.mapping,J):THREE.ImageUtils.loadTexture(Q,j.mapping,J),void 0!==THREE[j.minFilter]&&(d.minFilter=THREE[j.minFilter]),void 0!==THREE[j.magFilter]&&(d.magFilter=THREE[j.magFilter]),j.anisotropy&&(d.anisotropy=j.anisotropy),j.repeat&&(d.repeat.set(j.repeat[0],j.repeat[1]),1!==j.repeat[0]&&(d.wrapS=THREE.RepeatWrapping),1!==j.repeat[1]&&(d.wrapT=THREE.RepeatWrapping)),j.offset&&d.offset.set(j.offset[0],j.offset[1]),j.wrap){var $={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==$[j.wrap[0]]&&(d.wrapS=$[j.wrap[0]]),void 0!==$[j.wrap[1]]&&(d.wrapT=$[j.wrap[1]])}}_.textures[W]=d}var ee,te,re;for(ee in M.materials){te=M.materials[ee];for(re in te.parameters)if("envMap"===re||"map"===re||"lightMap"===re||"bumpMap"===re)te.parameters[re]=_.textures[te.parameters[re]];else if("shading"===re)te.parameters[re]="flat"===te.parameters[re]?THREE.FlatShading:THREE.SmoothShading;else if("side"===re)"double"==te.parameters[re]?te.parameters[re]=THREE.DoubleSide:"back"==te.parameters[re]?te.parameters[re]=THREE.BackSide:te.parameters[re]=THREE.FrontSide;else if("blending"===re)te.parameters[re]=te.parameters[re]in THREE?THREE[te.parameters[re]]:THREE.NormalBlending;else if("combine"===re)te.parameters[re]="MixOperation"==te.parameters[re]?THREE.MixOperation:THREE.MultiplyOperation;else if("vertexColors"===re)"face"==te.parameters[re]?te.parameters[re]=THREE.FaceColors:te.parameters[re]&&(te.parameters[re]=THREE.VertexColors);else if("wrapRGB"===re){var ie=te.parameters[re];te.parameters[re]=new THREE.Vector3(ie[0],ie[1],ie[2])}if(void 0!==te.parameters.opacity&&te.parameters.opacity<1&&(te.parameters.transparent=!0),te.parameters.normalMap){var oe=THREE.ShaderUtils.lib.normal,ae=THREE.UniformsUtils.clone(oe.uniforms),ne=te.parameters.color,se=te.parameters.specular,le=te.parameters.ambient,he=te.parameters.shininess;ae.tNormal.value=_.textures[te.parameters.normalMap],te.parameters.normalScale&&ae.uNormalScale.value.set(te.parameters.normalScale[0],te.parameters.normalScale[1]),te.parameters.map&&(ae.tDiffuse.value=te.parameters.map,ae.enableDiffuse.value=!0),te.parameters.envMap&&(ae.tCube.value=te.parameters.envMap,ae.enableReflection.value=!0,ae.uReflectivity.value=te.parameters.reflectivity),te.parameters.lightMap&&(ae.tAO.value=te.parameters.lightMap,ae.enableAO.value=!0),te.parameters.specularMap&&(ae.tSpecular.value=_.textures[te.parameters.specularMap],ae.enableSpecular.value=!0),te.parameters.displacementMap&&(ae.tDisplacement.value=_.textures[te.parameters.displacementMap],ae.enableDisplacement.value=!0,ae.uDisplacementBias.value=te.parameters.displacementBias,ae.uDisplacementScale.value=te.parameters.displacementScale),ae.uDiffuseColor.value.setHex(ne),ae.uSpecularColor.value.setHex(se),ae.uAmbientColor.value.setHex(le),ae.uShininess.value=he,te.parameters.opacity&&(ae.uOpacity.value=te.parameters.opacity);var ce={fragmentShader:oe.fragmentShader,vertexShader:oe.vertexShader,uniforms:ae,lights:!0,fog:!0};u=new THREE.ShaderMaterial(ce)}else u=new THREE[te.type](te.parameters);_.materials[ee]=u}for(ee in M.materials)if((te=M.materials[ee]).parameters.materials){for(var fe=[],K=0;K<te.parameters.materials.length;K++){var ue=te.parameters.materials[K];fe.push(_.materials[ue])}_.materials[ee].materials=fe}o(),_.cameras&&M.defaults.camera&&(_.currentCamera=_.cameras[M.defaults.camera]),_.fogs&&M.defaults.fog&&(_.scene.fog=_.fogs[M.defaults.fog]),m=M.defaults.bgcolor,_.bgColor=new THREE.Color,_.bgColor.setRGB(m[0],m[1],m[2]),_.bgColorAlpha=M.defaults.bgalpha,b.callbackSync(_),c()},THREE.TextureLoader=function(){THREE.EventTarget.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,r=new Image;r.addEventListener("load",function(){var e=new THREE.Texture(r);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),r.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(r.crossOrigin=t.crossOrigin),r.src=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=!1,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var i=this[t];i instanceof THREE.Color&&r instanceof THREE.Color?i.copy(r):i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]=r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ParticleDOMMaterial=function(e){this.element=e},THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),void 0===(e=e||{}).depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,r,i,o,a,n,s,l){this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==o?o:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==l?l:1,this.format=void 0!==n?n:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,r,i,o,a,n,s,l,h,c){THREE.Texture.call(this,null,a,n,s,l,h,i,o,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,o,a,n,s,l,h,c){THREE.Texture.call(this,null,a,n,s,l,h,i,o,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){if(THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0;r<this.geometry.morphTargets.length;r++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[r].name]=r}},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiply(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var r,i=this.children.length;for(r=0;r<i;r++)this.children[r].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var i,o,a,n,s,l;if(this.geometry&&void 0!==this.geometry.bones){for(i=0;i<this.geometry.bones.length;i++)n=(a=this.geometry.bones[i]).pos,s=a.rotq,l=a.scl,(o=this.addBone()).name=a.name,o.position.set(n[0],n[1],n[2]),o.quaternion.set(s[0],s[1],s[2],s[3]),o.useQuaternion=!0,void 0!==l?o.scale.set(l[0],l[1],l[2]):o.scale.set(1,1,1);for(i=0;i<this.bones.length;i++)a=this.geometry.bones[i],o=this.bones[i],-1===a.parent?this.add(o):this.bones[a.parent].add(o);var h=this.bones.length;if(this.useVertexTexture){var c;c=h>256?64:h>64?32:h>16?16:8,this.boneTextureWidth=c,this.boneTextureHeight=c,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*h);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++){var i=this.children[t];i instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var o=0,a=this.bones.length;o<a;o++){var n=new THREE.Matrix4;n.getInverse(this.bones[o].skinMatrix),this.boneInverses.push(n)}}for(var o=0,a=this.bones.length;o<a;o++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[o].skinMatrix,this.boneInverses[o]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*o);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();r!==1/0?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)(\d+)/,o=0,a=e.morphTargets.length;o<a;o++){var n=e.morphTargets[o].name.match(i);if(n&&n.length>1){var s=n[1];n[2];r[s]||(r[s]={start:1/0,end:-1/0});var l=r[s];o<l.start&&(l.start=o),o>l.end&&(l.end=o),t||(t=s)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/t*1e3,this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.LODs.length&&!(t<this.LODs[r].visibleAtDistance);r++);this.LODs.splice(r,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(this.LODs.length>1){e.matrixWorldInverse.getInverse(e.matrixWorld);var t=e.matrixWorldInverse,r=-(t.elements[2]*this.matrixWorld.elements[12]+t.elements[6]*this.matrixWorld.elements[13]+t.elements[10]*this.matrixWorld.elements[14]+t.elements[14]);this.LODs[0].object3D.visible=!0;for(var i=1;i<this.LODs.length&&r>=this.LODs[i].visibleAtDistance;i++)this.LODs[i-1].object3D.visible=!1,this.LODs[i].object3D.visible=!0;for(;i<this.LODs.length;i++)this.LODs[i].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),1===this.scale.x&&1===this.scale.y||(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var r=0;r<e.children.length;r++)this.__addObject(e.children[r])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){-1!==(t=this.__lights.indexOf(e))&&this.__lights.splice(t,1)}else if(!(e instanceof THREE.Camera)){var t=this.__objects.indexOf(e);if(-1!==t){this.__objects.splice(t,1),this.__objectsRemoved.push(e);var r=this.__objectsAdded.indexOf(e);-1!==r&&this.__objectsAdded.splice(r,1)}}for(var i=0;i<e.children.length;i++)this.__removeObject(e.children[i])},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e){$!==e&&(Z.globalAlpha=e,$=e)}function r(e){ee!==e&&(e===THREE.NormalBlending?Z.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?Z.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(Z.globalCompositeOperation="darker"),ee=e)}function i(e){ie!==e&&(Z.lineWidth=e,ie=e)}function o(e){oe!==e&&(Z.lineCap=e,oe=e)}function a(e){ae!==e&&(Z.lineJoin=e,ae=e)}function n(e){te!==e&&(Z.strokeStyle=e,te=e)}function s(e){re!==e&&(Z.fillStyle=e,re=e)}console.log("THREE.CanvasRenderer",THREE.REVISION),e=e||{};var l,h,c,f,u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w,M,C,A,L,P,F,U,D,z,N,B,V,I,O,G,k,W,j,X,Y=this,q=new THREE.Projector,K=void 0!==e.canvas?e.canvas:document.createElement("canvas"),Z=K.getContext("2d"),Q=new THREE.Color(0),J=0,$=1,ee=0,te=null,re=null,ie=null,oe=null,ae=null,ne=new THREE.RenderableVertex,se=new THREE.RenderableVertex,le=new THREE.Color,he=new THREE.Color,ce=new THREE.Color,fe=new THREE.Color,ue=new THREE.Color,pe=new THREE.Color,Ee=new THREE.Color,de={},me={},ge=new THREE.Box2,ve=new THREE.Box2,Te=new THREE.Box2,ye=!1,Re=new THREE.Color,xe=new THREE.Color,He=new THREE.Color,_e=(Math.PI,new THREE.Vector3),be=16;(O=document.createElement("canvas")).width=O.height=2,(G=O.getContext("2d")).fillStyle="rgba(0,0,0,1)",G.fillRect(0,0,2,2),k=G.getImageData(0,0,2,2),W=k.data,(j=document.createElement("canvas")).width=j.height=be,(X=j.getContext("2d")).translate(-be/2,-be/2),X.scale(be,be),be--,this.domElement=K,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.setSize=function(e,t){f=e,u=t,p=Math.floor(f/2),E=Math.floor(u/2),K.width=f,K.height=u,ge.min.set(-p,-E),ge.max.set(p,E),ve.min.set(-p,-E),ve.max.set(p,E),$=1,ee=0,te=null,re=null,ie=null,oe=null,ae=null},this.setClearColor=function(e,t){Q.copy(e),J=void 0!==t?t:1,ve.min.set(-p,-E),ve.max.set(p,E)},this.setClearColorHex=function(e,t){Q.setHex(e),J=void 0!==t?t:1,ve.min.set(-p,-E),ve.max.set(p,E)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){Z.setTransform(1,0,0,-1,p,E),!1===ve.empty()&&(ve.intersect(ge),ve.expandByScalar(2),J<1&&Z.clearRect(0|ve.min.x,0|ve.min.y,ve.max.x-ve.min.x|0,ve.max.y-ve.min.y|0),J>0&&(r(THREE.NormalBlending),t(1),s("rgba("+Math.floor(255*Q.r)+","+Math.floor(255*Q.g)+","+Math.floor(255*Q.b)+","+J+")"),Z.fillRect(0|ve.min.x,0|ve.min.y,ve.max.x-ve.min.x|0,ve.max.y-ve.min.y|0)),ve.makeEmpty())},this.render=function(e,f){function u(e,t,r){for(var i=0,o=c.length;i<o;i++){var a=c[i],n=a.color;if(a instanceof THREE.DirectionalLight){s=a.matrixWorld.getPosition().normalize();if((l=t.dot(s))<=0)continue;l*=a.intensity,r.r+=n.r*l,r.g+=n.g*l,r.b+=n.b*l}else if(a instanceof THREE.PointLight){var s=a.matrixWorld.getPosition(),l=t.dot(_e.sub(s,e).normalize());if(l<=0)continue;if(0==(l*=0==a.distance?1:1-Math.min(e.distanceTo(s)/a.distance,1)))continue;l*=a.intensity,r.r+=n.r*l,r.g+=n.g*l,r.b+=n.b*l}}}function K(e,i,o,a,n,s,l,h,c){if(Y.info.render.vertices+=3,Y.info.render.faces++,t(h.opacity),r(h.blending),T=e.positionScreen.x,y=e.positionScreen.y,R=i.positionScreen.x,x=i.positionScreen.y,H=o.positionScreen.x,_=o.positionScreen.y,Q(T,y,R,x,H,_),(h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)&&null===h.map&&null===h.map)pe.copy(h.color),Ee.copy(h.emissive),h.vertexColors===THREE.FaceColors&&(pe.r*=l.color.r,pe.g*=l.color.g,pe.b*=l.color.b),!0===ye?!1===h.wireframe&&h.shading==THREE.SmoothShading&&3==l.vertexNormalsLength?(he.r=ce.r=fe.r=Re.r,he.g=ce.g=fe.g=Re.g,he.b=ce.b=fe.b=Re.b,u(l.v1.positionWorld,l.vertexNormalsWorld[0],he),u(l.v2.positionWorld,l.vertexNormalsWorld[1],ce),u(l.v3.positionWorld,l.vertexNormalsWorld[2],fe),he.r=he.r*pe.r+Ee.r,he.g=he.g*pe.g+Ee.g,he.b=he.b*pe.b+Ee.b,ce.r=ce.r*pe.r+Ee.r,ce.g=ce.g*pe.g+Ee.g,ce.b=ce.b*pe.b+Ee.b,fe.r=fe.r*pe.r+Ee.r,fe.g=fe.g*pe.g+Ee.g,fe.b=fe.b*pe.b+Ee.b,ue.r=.5*(ce.r+fe.r),ue.g=.5*(ce.g+fe.g),ue.b=.5*(ce.b+fe.b),F=ie(he,ce,fe,ue),re(T,y,R,x,H,_,0,0,1,0,0,1,F)):(le.r=Re.r,le.g=Re.g,le.b=Re.b,u(l.centroidWorld,l.normalWorld,le),le.r=le.r*pe.r+Ee.r,le.g=le.g*pe.g+Ee.g,le.b=le.b*pe.b+Ee.b,!0===h.wireframe?$(le,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(le)):!0===h.wireframe?$(h.color,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(h.color);else if(h instanceof THREE.MeshBasicMaterial||h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)if(null!==h.map)h.map.mapping instanceof THREE.UVMapping&&(U=l.uvs[0],te(T,y,R,x,H,_,U[a].x,U[a].y,U[n].x,U[n].y,U[s].x,U[s].y,h.map));else if(null!==h.envMap){if(h.envMap.mapping instanceof THREE.SphericalReflectionMapping){var p=f.matrixWorldInverse;_e.copy(l.vertexNormalsWorld[a]),D=.5*(_e.x*p.elements[0]+_e.y*p.elements[4]+_e.z*p.elements[8])+.5,z=.5*(_e.x*p.elements[1]+_e.y*p.elements[5]+_e.z*p.elements[9])+.5,_e.copy(l.vertexNormalsWorld[n]),N=.5*(_e.x*p.elements[0]+_e.y*p.elements[4]+_e.z*p.elements[8])+.5,B=.5*(_e.x*p.elements[1]+_e.y*p.elements[5]+_e.z*p.elements[9])+.5,_e.copy(l.vertexNormalsWorld[s]),V=.5*(_e.x*p.elements[0]+_e.y*p.elements[4]+_e.z*p.elements[8])+.5,I=.5*(_e.x*p.elements[1]+_e.y*p.elements[5]+_e.z*p.elements[9])+.5,te(T,y,R,x,H,_,D,z,N,B,V,I,h.envMap)}}else le.copy(h.color),h.vertexColors===THREE.FaceColors&&(le.r*=l.color.r,le.g*=l.color.g,le.b*=l.color.b),!0===h.wireframe?$(le,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(le);else h instanceof THREE.MeshDepthMaterial?(L=f.near,P=f.far,he.r=he.g=he.b=1-oe(e.positionScreen.z,L,P),ce.r=ce.g=ce.b=1-oe(i.positionScreen.z,L,P),fe.r=fe.g=fe.b=1-oe(o.positionScreen.z,L,P),ue.r=.5*(ce.r+fe.r),ue.g=.5*(ce.g+fe.g),ue.b=.5*(ce.b+fe.b),F=ie(he,ce,fe,ue),re(T,y,R,x,H,_,0,0,1,0,0,1,F)):h instanceof THREE.MeshNormalMaterial&&(le.r=ae(l.normalWorld.x),le.g=ae(l.normalWorld.y),le.b=ae(l.normalWorld.z),!0===h.wireframe?$(le,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(le))}function Q(e,t,r,i,o,a){Z.beginPath(),Z.moveTo(e,t),Z.lineTo(r,i),Z.lineTo(o,a),Z.closePath()}function J(e,t,r,i,o,a,n,s){Z.beginPath(),Z.moveTo(e,t),Z.lineTo(r,i),Z.lineTo(o,a),Z.lineTo(n,s),Z.closePath()}function $(e,t,r,s){i(t),o(r),a(s),n(e.getStyle()),Z.stroke(),Te.expandByScalar(2*t)}function ee(e){s(e.getStyle()),Z.fill()}function te(e,t,r,i,o,a,n,l,h,c,f,u,p){if(!(p instanceof THREE.DataTexture||void 0===p.image||0==p.image.width)){if(!0===p.needsUpdate){var E=p.wrapS==THREE.RepeatWrapping,d=p.wrapT==THREE.RepeatWrapping;de[p.id]=Z.createPattern(p.image,!0===E&&!0===d?"repeat":!0===E&&!1===d?"repeat-x":!1===E&&!0===d?"repeat-y":"no-repeat"),p.needsUpdate=!1}s(void 0===de[p.id]?"rgba(0,0,0,1)":de[p.id]);var m,g,v,T,y,R,x,H,_=p.offset.x/p.repeat.x,b=p.offset.y/p.repeat.y,S=p.image.width*p.repeat.x,w=p.image.height*p.repeat.y;if(n=(n+_)*S,l=(1-l+b)*w,h=(h+_)*S,c=(1-c+b)*w,f=(f+_)*S,u=(1-u+b)*w,r-=e,i-=t,o-=e,a-=t,h-=n,c-=l,f-=n,u-=l,0===(x=h*u-f*c)){if(void 0===me[p.id]){var M=document.createElement("canvas");M.width=p.image.width,M.height=p.image.height;var C=M.getContext("2d");C.drawImage(p.image,0,0),me[p.id]=C.getImageData(0,0,p.image.width,p.image.height).data}var A=me[p.id],L=4*(Math.floor(n)+Math.floor(l)*p.image.width);return le.setRGB(A[L]/255,A[L+1]/255,A[L+2]/255),void ee(le)}y=e-(m=(u*r-c*o)*(H=1/x))*n-(v=(h*o-f*r)*H)*l,R=t-(g=(u*i-c*a)*H)*n-(T=(h*a-f*i)*H)*l,Z.save(),Z.transform(m,g,v,T,y,R),Z.fill(),Z.restore()}}function re(e,t,r,i,o,a,n,s,l,h,c,f,u){var p,E,d,m,g,v,T,y=u.width-1,R=u.height-1;l*=y,h*=R,c*=y,f*=R,g=e-(p=((f-=s*=R)*(r-=e)-(h-=s)*(o-=e))*(T=1/((l-=n*=y)*f-(c-=n)*h)))*n-(d=(l*o-c*r)*T)*s,v=t-(E=(f*(i-=t)-h*(a-=t))*T)*n-(m=(l*a-c*i)*T)*s,Z.save(),Z.transform(p,E,d,m,g,v),Z.clip(),Z.drawImage(u,0,0),Z.restore()}function ie(e,t,r,i){return W[0]=255*e.r|0,W[1]=255*e.g|0,W[2]=255*e.b|0,W[4]=255*t.r|0,W[5]=255*t.g|0,W[6]=255*t.b|0,W[8]=255*r.r|0,W[9]=255*r.g|0,W[10]=255*r.b|0,W[12]=255*i.r|0,W[13]=255*i.g|0,W[14]=255*i.b|0,G.putImageData(k,0,0),X.drawImage(O,0,0),j}function oe(e,t,r){var i=(e-t)/(r-t);return i*i*(3-2*i)}function ae(e){var t=.5*(e+1);return t<0?0:t>1?1:t}function be(e,t){var r,i=t.x-e.x,o=t.y-e.y,a=i*i+o*o;0!==a&&(i*=r=1/Math.sqrt(a),o*=r,t.x+=i,t.y+=o,e.x-=i,e.y-=o)}if(f instanceof THREE.Camera!=!1){var Se,we,Me,Ce;for(!0===this.autoClear?this.clear():Z.setTransform(1,0,0,-1,p,E),Y.info.render.vertices=0,Y.info.render.faces=0,l=q.projectScene(e,f,this.sortObjects,this.sortElements),h=l.elements,c=l.lights,!0===(ye=c.length>0)&&function(){Re.setRGB(0,0,0),xe.setRGB(0,0,0),He.setRGB(0,0,0);for(var e=0,t=c.length;e<t;e++){var r=c[e],i=r.color;r instanceof THREE.AmbientLight?(Re.r+=i.r,Re.g+=i.g,Re.b+=i.b):r instanceof THREE.DirectionalLight?(xe.r+=i.r,xe.g+=i.g,xe.b+=i.b):r instanceof THREE.PointLight&&(He.r+=i.r,He.g+=i.g,He.b+=i.b)}}(),Se=0,we=h.length;Se<we;Se++)void 0!==(Ce=(Me=h[Se]).material)&&!1!==Ce.visible&&(Te.makeEmpty(),Me instanceof THREE.RenderableParticle?((d=Me).x*=p,d.y*=E,function(e,i,o,a){t(o.opacity),r(o.blending);var l,h,c,f,u,d,m;if(o instanceof THREE.ParticleBasicMaterial)if(null===o.map){if(c=i.object.scale.x,f=i.object.scale.y,c*=i.scale.x*p,f*=i.scale.y*E,Te.min.set(e.x-c,e.y-f),Te.max.set(e.x+c,e.y+f),!1===ge.isIntersectionBox(Te))return;s(o.color.getStyle()),Z.save(),Z.translate(e.x,e.y),Z.rotate(-i.rotation),Z.scale(c,f),Z.fillRect(-1,-1,2,2),Z.restore()}else{if(u=o.map.image,d=u.width>>1,m=u.height>>1,c=i.scale.x*p,f=i.scale.y*E,l=c*d,h=f*m,Te.min.set(e.x-l,e.y-h),Te.max.set(e.x+l,e.y+h),!1===ge.isIntersectionBox(Te))return;Z.save(),Z.translate(e.x,e.y),Z.rotate(-i.rotation),Z.scale(c,-f),Z.translate(-d,-m),Z.drawImage(u,0,0),Z.restore()}else if(o instanceof THREE.ParticleCanvasMaterial){if(l=i.scale.x*p,h=i.scale.y*E,Te.min.set(e.x-l,e.y-h),Te.max.set(e.x+l,e.y+h),!1===ge.isIntersectionBox(Te))return;n(o.color.getStyle()),s(o.color.getStyle()),Z.save(),Z.translate(e.x,e.y),Z.rotate(-i.rotation),Z.scale(l,h),o.program(Z),Z.restore()}}(d,Me,Ce)):Me instanceof THREE.RenderableLine?(d=Me.v1,m=Me.v2,d.positionScreen.x*=p,d.positionScreen.y*=E,m.positionScreen.x*=p,m.positionScreen.y*=E,Te.setFromPoints([d.positionScreen,m.positionScreen]),!0===ge.isIntersectionBox(Te)&&function(e,s,l,h,c){t(h.opacity),r(h.blending),Z.beginPath(),Z.moveTo(e.positionScreen.x,e.positionScreen.y),Z.lineTo(s.positionScreen.x,s.positionScreen.y),h instanceof THREE.LineBasicMaterial&&(i(h.linewidth),o(h.linecap),a(h.linejoin),n(h.color.getStyle()),Z.stroke(),Te.expandByScalar(2*h.linewidth))}(d,m,0,Ce)):Me instanceof THREE.RenderableFace3?(d=Me.v1,m=Me.v2,g=Me.v3,d.positionScreen.x*=p,d.positionScreen.y*=E,m.positionScreen.x*=p,m.positionScreen.y*=E,g.positionScreen.x*=p,g.positionScreen.y*=E,!0===Ce.overdraw&&(be(d.positionScreen,m.positionScreen),be(m.positionScreen,g.positionScreen),be(g.positionScreen,d.positionScreen)),Te.setFromPoints([d.positionScreen,m.positionScreen,g.positionScreen]),!0===ge.isIntersectionBox(Te)&&K(d,m,g,0,1,2,Me,Ce)):Me instanceof THREE.RenderableFace4&&(d=Me.v1,m=Me.v2,g=Me.v3,v=Me.v4,d.positionScreen.x*=p,d.positionScreen.y*=E,m.positionScreen.x*=p,m.positionScreen.y*=E,g.positionScreen.x*=p,g.positionScreen.y*=E,v.positionScreen.x*=p,v.positionScreen.y*=E,ne.positionScreen.copy(m.positionScreen),se.positionScreen.copy(v.positionScreen),!0===Ce.overdraw&&(be(d.positionScreen,m.positionScreen),be(m.positionScreen,v.positionScreen),be(v.positionScreen,d.positionScreen),be(g.positionScreen,ne.positionScreen),be(g.positionScreen,se.positionScreen)),Te.setFromPoints([d.positionScreen,m.positionScreen,g.positionScreen,v.positionScreen]),!0===ge.isIntersectionBox(Te)&&function(e,i,o,a,n,s,l,h,c){if(Y.info.render.vertices+=4,Y.info.render.faces++,t(h.opacity),r(h.blending),void 0!==h.map&&null!==h.map||void 0!==h.envMap&&null!==h.envMap)return K(e,i,a,0,1,3,l,h),void K(n,o,s,1,2,3,l,h);T=e.positionScreen.x,y=e.positionScreen.y,R=i.positionScreen.x,x=i.positionScreen.y,H=o.positionScreen.x,_=o.positionScreen.y,b=a.positionScreen.x,S=a.positionScreen.y,w=n.positionScreen.x,M=n.positionScreen.y,C=s.positionScreen.x,A=s.positionScreen.y,h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial?(pe.copy(h.color),Ee.copy(h.emissive),h.vertexColors===THREE.FaceColors&&(pe.r*=l.color.r,pe.g*=l.color.g,pe.b*=l.color.b),!0===ye?!1===h.wireframe&&h.shading==THREE.SmoothShading&&4==l.vertexNormalsLength?(he.r=ce.r=fe.r=ue.r=Re.r,he.g=ce.g=fe.g=ue.g=Re.g,he.b=ce.b=fe.b=ue.b=Re.b,u(l.v1.positionWorld,l.vertexNormalsWorld[0],he),u(l.v2.positionWorld,l.vertexNormalsWorld[1],ce),u(l.v4.positionWorld,l.vertexNormalsWorld[3],fe),u(l.v3.positionWorld,l.vertexNormalsWorld[2],ue),he.r=he.r*pe.r+Ee.r,he.g=he.g*pe.g+Ee.g,he.b=he.b*pe.b+Ee.b,ce.r=ce.r*pe.r+Ee.r,ce.g=ce.g*pe.g+Ee.g,ce.b=ce.b*pe.b+Ee.b,fe.r=fe.r*pe.r+Ee.r,fe.g=fe.g*pe.g+Ee.g,fe.b=fe.b*pe.b+Ee.b,ue.r=ue.r*pe.r+Ee.r,ue.g=ue.g*pe.g+Ee.g,ue.b=ue.b*pe.b+Ee.b,F=ie(he,ce,fe,ue),Q(T,y,R,x,b,S),re(T,y,R,x,b,S,0,0,1,0,0,1,F),Q(w,M,H,_,C,A),re(w,M,H,_,C,A,1,0,1,1,0,1,F)):(le.r=Re.r,le.g=Re.g,le.b=Re.b,u(l.centroidWorld,l.normalWorld,le),le.r=le.r*pe.r+Ee.r,le.g=le.g*pe.g+Ee.g,le.b=le.b*pe.b+Ee.b,J(T,y,R,x,H,_,b,S),!0===h.wireframe?$(le,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(le)):(le.r=pe.r+Ee.r,le.g=pe.g+Ee.g,le.b=pe.b+Ee.b,J(T,y,R,x,H,_,b,S),!0===h.wireframe?$(le,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(le))):h instanceof THREE.MeshBasicMaterial?(le.copy(h.color),h.vertexColors===THREE.FaceColors&&(le.r*=l.color.r,le.g*=l.color.g,le.b*=l.color.b),J(T,y,R,x,H,_,b,S),!0===h.wireframe?$(le,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(le)):h instanceof THREE.MeshNormalMaterial?(le.r=ae(l.normalWorld.x),le.g=ae(l.normalWorld.y),le.b=ae(l.normalWorld.z),J(T,y,R,x,H,_,b,S),!0===h.wireframe?$(le,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):ee(le)):h instanceof THREE.MeshDepthMaterial&&(L=f.near,P=f.far,he.r=he.g=he.b=1-oe(e.positionScreen.z,L,P),ce.r=ce.g=ce.b=1-oe(i.positionScreen.z,L,P),fe.r=fe.g=fe.b=1-oe(a.positionScreen.z,L,P),ue.r=ue.g=ue.b=1-oe(o.positionScreen.z,L,P),F=ie(he,ce,fe,ue),Q(T,y,R,x,b,S),re(T,y,R,x,b,S,0,0,1,0,0,1,F),Q(w,M,H,_,C,A),re(w,M,H,_,C,A,1,0,1,1,0,1,F))}(d,m,g,v,ne,se,Me,Ce)),ve.union(Te));Z.setTransform(1,0,0,1,0,0)}else console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -viewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix \t+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;","else shadowKernel[0][0] = 0.0;","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;","else shadowKernel[0][1] = 0.0;","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;","else shadowKernel[0][2] = 0.0;","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;","else shadowKernel[1][0] = 0.0;","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;","else shadowKernel[1][1] = 0.0;","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;","else shadowKernel[1][2] = 0.0;","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;","else shadowKernel[2][0] = 0.0;","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;","else shadowKernel[2][1] = 0.0;","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;","else shadowKernel[2][2] = 0.0;","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(e){var t,r,i,o={};for(t=0;t<e.length;t++){i=this.clone(e[t]);for(r in i)o[r]=i[r]}return o},clone:function(e){var t,r,i,o={};for(t in e){o[t]={};for(r in e[t])(i=e[t][r])instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?o[t][r]=i.clone():i instanceof Array?o[t][r]=i.slice():o[t][r]=i}return o}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e){e.__webglVertexBuffer=$.createBuffer(),e.__webglNormalBuffer=$.createBuffer(),e.__webglTangentBuffer=$.createBuffer(),e.__webglColorBuffer=$.createBuffer(),e.__webglUVBuffer=$.createBuffer(),e.__webglUV2Buffer=$.createBuffer(),e.__webglSkinIndicesBuffer=$.createBuffer(),e.__webglSkinWeightsBuffer=$.createBuffer(),e.__webglFaceBuffer=$.createBuffer(),e.__webglLineBuffer=$.createBuffer();var t,r;if(e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,r=e.numMorphTargets;t<r;t++)e.__webglMorphTargetsBuffers.push($.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,r=e.numMorphNormals;t<r;t++)e.__webglMorphNormalsBuffers.push($.createBuffer());oe.info.memory.geometries++}function r(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)$.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function i(e,t){var r=e.vertices.length,i=t.material;if(i.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var o in i.attributes){var a=i.attributes[o];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var n=1;"v2"===a.type?n=2:"v3"===a.type?n=3:"v4"===a.type?n=4:"c"===a.type&&(n=3),a.size=n,a.array=new Float32Array(r*n),a.buffer=$.createBuffer(),a.buffer.belongsToAttribute=o,a.needsUpdate=!0}e.__webglCustomAttributesList.push(a)}}}function o(e,t){var r=t.geometry,i=e.faces3,o=e.faces4,h=3*i.length+4*o.length,c=1*i.length+2*o.length,f=3*i.length+4*o.length,u=a(t,e),p=l(u),E=n(u),d=s(u);e.__vertexArray=new Float32Array(3*h),E&&(e.__normalArray=new Float32Array(3*h)),r.hasTangents&&(e.__tangentArray=new Float32Array(4*h)),d&&(e.__colorArray=new Float32Array(3*h)),p&&((r.faceUvs.length>0||r.faceVertexUvs.length>0)&&(e.__uvArray=new Float32Array(2*h)),(r.faceUvs.length>1||r.faceVertexUvs.length>1)&&(e.__uv2Array=new Float32Array(2*h))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*h),e.__skinWeightArray=new Float32Array(4*h)),e.__faceArray=new Uint16Array(3*c),e.__lineArray=new Uint16Array(2*f);var m,g;if(e.numMorphTargets)for(e.__morphTargetsArrays=[],m=0,g=e.numMorphTargets;m<g;m++)e.__morphTargetsArrays.push(new Float32Array(3*h));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],m=0,g=e.numMorphNormals;m<g;m++)e.__morphNormalsArrays.push(new Float32Array(3*h));if(e.__webglFaceCount=3*c,e.__webglLineCount=2*f,u.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var v in u.attributes){var T=u.attributes[v],y={};for(var R in T)y[R]=T[R];if(!y.__webglInitialized||y.createUniqueBuffers){y.__webglInitialized=!0;var x=1;"v2"===y.type?x=2:"v3"===y.type?x=3:"v4"===y.type?x=4:"c"===y.type&&(x=3),y.size=x,y.array=new Float32Array(h*x),y.buffer=$.createBuffer(),y.buffer.belongsToAttribute=v,T.needsUpdate=!0,y.__original=T}e.__webglCustomAttributesList.push(y)}}e.__inittedArrays=!0}function a(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function n(e){return!(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial)&&(function(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}(e)?THREE.SmoothShading:THREE.FlatShading)}function s(e){return!!e.vertexColors&&e.vertexColors}function l(e){return!!(e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial)}function h(e){var t,r,i;for(t in e.attributes)i="index"===t?$.ELEMENT_ARRAY_BUFFER:$.ARRAY_BUFFER,(r=e.attributes[t]).buffer=$.createBuffer(),$.bindBuffer(i,r.buffer),$.bufferData(i,r.array,$.STATIC_DRAW)}function c(e,t,r,i,o){if(e.__inittedArrays){var a,h,c,f,u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w,M,C,A,L,P,F,U,D,z,N,B,V,I,O,G,k,W,j,X,Y,q,K,Z,Q,J,ee,te,re,ie=n(o),oe=s(o),ae=l(o),ne=ie===THREE.SmoothShading,se=0,le=0,he=0,ce=0,fe=0,ue=0,pe=0,Ee=0,de=0,me=0,ge=0,ve=0,Te=e.__vertexArray,ye=e.__uvArray,Re=e.__uv2Array,xe=e.__normalArray,He=e.__tangentArray,_e=e.__colorArray,be=e.__skinIndexArray,Se=e.__skinWeightArray,we=e.__morphTargetsArrays,Me=e.__morphNormalsArrays,Ce=e.__webglCustomAttributesList,Ae=e.__faceArray,Le=e.__lineArray,Pe=t.geometry,Fe=Pe.verticesNeedUpdate,Ue=Pe.elementsNeedUpdate,De=Pe.uvsNeedUpdate,ze=Pe.normalsNeedUpdate,Ne=Pe.tangentsNeedUpdate,Be=Pe.colorsNeedUpdate,Ve=Pe.morphTargetsNeedUpdate,Ie=Pe.vertices,Oe=e.faces3,Ge=e.faces4,ke=Pe.faces,We=Pe.faceVertexUvs[0],je=Pe.faceVertexUvs[1],Xe=(Pe.colors,Pe.skinIndices),Ye=Pe.skinWeights,qe=Pe.morphTargets,Ke=Pe.morphNormals;if(Fe){for(a=0,h=Oe.length;a<h;a++)T=Ie[(f=ke[Oe[a]]).a],y=Ie[f.b],R=Ie[f.c],Te[le]=T.x,Te[le+1]=T.y,Te[le+2]=T.z,Te[le+3]=y.x,Te[le+4]=y.y,Te[le+5]=y.z,Te[le+6]=R.x,Te[le+7]=R.y,Te[le+8]=R.z,le+=9;for(a=0,h=Ge.length;a<h;a++)T=Ie[(f=ke[Ge[a]]).a],y=Ie[f.b],R=Ie[f.c],x=Ie[f.d],Te[le]=T.x,Te[le+1]=T.y,Te[le+2]=T.z,Te[le+3]=y.x,Te[le+4]=y.y,Te[le+5]=y.z,Te[le+6]=R.x,Te[le+7]=R.y,Te[le+8]=R.z,Te[le+9]=x.x,Te[le+10]=x.y,Te[le+11]=x.z,le+=12;$.bindBuffer($.ARRAY_BUFFER,e.__webglVertexBuffer),$.bufferData($.ARRAY_BUFFER,Te,r)}if(Ve)for(q=0,K=qe.length;q<K;q++){for(ge=0,a=0,h=Oe.length;a<h;a++)f=ke[J=Oe[a]],T=qe[q].vertices[f.a],y=qe[q].vertices[f.b],R=qe[q].vertices[f.c],(Z=we[q])[ge]=T.x,Z[ge+1]=T.y,Z[ge+2]=T.z,Z[ge+3]=y.x,Z[ge+4]=y.y,Z[ge+5]=y.z,Z[ge+6]=R.x,Z[ge+7]=R.y,Z[ge+8]=R.z,o.morphNormals&&(ne?(w=(ee=Ke[q].vertexNormals[J]).a,M=ee.b,C=ee.c):(M=w=Ke[q].faceNormals[J],C=w),(Q=Me[q])[ge]=w.x,Q[ge+1]=w.y,Q[ge+2]=w.z,Q[ge+3]=M.x,Q[ge+4]=M.y,Q[ge+5]=M.z,Q[ge+6]=C.x,Q[ge+7]=C.y,Q[ge+8]=C.z),ge+=9;for(a=0,h=Ge.length;a<h;a++)f=ke[J=Ge[a]],T=qe[q].vertices[f.a],y=qe[q].vertices[f.b],R=qe[q].vertices[f.c],x=qe[q].vertices[f.d],(Z=we[q])[ge]=T.x,Z[ge+1]=T.y,Z[ge+2]=T.z,Z[ge+3]=y.x,Z[ge+4]=y.y,Z[ge+5]=y.z,Z[ge+6]=R.x,Z[ge+7]=R.y,Z[ge+8]=R.z,Z[ge+9]=x.x,Z[ge+10]=x.y,Z[ge+11]=x.z,o.morphNormals&&(ne?(w=(ee=Ke[q].vertexNormals[J]).a,M=ee.b,C=ee.c,A=ee.d):(M=w=Ke[q].faceNormals[J],C=w,A=w),(Q=Me[q])[ge]=w.x,Q[ge+1]=w.y,Q[ge+2]=w.z,Q[ge+3]=M.x,Q[ge+4]=M.y,Q[ge+5]=M.z,Q[ge+6]=C.x,Q[ge+7]=C.y,Q[ge+8]=C.z,Q[ge+9]=A.x,Q[ge+10]=A.y,Q[ge+11]=A.z),ge+=12;$.bindBuffer($.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[q]),$.bufferData($.ARRAY_BUFFER,we[q],r),o.morphNormals&&($.bindBuffer($.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[q]),$.bufferData($.ARRAY_BUFFER,Me[q],r))}if(Ye.length){for(a=0,h=Oe.length;a<h;a++)D=Ye[(f=ke[Oe[a]]).a],z=Ye[f.b],N=Ye[f.c],Se[me]=D.x,Se[me+1]=D.y,Se[me+2]=D.z,Se[me+3]=D.w,Se[me+4]=z.x,Se[me+5]=z.y,Se[me+6]=z.z,Se[me+7]=z.w,Se[me+8]=N.x,Se[me+9]=N.y,Se[me+10]=N.z,Se[me+11]=N.w,V=Xe[f.a],I=Xe[f.b],O=Xe[f.c],be[me]=V.x,be[me+1]=V.y,be[me+2]=V.z,be[me+3]=V.w,be[me+4]=I.x,be[me+5]=I.y,be[me+6]=I.z,be[me+7]=I.w,be[me+8]=O.x,be[me+9]=O.y,be[me+10]=O.z,be[me+11]=O.w,me+=12;for(a=0,h=Ge.length;a<h;a++)D=Ye[(f=ke[Ge[a]]).a],z=Ye[f.b],N=Ye[f.c],B=Ye[f.d],Se[me]=D.x,Se[me+1]=D.y,Se[me+2]=D.z,Se[me+3]=D.w,Se[me+4]=z.x,Se[me+5]=z.y,Se[me+6]=z.z,Se[me+7]=z.w,Se[me+8]=N.x,Se[me+9]=N.y,Se[me+10]=N.z,Se[me+11]=N.w,Se[me+12]=B.x,Se[me+13]=B.y,Se[me+14]=B.z,Se[me+15]=B.w,V=Xe[f.a],I=Xe[f.b],O=Xe[f.c],G=Xe[f.d],be[me]=V.x,be[me+1]=V.y,be[me+2]=V.z,be[me+3]=V.w,be[me+4]=I.x,be[me+5]=I.y,be[me+6]=I.z,be[me+7]=I.w,be[me+8]=O.x,be[me+9]=O.y,be[me+10]=O.z,be[me+11]=O.w,be[me+12]=G.x,be[me+13]=G.y,be[me+14]=G.z,be[me+15]=G.w,me+=16;me>0&&($.bindBuffer($.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),$.bufferData($.ARRAY_BUFFER,be,r),$.bindBuffer($.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),$.bufferData($.ARRAY_BUFFER,Se,r))}if(Be&&oe){for(a=0,h=Oe.length;a<h;a++)E=(f=ke[Oe[a]]).vertexColors,d=f.color,3===E.length&&oe===THREE.VertexColors?(L=E[0],P=E[1],F=E[2]):(L=d,P=d,F=d),_e[de]=L.r,_e[de+1]=L.g,_e[de+2]=L.b,_e[de+3]=P.r,_e[de+4]=P.g,_e[de+5]=P.b,_e[de+6]=F.r,_e[de+7]=F.g,_e[de+8]=F.b,de+=9;for(a=0,h=Ge.length;a<h;a++)E=(f=ke[Ge[a]]).vertexColors,d=f.color,4===E.length&&oe===THREE.VertexColors?(L=E[0],P=E[1],F=E[2],U=E[3]):(L=d,P=d,F=d,U=d),_e[de]=L.r,_e[de+1]=L.g,_e[de+2]=L.b,_e[de+3]=P.r,_e[de+4]=P.g,_e[de+5]=P.b,_e[de+6]=F.r,_e[de+7]=F.g,_e[de+8]=F.b,_e[de+9]=U.r,_e[de+10]=U.g,_e[de+11]=U.b,de+=12;de>0&&($.bindBuffer($.ARRAY_BUFFER,e.__webglColorBuffer),$.bufferData($.ARRAY_BUFFER,_e,r))}if(Ne&&Pe.hasTangents){for(a=0,h=Oe.length;a<h;a++)H=(m=(f=ke[Oe[a]]).vertexTangents)[0],_=m[1],b=m[2],He[pe]=H.x,He[pe+1]=H.y,He[pe+2]=H.z,He[pe+3]=H.w,He[pe+4]=_.x,He[pe+5]=_.y,He[pe+6]=_.z,He[pe+7]=_.w,He[pe+8]=b.x,He[pe+9]=b.y,He[pe+10]=b.z,He[pe+11]=b.w,pe+=12;for(a=0,h=Ge.length;a<h;a++)H=(m=(f=ke[Ge[a]]).vertexTangents)[0],_=m[1],b=m[2],S=m[3],He[pe]=H.x,He[pe+1]=H.y,He[pe+2]=H.z,He[pe+3]=H.w,He[pe+4]=_.x,He[pe+5]=_.y,He[pe+6]=_.z,He[pe+7]=_.w,He[pe+8]=b.x,He[pe+9]=b.y,He[pe+10]=b.z,He[pe+11]=b.w,He[pe+12]=S.x,He[pe+13]=S.y,He[pe+14]=S.z,He[pe+15]=S.w,pe+=16;$.bindBuffer($.ARRAY_BUFFER,e.__webglTangentBuffer),$.bufferData($.ARRAY_BUFFER,He,r)}if(ze&&ie){for(a=0,h=Oe.length;a<h;a++)if(f=ke[Oe[a]],u=f.vertexNormals,p=f.normal,3===u.length&&ne)for(k=0;k<3;k++)j=u[k],xe[ue]=j.x,xe[ue+1]=j.y,xe[ue+2]=j.z,ue+=3;else for(k=0;k<3;k++)xe[ue]=p.x,xe[ue+1]=p.y,xe[ue+2]=p.z,ue+=3;for(a=0,h=Ge.length;a<h;a++)if(f=ke[Ge[a]],u=f.vertexNormals,p=f.normal,4===u.length&&ne)for(k=0;k<4;k++)j=u[k],xe[ue]=j.x,xe[ue+1]=j.y,xe[ue+2]=j.z,ue+=3;else for(k=0;k<4;k++)xe[ue]=p.x,xe[ue+1]=p.y,xe[ue+2]=p.z,ue+=3;$.bindBuffer($.ARRAY_BUFFER,e.__webglNormalBuffer),$.bufferData($.ARRAY_BUFFER,xe,r)}if(De&&We&&ae){for(a=0,h=Oe.length;a<h;a++)if(c=Oe[a],void 0!==(g=We[c]))for(k=0;k<3;k++)X=g[k],ye[he]=X.x,ye[he+1]=X.y,he+=2;for(a=0,h=Ge.length;a<h;a++)if(c=Ge[a],void 0!==(g=We[c]))for(k=0;k<4;k++)X=g[k],ye[he]=X.x,ye[he+1]=X.y,he+=2;he>0&&($.bindBuffer($.ARRAY_BUFFER,e.__webglUVBuffer),$.bufferData($.ARRAY_BUFFER,ye,r))}if(De&&je&&ae){for(a=0,h=Oe.length;a<h;a++)if(c=Oe[a],void 0!==(v=je[c]))for(k=0;k<3;k++)Y=v[k],Re[ce]=Y.x,Re[ce+1]=Y.y,ce+=2;for(a=0,h=Ge.length;a<h;a++)if(c=Ge[a],void 0!==(v=je[c]))for(k=0;k<4;k++)Y=v[k],Re[ce]=Y.x,Re[ce+1]=Y.y,ce+=2;ce>0&&($.bindBuffer($.ARRAY_BUFFER,e.__webglUV2Buffer),$.bufferData($.ARRAY_BUFFER,Re,r))}if(Ue){for(a=0,h=Oe.length;a<h;a++)Ae[fe]=se,Ae[fe+1]=se+1,Ae[fe+2]=se+2,fe+=3,Le[Ee]=se,Le[Ee+1]=se+1,Le[Ee+2]=se,Le[Ee+3]=se+2,Le[Ee+4]=se+1,Le[Ee+5]=se+2,Ee+=6,se+=3;for(a=0,h=Ge.length;a<h;a++)Ae[fe]=se,Ae[fe+1]=se+1,Ae[fe+2]=se+3,Ae[fe+3]=se+1,Ae[fe+4]=se+2,Ae[fe+5]=se+3,fe+=6,Le[Ee]=se,Le[Ee+1]=se+1,Le[Ee+2]=se,Le[Ee+3]=se+3,Le[Ee+4]=se+1,Le[Ee+5]=se+2,Le[Ee+6]=se+2,Le[Ee+7]=se+3,Ee+=8,se+=4;$.bindBuffer($.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),$.bufferData($.ELEMENT_ARRAY_BUFFER,Ae,r),$.bindBuffer($.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),$.bufferData($.ELEMENT_ARRAY_BUFFER,Le,r)}if(Ce)for(k=0,W=Ce.length;k<W;k++)if((re=Ce[k]).__original.needsUpdate){if(ve=0,0,1===re.size){if(void 0===re.boundTo||"vertices"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)f=ke[Oe[a]],re.array[ve]=re.value[f.a],re.array[ve+1]=re.value[f.b],re.array[ve+2]=re.value[f.c],ve+=3;for(a=0,h=Ge.length;a<h;a++)f=ke[Ge[a]],re.array[ve]=re.value[f.a],re.array[ve+1]=re.value[f.b],re.array[ve+2]=re.value[f.c],re.array[ve+3]=re.value[f.d],ve+=4}else if("faces"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)te=re.value[Oe[a]],re.array[ve]=te,re.array[ve+1]=te,re.array[ve+2]=te,ve+=3;for(a=0,h=Ge.length;a<h;a++)te=re.value[Ge[a]],re.array[ve]=te,re.array[ve+1]=te,re.array[ve+2]=te,re.array[ve+3]=te,ve+=4}}else if(2===re.size){if(void 0===re.boundTo||"vertices"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)f=ke[Oe[a]],T=re.value[f.a],y=re.value[f.b],R=re.value[f.c],re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=y.x,re.array[ve+3]=y.y,re.array[ve+4]=R.x,re.array[ve+5]=R.y,ve+=6;for(a=0,h=Ge.length;a<h;a++)f=ke[Ge[a]],T=re.value[f.a],y=re.value[f.b],R=re.value[f.c],x=re.value[f.d],re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=y.x,re.array[ve+3]=y.y,re.array[ve+4]=R.x,re.array[ve+5]=R.y,re.array[ve+6]=x.x,re.array[ve+7]=x.y,ve+=8}else if("faces"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)T=te=re.value[Oe[a]],y=te,R=te,re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=y.x,re.array[ve+3]=y.y,re.array[ve+4]=R.x,re.array[ve+5]=R.y,ve+=6;for(a=0,h=Ge.length;a<h;a++)T=te=re.value[Ge[a]],y=te,R=te,x=te,re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=y.x,re.array[ve+3]=y.y,re.array[ve+4]=R.x,re.array[ve+5]=R.y,re.array[ve+6]=x.x,re.array[ve+7]=x.y,ve+=8}}else if(3===re.size){var Ze;if(Ze="c"===re.type?["r","g","b"]:["x","y","z"],void 0===re.boundTo||"vertices"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)f=ke[Oe[a]],T=re.value[f.a],y=re.value[f.b],R=re.value[f.c],re.array[ve]=T[Ze[0]],re.array[ve+1]=T[Ze[1]],re.array[ve+2]=T[Ze[2]],re.array[ve+3]=y[Ze[0]],re.array[ve+4]=y[Ze[1]],re.array[ve+5]=y[Ze[2]],re.array[ve+6]=R[Ze[0]],re.array[ve+7]=R[Ze[1]],re.array[ve+8]=R[Ze[2]],ve+=9;for(a=0,h=Ge.length;a<h;a++)f=ke[Ge[a]],T=re.value[f.a],y=re.value[f.b],R=re.value[f.c],x=re.value[f.d],re.array[ve]=T[Ze[0]],re.array[ve+1]=T[Ze[1]],re.array[ve+2]=T[Ze[2]],re.array[ve+3]=y[Ze[0]],re.array[ve+4]=y[Ze[1]],re.array[ve+5]=y[Ze[2]],re.array[ve+6]=R[Ze[0]],re.array[ve+7]=R[Ze[1]],re.array[ve+8]=R[Ze[2]],re.array[ve+9]=x[Ze[0]],re.array[ve+10]=x[Ze[1]],re.array[ve+11]=x[Ze[2]],ve+=12}else if("faces"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)T=te=re.value[Oe[a]],y=te,R=te,re.array[ve]=T[Ze[0]],re.array[ve+1]=T[Ze[1]],re.array[ve+2]=T[Ze[2]],re.array[ve+3]=y[Ze[0]],re.array[ve+4]=y[Ze[1]],re.array[ve+5]=y[Ze[2]],re.array[ve+6]=R[Ze[0]],re.array[ve+7]=R[Ze[1]],re.array[ve+8]=R[Ze[2]],ve+=9;for(a=0,h=Ge.length;a<h;a++)T=te=re.value[Ge[a]],y=te,R=te,x=te,re.array[ve]=T[Ze[0]],re.array[ve+1]=T[Ze[1]],re.array[ve+2]=T[Ze[2]],re.array[ve+3]=y[Ze[0]],re.array[ve+4]=y[Ze[1]],re.array[ve+5]=y[Ze[2]],re.array[ve+6]=R[Ze[0]],re.array[ve+7]=R[Ze[1]],re.array[ve+8]=R[Ze[2]],re.array[ve+9]=x[Ze[0]],re.array[ve+10]=x[Ze[1]],re.array[ve+11]=x[Ze[2]],ve+=12}else if("faceVertices"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)T=(te=re.value[Oe[a]])[0],y=te[1],R=te[2],re.array[ve]=T[Ze[0]],re.array[ve+1]=T[Ze[1]],re.array[ve+2]=T[Ze[2]],re.array[ve+3]=y[Ze[0]],re.array[ve+4]=y[Ze[1]],re.array[ve+5]=y[Ze[2]],re.array[ve+6]=R[Ze[0]],re.array[ve+7]=R[Ze[1]],re.array[ve+8]=R[Ze[2]],ve+=9;for(a=0,h=Ge.length;a<h;a++)T=(te=re.value[Ge[a]])[0],y=te[1],R=te[2],x=te[3],re.array[ve]=T[Ze[0]],re.array[ve+1]=T[Ze[1]],re.array[ve+2]=T[Ze[2]],re.array[ve+3]=y[Ze[0]],re.array[ve+4]=y[Ze[1]],re.array[ve+5]=y[Ze[2]],re.array[ve+6]=R[Ze[0]],re.array[ve+7]=R[Ze[1]],re.array[ve+8]=R[Ze[2]],re.array[ve+9]=x[Ze[0]],re.array[ve+10]=x[Ze[1]],re.array[ve+11]=x[Ze[2]],ve+=12}}else if(4===re.size)if(void 0===re.boundTo||"vertices"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)f=ke[Oe[a]],T=re.value[f.a],y=re.value[f.b],R=re.value[f.c],re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=T.z,re.array[ve+3]=T.w,re.array[ve+4]=y.x,re.array[ve+5]=y.y,re.array[ve+6]=y.z,re.array[ve+7]=y.w,re.array[ve+8]=R.x,re.array[ve+9]=R.y,re.array[ve+10]=R.z,re.array[ve+11]=R.w,ve+=12;for(a=0,h=Ge.length;a<h;a++)f=ke[Ge[a]],T=re.value[f.a],y=re.value[f.b],R=re.value[f.c],x=re.value[f.d],re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=T.z,re.array[ve+3]=T.w,re.array[ve+4]=y.x,re.array[ve+5]=y.y,re.array[ve+6]=y.z,re.array[ve+7]=y.w,re.array[ve+8]=R.x,re.array[ve+9]=R.y,re.array[ve+10]=R.z,re.array[ve+11]=R.w,re.array[ve+12]=x.x,re.array[ve+13]=x.y,re.array[ve+14]=x.z,re.array[ve+15]=x.w,ve+=16}else if("faces"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)T=te=re.value[Oe[a]],y=te,R=te,re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=T.z,re.array[ve+3]=T.w,re.array[ve+4]=y.x,re.array[ve+5]=y.y,re.array[ve+6]=y.z,re.array[ve+7]=y.w,re.array[ve+8]=R.x,re.array[ve+9]=R.y,re.array[ve+10]=R.z,re.array[ve+11]=R.w,ve+=12;for(a=0,h=Ge.length;a<h;a++)T=te=re.value[Ge[a]],y=te,R=te,x=te,re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=T.z,re.array[ve+3]=T.w,re.array[ve+4]=y.x,re.array[ve+5]=y.y,re.array[ve+6]=y.z,re.array[ve+7]=y.w,re.array[ve+8]=R.x,re.array[ve+9]=R.y,re.array[ve+10]=R.z,re.array[ve+11]=R.w,re.array[ve+12]=x.x,re.array[ve+13]=x.y,re.array[ve+14]=x.z,re.array[ve+15]=x.w,ve+=16}else if("faceVertices"===re.boundTo){for(a=0,h=Oe.length;a<h;a++)T=(te=re.value[Oe[a]])[0],y=te[1],R=te[2],re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=T.z,re.array[ve+3]=T.w,re.array[ve+4]=y.x,re.array[ve+5]=y.y,re.array[ve+6]=y.z,re.array[ve+7]=y.w,re.array[ve+8]=R.x,re.array[ve+9]=R.y,re.array[ve+10]=R.z,re.array[ve+11]=R.w,ve+=12;for(a=0,h=Ge.length;a<h;a++)T=(te=re.value[Ge[a]])[0],y=te[1],R=te[2],x=te[3],re.array[ve]=T.x,re.array[ve+1]=T.y,re.array[ve+2]=T.z,re.array[ve+3]=T.w,re.array[ve+4]=y.x,re.array[ve+5]=y.y,re.array[ve+6]=y.z,re.array[ve+7]=y.w,re.array[ve+8]=R.x,re.array[ve+9]=R.y,re.array[ve+10]=R.z,re.array[ve+11]=R.w,re.array[ve+12]=x.x,re.array[ve+13]=x.y,re.array[ve+14]=x.z,re.array[ve+15]=x.w,ve+=16}$.bindBuffer($.ARRAY_BUFFER,re.buffer),$.bufferData($.ARRAY_BUFFER,re.array,r)}i&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function f(e,t,r){var i=e.attributes,o=i.index,a=i.position,n=i.normal,s=i.uv,l=i.color,h=i.tangent;if(e.elementsNeedUpdate&&void 0!==o&&($.bindBuffer($.ELEMENT_ARRAY_BUFFER,o.buffer),$.bufferData($.ELEMENT_ARRAY_BUFFER,o.array,t)),e.verticesNeedUpdate&&void 0!==a&&($.bindBuffer($.ARRAY_BUFFER,a.buffer),$.bufferData($.ARRAY_BUFFER,a.array,t)),e.normalsNeedUpdate&&void 0!==n&&($.bindBuffer($.ARRAY_BUFFER,n.buffer),$.bufferData($.ARRAY_BUFFER,n.array,t)),e.uvsNeedUpdate&&void 0!==s&&($.bindBuffer($.ARRAY_BUFFER,s.buffer),$.bufferData($.ARRAY_BUFFER,s.array,t)),e.colorsNeedUpdate&&void 0!==l&&($.bindBuffer($.ARRAY_BUFFER,l.buffer),$.bufferData($.ARRAY_BUFFER,l.array,t)),e.tangentsNeedUpdate&&void 0!==h&&($.bindBuffer($.ARRAY_BUFFER,h.buffer),$.bufferData($.ARRAY_BUFFER,h.array,t)),r)for(var c in e.attributes)delete e.attributes[c].array}function u(e){Pe[e]||($.enableVertexAttribArray(e),Pe[e]=!0)}function p(){for(var e in Pe)Pe[e]&&($.disableVertexAttribArray(e),Pe[e]=!1)}function E(e,t,r){var i=e.program.attributes;if(-1!==r.morphTargetBase&&i.position>=0?($.bindBuffer($.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),u(i.position),$.vertexAttribPointer(i.position,3,$.FLOAT,!1,0,0)):i.position>=0&&($.bindBuffer($.ARRAY_BUFFER,t.__webglVertexBuffer),u(i.position),$.vertexAttribPointer(i.position,3,$.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var o=0,a=r.morphTargetForcedOrder,n=r.morphTargetInfluences;o<e.numSupportedMorphTargets&&o<a.length;)i["morphTarget"+o]>=0&&($.bindBuffer($.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[a[o]]),u(i["morphTarget"+o]),$.vertexAttribPointer(i["morphTarget"+o],3,$.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&($.bindBuffer($.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[a[o]]),u(i["morphNormal"+o]),$.vertexAttribPointer(i["morphNormal"+o],3,$.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[a[o]],o++;else{var s,l,h=[],c=(n=r.morphTargetInfluences).length;for(l=0;l<c;l++)(s=n[l])>0&&h.push([s,l]);h.length>e.numSupportedMorphTargets?(h.sort(m),h.length=e.numSupportedMorphTargets):h.length>e.numSupportedMorphNormals?h.sort(m):0===h.length&&h.push([0,0]);for(var f,o=0;o<e.numSupportedMorphTargets;)h[o]?(f=h[o][1],i["morphTarget"+o]>=0&&($.bindBuffer($.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[f]),u(i["morphTarget"+o]),$.vertexAttribPointer(i["morphTarget"+o],3,$.FLOAT,!1,0,0)),i["morphNormal"+o]>=0&&e.morphNormals&&($.bindBuffer($.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[f]),u(i["morphNormal"+o]),$.vertexAttribPointer(i["morphNormal"+o],3,$.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[o]=n[f]):r.__webglMorphTargetInfluences[o]=0,o++}null!==e.program.uniforms.morphTargetInfluences&&$.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function d(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function m(e,t){return t[0]-e[0]}function g(e,t,r){if(e.length)for(var i=0,o=e.length;i<o;i++)se=null,fe=null,me=-1,ye=-1,Re=-1,Ee=-1,de=-1,ce=-1,he=-1,Be=!0,e[i].render(t,r,Ae,Le),se=null,fe=null,me=-1,ye=-1,Re=-1,Ee=-1,de=-1,ce=-1,he=-1,Be=!0}function v(e,t,r,i,o,a,n,s){var l,h,c,f,u,p,E;t?(u=e.length-1,p=-1,E=-1):(u=0,p=e.length,E=1);for(var d=u;d!==p;d+=E)if((l=e[d]).render){if(h=l.object,c=l.buffer,s)f=s;else{if(!(f=l[r]))continue;n&&oe.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),oe.setDepthTest(f.depthTest),oe.setDepthWrite(f.depthWrite),U(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits)}oe.setMaterialFaces(f),c instanceof THREE.BufferGeometry?oe.renderBufferDirect(i,o,a,f,c,h):oe.renderBuffer(i,o,a,f,c,h)}}function T(e,t,r,i,o,a,n){for(var s,l,h,c=0,f=e.length;c<f;c++)if(s=e[c],(l=s.object).visible){if(n)h=n;else{if(!(h=s[t]))continue;a&&oe.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),oe.setDepthTest(h.depthTest),oe.setDepthWrite(h.depthWrite),U(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}oe.renderImmediateObject(r,i,o,h,l)}}function y(e,r){var a,n,s,l;if(!e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,e instanceof THREE.Mesh)if(n=e.geometry,s=e.material,n instanceof THREE.Geometry){void 0===n.geometryGroups&&function(e,t){var r,i,o,a,n,s,l={},h=e.morphTargets.length,c=e.morphNormals.length,f=t instanceof THREE.MeshFaceMaterial;for(e.geometryGroups={},r=0,i=e.faces.length;r<i;r++)o=e.faces[r],void 0===l[a=f?o.materialIndex:0]&&(l[a]={hash:a,counter:0}),s=l[a].hash+"_"+l[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:c}),n=o instanceof THREE.Face3?3:4,e.geometryGroups[s].vertices+n>65535&&(l[a].counter+=1,s=l[a].hash+"_"+l[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:c})),o instanceof THREE.Face3?e.geometryGroups[s].faces3.push(r):e.geometryGroups[s].faces4.push(r),e.geometryGroups[s].vertices+=n;e.geometryGroupsList=[];for(var u in e.geometryGroups)e.geometryGroups[u].id=ue++,e.geometryGroupsList.push(e.geometryGroups[u])}(n,s);for(a in n.geometryGroups)(l=n.geometryGroups[a]).__webglVertexBuffer||(t(l),o(l,e),n.verticesNeedUpdate=!0,n.morphTargetsNeedUpdate=!0,n.elementsNeedUpdate=!0,n.uvsNeedUpdate=!0,n.normalsNeedUpdate=!0,n.tangentsNeedUpdate=!0,n.colorsNeedUpdate=!0)}else n instanceof THREE.BufferGeometry&&h(n);else e instanceof THREE.Ribbon?(n=e.geometry).__webglVertexBuffer||(!function(e){e.__webglVertexBuffer=$.createBuffer(),e.__webglColorBuffer=$.createBuffer(),e.__webglNormalBuffer=$.createBuffer(),oe.info.memory.geometries++}(n),function(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__normalArray=new Float32Array(3*r),e.__webglVertexCount=r,i(e,t)}(n,e),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0,n.normalsNeedUpdate=!0):e instanceof THREE.Line?(n=e.geometry).__webglVertexBuffer||(!function(e){e.__webglVertexBuffer=$.createBuffer(),e.__webglColorBuffer=$.createBuffer(),e.__webglLineDistanceBuffer=$.createBuffer(),oe.info.memory.geometries++}(n),function(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__lineDistanceArray=new Float32Array(1*r),e.__webglLineCount=r,i(e,t)}(n,e),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0,n.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&((n=e.geometry).__webglVertexBuffer||(n instanceof THREE.Geometry?(!function(e){e.__webglVertexBuffer=$.createBuffer(),e.__webglColorBuffer=$.createBuffer(),oe.info.memory.geometries++}(n),function(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__sortArray=[],e.__webglParticleCount=r,i(e,t)}(n,e),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0):n instanceof THREE.BufferGeometry&&h(n)));if(!e.__webglActive){if(e instanceof THREE.Mesh)if((n=e.geometry)instanceof THREE.BufferGeometry)R(r.__webglObjects,n,e);else for(a in n.geometryGroups)l=n.geometryGroups[a],R(r.__webglObjects,l,e);else e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(n=e.geometry,R(r.__webglObjects,n,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?function(e,t){e.push({object:t,opaque:null,transparent:null})}(r.__webglObjectsImmediate,e):e instanceof THREE.Sprite?r.__webglSprites.push(e):e instanceof THREE.LensFlare&&r.__webglFlares.push(e);e.__webglActive=!0}}function R(e,t,r){e.push({buffer:t,object:r,opaque:null,transparent:null})}function x(e){var t,r,i,n=e.geometry;if(e instanceof THREE.Mesh)if(n instanceof THREE.BufferGeometry)(n.verticesNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate)&&f(n,$.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1;else{for(var s=0,l=n.geometryGroupsList.length;s<l;s++)i=a(e,t=n.geometryGroupsList[s]),n.buffersNeedUpdate&&o(t,e),r=i.attributes&&H(i),(n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||r)&&c(t,e,$.DYNAMIC_DRAW,!n.dynamic,i);n.verticesNeedUpdate=!1,n.morphTargetsNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1,n.buffersNeedUpdate=!1,i.attributes&&_(i)}else e instanceof THREE.Ribbon?(r=(i=a(e,n)).attributes&&H(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.normalsNeedUpdate||r)&&function(e,t){var r,i,o,a,n,s,l,h,c,f,u,p,E,d=e.vertices,m=e.colors,g=e.normals,v=d.length,T=m.length,y=g.length,R=e.__vertexArray,x=e.__colorArray,H=e.__normalArray,_=e.verticesNeedUpdate,b=e.colorsNeedUpdate,S=e.normalsNeedUpdate,w=e.__webglCustomAttributesList;if(_){for(r=0;r<v;r++)a=d[r],R[n=3*r]=a.x,R[n+1]=a.y,R[n+2]=a.z;$.bindBuffer($.ARRAY_BUFFER,e.__webglVertexBuffer),$.bufferData($.ARRAY_BUFFER,R,t)}if(b){for(i=0;i<T;i++)s=m[i],x[n=3*i]=s.r,x[n+1]=s.g,x[n+2]=s.b;$.bindBuffer($.ARRAY_BUFFER,e.__webglColorBuffer),$.bufferData($.ARRAY_BUFFER,x,t)}if(S){for(o=0;o<y;o++)l=g[o],H[n=3*o]=l.x,H[n+1]=l.y,H[n+2]=l.z;$.bindBuffer($.ARRAY_BUFFER,e.__webglNormalBuffer),$.bufferData($.ARRAY_BUFFER,H,t)}if(w)for(h=0,c=w.length;h<c;h++)if((p=w[h]).needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo)){if(n=0,u=p.value.length,1===p.size)for(f=0;f<u;f++)p.array[f]=p.value[f];else if(2===p.size)for(f=0;f<u;f++)E=p.value[f],p.array[n]=E.x,p.array[n+1]=E.y,n+=2;else if(3===p.size)if("c"===p.type)for(f=0;f<u;f++)E=p.value[f],p.array[n]=E.r,p.array[n+1]=E.g,p.array[n+2]=E.b,n+=3;else for(f=0;f<u;f++)E=p.value[f],p.array[n]=E.x,p.array[n+1]=E.y,p.array[n+2]=E.z,n+=3;else if(4===p.size)for(f=0;f<u;f++)E=p.value[f],p.array[n]=E.x,p.array[n+1]=E.y,p.array[n+2]=E.z,p.array[n+3]=E.w,n+=4;$.bindBuffer($.ARRAY_BUFFER,p.buffer),$.bufferData($.ARRAY_BUFFER,p.array,t)}}(n,$.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.normalsNeedUpdate=!1,i.attributes&&_(i)):e instanceof THREE.Line?(r=(i=a(e,n)).attributes&&H(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||r)&&function(e,t){var r,i,o,a,n,s,l,h,c,f,u,p,E=e.vertices,d=e.colors,m=e.lineDistances,g=E.length,v=d.length,T=m.length,y=e.__vertexArray,R=e.__colorArray,x=e.__lineDistanceArray,H=e.verticesNeedUpdate,_=e.colorsNeedUpdate,b=e.lineDistancesNeedUpdate,S=e.__webglCustomAttributesList;if(H){for(r=0;r<g;r++)a=E[r],y[n=3*r]=a.x,y[n+1]=a.y,y[n+2]=a.z;$.bindBuffer($.ARRAY_BUFFER,e.__webglVertexBuffer),$.bufferData($.ARRAY_BUFFER,y,t)}if(_){for(i=0;i<v;i++)s=d[i],R[n=3*i]=s.r,R[n+1]=s.g,R[n+2]=s.b;$.bindBuffer($.ARRAY_BUFFER,e.__webglColorBuffer),$.bufferData($.ARRAY_BUFFER,R,t)}if(b){for(o=0;o<T;o++)x[o]=m[o];$.bindBuffer($.ARRAY_BUFFER,e.__webglLineDistanceBuffer),$.bufferData($.ARRAY_BUFFER,x,t)}if(S)for(l=0,h=S.length;l<h;l++)if((p=S[l]).needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo)){if(n=0,f=p.value.length,1===p.size)for(c=0;c<f;c++)p.array[c]=p.value[c];else if(2===p.size)for(c=0;c<f;c++)u=p.value[c],p.array[n]=u.x,p.array[n+1]=u.y,n+=2;else if(3===p.size)if("c"===p.type)for(c=0;c<f;c++)u=p.value[c],p.array[n]=u.r,p.array[n+1]=u.g,p.array[n+2]=u.b,n+=3;else for(c=0;c<f;c++)u=p.value[c],p.array[n]=u.x,p.array[n+1]=u.y,p.array[n+2]=u.z,n+=3;else if(4===p.size)for(c=0;c<f;c++)u=p.value[c],p.array[n]=u.x,p.array[n+1]=u.y,p.array[n+2]=u.z,p.array[n+3]=u.w,n+=4;$.bindBuffer($.ARRAY_BUFFER,p.buffer),$.bufferData($.ARRAY_BUFFER,p.array,t)}}(n,$.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.lineDistancesNeedUpdate=!1,i.attributes&&_(i)):e instanceof THREE.ParticleSystem&&(n instanceof THREE.BufferGeometry?((n.verticesNeedUpdate||n.colorsNeedUpdate)&&f(n,$.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1):(r=(i=a(e,n)).attributes&&H(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||e.sortParticles||r)&&function(e,t,r){var i,o,a,n,s,l,h,c,f,u,p,E,d=e.vertices,g=d.length,v=e.colors,T=v.length,y=e.__vertexArray,R=e.__colorArray,x=e.__sortArray,H=e.verticesNeedUpdate,_=(e.elementsNeedUpdate,e.colorsNeedUpdate),b=e.__webglCustomAttributesList;if(r.sortParticles){for(De.copy(Ue),De.multiplySelf(r.matrixWorld),i=0;i<g;i++)a=d[i],ze.copy(a),De.multiplyVector3(ze),x[i]=[ze.z,i];for(x.sort(m),i=0;i<g;i++)a=d[x[i][1]],y[n=3*i]=a.x,y[n+1]=a.y,y[n+2]=a.z;for(o=0;o<T;o++)n=3*o,l=v[x[o][1]],R[n]=l.r,R[n+1]=l.g,R[n+2]=l.b;if(b)for(h=0,c=b.length;h<c;h++)if(void 0===(E=b[h]).boundTo||"vertices"===E.boundTo)if(n=0,u=E.value.length,1===E.size)for(f=0;f<u;f++)s=x[f][1],E.array[f]=E.value[s];else if(2===E.size)for(f=0;f<u;f++)s=x[f][1],p=E.value[s],E.array[n]=p.x,E.array[n+1]=p.y,n+=2;else if(3===E.size)if("c"===E.type)for(f=0;f<u;f++)s=x[f][1],p=E.value[s],E.array[n]=p.r,E.array[n+1]=p.g,E.array[n+2]=p.b,n+=3;else for(f=0;f<u;f++)s=x[f][1],p=E.value[s],E.array[n]=p.x,E.array[n+1]=p.y,E.array[n+2]=p.z,n+=3;else if(4===E.size)for(f=0;f<u;f++)s=x[f][1],p=E.value[s],E.array[n]=p.x,E.array[n+1]=p.y,E.array[n+2]=p.z,E.array[n+3]=p.w,n+=4}else{if(H)for(i=0;i<g;i++)a=d[i],y[n=3*i]=a.x,y[n+1]=a.y,y[n+2]=a.z;if(_)for(o=0;o<T;o++)l=v[o],R[n=3*o]=l.r,R[n+1]=l.g,R[n+2]=l.b;if(b)for(h=0,c=b.length;h<c;h++)if((E=b[h]).needsUpdate&&(void 0===E.boundTo||"vertices"===E.boundTo))if(u=E.value.length,n=0,1===E.size)for(f=0;f<u;f++)E.array[f]=E.value[f];else if(2===E.size)for(f=0;f<u;f++)p=E.value[f],E.array[n]=p.x,E.array[n+1]=p.y,n+=2;else if(3===E.size)if("c"===E.type)for(f=0;f<u;f++)p=E.value[f],E.array[n]=p.r,E.array[n+1]=p.g,E.array[n+2]=p.b,n+=3;else for(f=0;f<u;f++)p=E.value[f],E.array[n]=p.x,E.array[n+1]=p.y,E.array[n+2]=p.z,n+=3;else if(4===E.size)for(f=0;f<u;f++)p=E.value[f],E.array[n]=p.x,E.array[n+1]=p.y,E.array[n+2]=p.z,E.array[n+3]=p.w,n+=4}if((H||r.sortParticles)&&($.bindBuffer($.ARRAY_BUFFER,e.__webglVertexBuffer),$.bufferData($.ARRAY_BUFFER,y,t)),(_||r.sortParticles)&&($.bindBuffer($.ARRAY_BUFFER,e.__webglColorBuffer),$.bufferData($.ARRAY_BUFFER,R,t)),b)for(h=0,c=b.length;h<c;h++)((E=b[h]).needsUpdate||r.sortParticles)&&($.bindBuffer($.ARRAY_BUFFER,E.buffer),$.bufferData($.ARRAY_BUFFER,E.array,t))}(n,$.DYNAMIC_DRAW,e),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,i.attributes&&_(i)))}function H(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function _(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function b(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function S(e,t){for(var r=e.length-1;r>=0;r--)e[r]===t&&e.splice(r,1)}function w(e,t,r,i,o){pe=0,i.needsUpdate&&(i.program&&oe.deallocateMaterial(i),oe.initMaterial(i,t,r,o),i.needsUpdate=!1),i.morphTargets&&(o.__webglMorphTargetInfluences||(o.__webglMorphTargetInfluences=new Float32Array(oe.maxMorphTargets)));var a=!1,n=i.program,s=n.uniforms,l=i.uniforms;if(n!==se&&($.useProgram(n),se=n,a=!0),i.id!==he&&(he=i.id,a=!0),(a||e!==fe)&&($.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==fe&&(fe=e)),i.skinning)if(je&&o.useVertexTexture){if(null!==s.boneTexture){var h=C();$.uniform1i(s.boneTexture,h),oe.setTexture(o.boneTexture,h)}}else null!==s.boneGlobalMatrices&&$.uniformMatrix4fv(s.boneGlobalMatrices,!1,o.boneMatrices);if(a){if(r&&i.fog&&function(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}(l,r),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights)&&(Be&&(!function(e,t){var r,i,o,a,n,s,l,h,c,f,u=0,p=0,E=0,d=Ve,m=d.directional.colors,g=d.directional.positions,v=d.point.colors,T=d.point.positions,y=d.point.distances,R=d.spot.colors,x=d.spot.positions,H=d.spot.distances,_=d.spot.directions,b=d.spot.anglesCos,S=d.spot.exponents,w=d.hemi.skyColors,M=d.hemi.groundColors,C=d.hemi.positions,A=0,F=0,U=0,D=0,z=0,N=0,B=0,V=0,I=0,O=0,G=0,k=0;for(r=0,i=t.length;r<i;r++)if(!(o=t[r]).onlyShadow)if(a=o.color,l=o.intensity,f=o.distance,o instanceof THREE.AmbientLight){if(!o.visible)continue;oe.gammaInput?(u+=a.r*a.r,p+=a.g*a.g,E+=a.b*a.b):(u+=a.r,p+=a.g,E+=a.b)}else if(o instanceof THREE.DirectionalLight){if(z+=1,!o.visible)continue;I=3*A,oe.gammaInput?L(m,I,a,l*l):P(m,I,a,l),Ne.copy(o.matrixWorld.getPosition()),Ne.subSelf(o.target.matrixWorld.getPosition()),Ne.normalize(),g[I]=Ne.x,g[I+1]=Ne.y,g[I+2]=Ne.z,A+=1}else if(o instanceof THREE.PointLight){if(N+=1,!o.visible)continue;O=3*F,oe.gammaInput?L(v,O,a,l*l):P(v,O,a,l),c=o.matrixWorld.getPosition(),T[O]=c.x,T[O+1]=c.y,T[O+2]=c.z,y[F]=f,F+=1}else if(o instanceof THREE.SpotLight){if(B+=1,!o.visible)continue;G=3*U,oe.gammaInput?L(R,G,a,l*l):P(R,G,a,l),c=o.matrixWorld.getPosition(),x[G]=c.x,x[G+1]=c.y,x[G+2]=c.z,H[U]=f,Ne.copy(c),Ne.subSelf(o.target.matrixWorld.getPosition()),Ne.normalize(),_[G]=Ne.x,_[G+1]=Ne.y,_[G+2]=Ne.z,b[U]=Math.cos(o.angle),S[U]=o.exponent,U+=1}else if(o instanceof THREE.HemisphereLight){if(V+=1,!o.visible)continue;n=o.color,s=o.groundColor,k=3*D,oe.gammaInput?(L(w,k,n,h=l*l),L(M,k,s,h)):(P(w,k,n,l),P(M,k,s,l)),Ne.copy(o.matrixWorld.getPosition()),Ne.normalize(),C[k]=Ne.x,C[k+1]=Ne.y,C[k+2]=Ne.z,D+=1}for(r=3*A,i=Math.max(m.length,3*z);r<i;r++)m[r]=0;for(r=3*A,i=Math.max(g.length,3*z);r<i;r++)g[r]=0;for(r=3*F,i=Math.max(v.length,3*N);r<i;r++)v[r]=0;for(r=3*F,i=Math.max(T.length,3*N);r<i;r++)T[r]=0;for(r=F,i=Math.max(y.length,N);r<i;r++)y[r]=0;for(r=3*U,i=Math.max(R.length,3*B);r<i;r++)R[r]=0;for(r=3*U,i=Math.max(x.length,3*B);r<i;r++)x[r]=0;for(r=3*U,i=Math.max(_.length,3*B);r<i;r++)_[r]=0;for(r=U,i=Math.max(b.length,B);r<i;r++)b[r]=0;for(r=U,i=Math.max(S.length,B);r<i;r++)S[r]=0;for(r=U,i=Math.max(H.length,B);r<i;r++)H[r]=0;for(r=3*D,i=Math.max(w.length,3*V);r<i;r++)w[r]=0;for(r=3*D,i=Math.max(M.length,3*V);r<i;r++)M[r]=0;for(r=3*D,i=Math.max(C.length,3*V);r<i;r++)C[r]=0;d.directional.length=A,d.point.length=F,d.spot.length=U,d.hemi.length=D,d.ambient[0]=u,d.ambient[1]=p,d.ambient[2]=E}(0,t),Be=!1),function(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}(l,Ve)),(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&function(e,t){e.opacity.value=t.opacity,oe.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color;e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale);t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap&&(r=t.bumpMap);if(void 0!==r){var i=r.offset,o=r.repeat;e.offsetRepeat.value.set(i.x,i.y,o.x,o.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,oe.gammaInput,e.reflectivity.value=t.reflectivity;e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}(l,i),i instanceof THREE.LineBasicMaterial?M(l,i):i instanceof THREE.LineDashedMaterial?(M(l,i),function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(l,i)):i instanceof THREE.ParticleBasicMaterial?function(e,t){e.psColor.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size,e.scale.value=W.height/2,e.map.value=t.map}(l,i):i instanceof THREE.MeshPhongMaterial?function(e,t){e.shininess.value=t.shininess,oe.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(l,i):i instanceof THREE.MeshLambertMaterial?function(e,t){oe.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive);t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}(l,i):i instanceof THREE.MeshDepthMaterial?(l.mNear.value=e.near,l.mFar.value=e.far,l.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(l.opacity.value=i.opacity),o.receiveShadow&&!i._shadowPass&&function(e,t){if(e.shadowMatrix)for(var r=0,i=0,o=t.length;i<o;i++){var a=t[i];a.castShadow&&((a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[r]=a.shadowMap,e.shadowMapSize.value[r]=a.shadowMapSize,e.shadowMatrix.value[r]=a.shadowMatrix,e.shadowDarkness.value[r]=a.shadowDarkness,e.shadowBias.value[r]=a.shadowBias,r++))}}(l,t),function(e,t){var r,i,o,a,n,s,l,h,c,f,u;for(c=0,f=t.length;c<f;c++)if(a=e.uniforms[t[c][1]])if(r=t[c][0],o=r.type,i=r.value,"i"===o)$.uniform1i(a,i);else if("f"===o)$.uniform1f(a,i);else if("v2"===o)$.uniform2f(a,i.x,i.y);else if("v3"===o)$.uniform3f(a,i.x,i.y,i.z);else if("v4"===o)$.uniform4f(a,i.x,i.y,i.z,i.w);else if("c"===o)$.uniform3f(a,i.r,i.g,i.b);else if("iv1"===o)$.uniform1iv(a,i);else if("iv"===o)$.uniform3iv(a,i);else if("fv1"===o)$.uniform1fv(a,i);else if("fv"===o)$.uniform3fv(a,i);else if("v2v"===o){for(void 0===r._array&&(r._array=new Float32Array(2*i.length)),l=0,h=i.length;l<h;l++)u=2*l,r._array[u]=i[l].x,r._array[u+1]=i[l].y;$.uniform2fv(a,r._array)}else if("v3v"===o){for(void 0===r._array&&(r._array=new Float32Array(3*i.length)),l=0,h=i.length;l<h;l++)u=3*l,r._array[u]=i[l].x,r._array[u+1]=i[l].y,r._array[u+2]=i[l].z;$.uniform3fv(a,r._array)}else if("v4v"===o){for(void 0===r._array&&(r._array=new Float32Array(4*i.length)),l=0,h=i.length;l<h;l++)u=4*l,r._array[u]=i[l].x,r._array[u+1]=i[l].y,r._array[u+2]=i[l].z,r._array[u+3]=i[l].w;$.uniform4fv(a,r._array)}else if("m4"===o)void 0===r._array&&(r._array=new Float32Array(16)),i.flattenToArray(r._array),$.uniformMatrix4fv(a,!1,r._array);else if("m4v"===o){for(void 0===r._array&&(r._array=new Float32Array(16*i.length)),l=0,h=i.length;l<h;l++)i[l].flattenToArrayOffset(r._array,16*l);$.uniformMatrix4fv(a,!1,r._array)}else if("t"===o){if(n=i,s=C(),$.uniform1i(a,s),!n)continue;n.image instanceof Array&&6===n.image.length?function(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.image.__webglTextureCube=$.createTexture(),oe.info.memory.textures++),$.activeTexture($.TEXTURE0+t),$.bindTexture($.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),$.pixelStorei($.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,i=[],o=0;o<6;o++)oe.autoScaleCubemaps&&!r?i[o]=V(e.image[o],Ge):i[o]=e.image[o];var a=i[0],n=N(a.width)&&N(a.height),s=k(e.format),l=k(e.type);B($.TEXTURE_CUBE_MAP,e,n);for(o=0;o<6;o++)if(r)for(var h,c=i[o].mipmaps,f=0,u=c.length;f<u;f++)h=c[f],$.compressedTexImage2D($.TEXTURE_CUBE_MAP_POSITIVE_X+o,f,s,h.width,h.height,0,h.data);else $.texImage2D($.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,s,s,l,i[o]);e.generateMipmaps&&n&&$.generateMipmap($.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else $.activeTexture($.TEXTURE0+t),$.bindTexture($.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}(n,s):n instanceof THREE.WebGLRenderTargetCube?function(e,t){$.activeTexture($.TEXTURE0+t),$.bindTexture($.TEXTURE_CUBE_MAP,e.__webglTexture)}(n,s):oe.setTexture(n,s)}else if("tv"===o){for(void 0===r._array&&(r._array=[]),l=0,h=r.value.length;l<h;l++)r._array[l]=C();for($.uniform1iv(a,r._array),l=0,h=r.value.length;l<h;l++)n=r.value[l],s=r._array[l],n&&oe.setTexture(n,s)}}(n,i.uniformsList),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==s.cameraPosition){var c=e.matrixWorld.getPosition();$.uniform3f(s.cameraPosition,c.x,c.y,c.z)}(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==s.viewMatrix&&$.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return function(e,t){$.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&$.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}(s,o),null!==s.modelMatrix&&$.uniformMatrix4fv(s.modelMatrix,!1,o.matrixWorld.elements),n}function M(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function C(){var e=pe;return e>=Ie&&console.warn("Trying to use "+e+" texture units while this GPU supports only "+Ie),pe+=1,e}function A(e,t){e._modelViewMatrix.multiply(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function L(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function P(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function F(e){e!==be&&($.lineWidth(e),be=e)}function U(e,t,r){xe!==e&&(e?$.enable($.POLYGON_OFFSET_FILL):$.disable($.POLYGON_OFFSET_FILL),xe=e),!e||He===t&&_e===r||($.polygonOffset(t,r),He=t,_e=r)}function D(e,t,r,i,o,a,n){var s,l,h,c,f,u=[];e?u.push(e):(u.push(t),u.push(r));for(h in a)u.push(h),u.push(a[h]);for(s in n)u.push(s),u.push(n[s]);for(f=u.join(),s=0,l=ae.length;s<l;s++){var p=ae[s];if(p.code===f)return p.usedTimes++,p.program}var E="SHADOWMAP_TYPE_BASIC";n.shadowMapType===THREE.PCFShadowMap?E="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(E="SHADOWMAP_TYPE_PCF_SOFT");var d=function(e){var t,r,i=[];for(var o in e)!1!==(t=e[o])&&(r="#define "+o+" "+t,i.push(r));return i.join("\n")}(a);c=$.createProgram();var m=["precision "+j+" float;",d,We?"#define VERTEX_TEXTURES":"",oe.gammaInput?"#define GAMMA_INPUT":"",oe.gammaOutput?"#define GAMMA_OUTPUT":"",oe.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.boneTextureWidth?"#define N_BONE_PIXEL_X "+n.boneTextureWidth.toFixed(1):"",n.boneTextureHeight?"#define N_BONE_PIXEL_Y "+n.boneTextureHeight.toFixed(1):"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+E:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),g=z("fragment",["precision "+j+" float;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",d,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",oe.gammaInput?"#define GAMMA_INPUT":"",oe.gammaOutput?"#define GAMMA_OUTPUT":"",oe.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+E:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n")+t),v=z("vertex",m+r);$.attachShader(c,v),$.attachShader(c,g),$.linkProgram(c),$.getProgramParameter(c,$.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+$.getProgramParameter(c,$.VALIDATE_STATUS)+", gl error ["+$.getError()+"]"),$.deleteShader(g),$.deleteShader(v),c.uniforms={},c.attributes={};var T,y,R,x;T=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],n.useVertexTexture?T.push("boneTexture"):T.push("boneGlobalMatrices");for(y in i)T.push(y);for(function(e,t){var r,i,o;for(r=0,i=t.length;r<i;r++)o=t[r],e.uniforms[o]=$.getUniformLocation(e,o)}(c,T),T=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],x=0;x<n.maxMorphTargets;x++)T.push("morphTarget"+x);for(x=0;x<n.maxMorphNormals;x++)T.push("morphNormal"+x);for(R in o)T.push(R);return function(e,t){var r,i,o;for(r=0,i=t.length;r<i;r++)o=t[r],e.attributes[o]=$.getAttribLocation(e,o)}(c,T),c.id=ne++,ae.push({program:c,code:f,usedTimes:1}),oe.info.memory.programs=ae.length,c}function z(e,t){var r;return"fragment"===e?r=$.createShader($.FRAGMENT_SHADER):"vertex"===e&&(r=$.createShader($.VERTEX_SHADER)),$.shaderSource(r,t),$.compileShader(r),$.getShaderParameter(r,$.COMPILE_STATUS)?r:(console.error($.getShaderInfoLog(r)),console.error(function(e){for(var t=e.split("\n"),r=0,i=t.length;r<i;r++)t[r]=r+1+": "+t[r];return t.join("\n")}(t)),null)}function N(e){return 0==(e&e-1)}function B(e,t,r){r?($.texParameteri(e,$.TEXTURE_WRAP_S,k(t.wrapS)),$.texParameteri(e,$.TEXTURE_WRAP_T,k(t.wrapT)),$.texParameteri(e,$.TEXTURE_MAG_FILTER,k(t.magFilter)),$.texParameteri(e,$.TEXTURE_MIN_FILTER,k(t.minFilter))):($.texParameteri(e,$.TEXTURE_WRAP_S,$.CLAMP_TO_EDGE),$.texParameteri(e,$.TEXTURE_WRAP_T,$.CLAMP_TO_EDGE),$.texParameteri(e,$.TEXTURE_MAG_FILTER,G(t.magFilter)),$.texParameteri(e,$.TEXTURE_MIN_FILTER,G(t.minFilter))),re&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&($.texParameterf(e,re.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,ke)),t.__oldAnisotropy=t.anisotropy)}function V(e,t){if(e.width<=t&&e.height<=t)return e;var r=Math.max(e.width,e.height),i=Math.floor(e.width*t/r),o=Math.floor(e.height*t/r),a=document.createElement("canvas");a.width=i,a.height=o;return a.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i,o),a}function I(e,t,r){$.bindFramebuffer($.FRAMEBUFFER,e),$.framebufferTexture2D($.FRAMEBUFFER,$.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function O(e,t){$.bindRenderbuffer($.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?($.renderbufferStorage($.RENDERBUFFER,$.DEPTH_COMPONENT16,t.width,t.height),$.framebufferRenderbuffer($.FRAMEBUFFER,$.DEPTH_ATTACHMENT,$.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?($.renderbufferStorage($.RENDERBUFFER,$.DEPTH_STENCIL,t.width,t.height),$.framebufferRenderbuffer($.FRAMEBUFFER,$.DEPTH_STENCIL_ATTACHMENT,$.RENDERBUFFER,e)):$.renderbufferStorage($.RENDERBUFFER,$.RGBA4,t.width,t.height)}function G(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?$.NEAREST:$.LINEAR}function k(e){if(e===THREE.RepeatWrapping)return $.REPEAT;if(e===THREE.ClampToEdgeWrapping)return $.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return $.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return $.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return $.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return $.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return $.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return $.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return $.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return $.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return $.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return $.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return $.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return $.BYTE;if(e===THREE.ShortType)return $.SHORT;if(e===THREE.UnsignedShortType)return $.UNSIGNED_SHORT;if(e===THREE.IntType)return $.INT;if(e===THREE.UnsignedIntType)return $.UNSIGNED_INT;if(e===THREE.FloatType)return $.FLOAT;if(e===THREE.AlphaFormat)return $.ALPHA;if(e===THREE.RGBFormat)return $.RGB;if(e===THREE.RGBAFormat)return $.RGBA;if(e===THREE.LuminanceFormat)return $.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return $.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return $.FUNC_ADD;if(e===THREE.SubtractEquation)return $.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return $.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return $.ZERO;if(e===THREE.OneFactor)return $.ONE;if(e===THREE.SrcColorFactor)return $.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return $.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return $.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return $.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return $.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return $.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return $.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return $.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return $.SRC_ALPHA_SATURATE;if(void 0!==ie){if(e===THREE.RGB_S3TC_DXT1_Format)return ie.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return ie.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return ie.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return ie.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var W=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),j=void 0!==e.precision?e.precision:"highp",X=void 0===e.alpha||e.alpha,Y=void 0===e.premultipliedAlpha||e.premultipliedAlpha,q=void 0!==e.antialias&&e.antialias,K=void 0===e.stencil||e.stencil,Z=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,Q=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),J=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=W,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.autoUpdateScene=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var $,ee,te,re,ie,oe=this,ae=[],ne=0,se=null,le=null,he=-1,ce=null,fe=null,ue=0,pe=0,Ee=-1,de=-1,me=-1,ge=-1,ve=-1,Te=-1,ye=-1,Re=-1,xe=null,He=null,_e=null,be=null,Se=0,we=0,Me=0,Ce=0,Ae=0,Le=0,Pe={},Fe=new THREE.Frustum,Ue=new THREE.Matrix4,De=new THREE.Matrix4,ze=new THREE.Vector3,Ne=new THREE.Vector3,Be=!0,Ve={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};!function(){try{if(!($=W.getContext("experimental-webgl",{alpha:X,premultipliedAlpha:Y,antialias:q,stencil:K,preserveDrawingBuffer:Z})))throw"Error creating WebGL context."}catch(e){console.error(e)}ee=$.getExtension("OES_texture_float"),te=$.getExtension("OES_standard_derivatives"),re=$.getExtension("EXT_texture_filter_anisotropic")||$.getExtension("MOZ_EXT_texture_filter_anisotropic")||$.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),ie=$.getExtension("WEBGL_compressed_texture_s3tc")||$.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||$.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),ee||console.log("THREE.WebGLRenderer: Float textures not supported."),te||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),re||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),ie||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}(),$.clearColor(0,0,0,1),$.clearDepth(1),$.clearStencil(0),$.enable($.DEPTH_TEST),$.depthFunc($.LEQUAL),$.frontFace($.CCW),$.cullFace($.BACK),$.enable($.CULL_FACE),$.enable($.BLEND),$.blendEquation($.FUNC_ADD),$.blendFunc($.SRC_ALPHA,$.ONE_MINUS_SRC_ALPHA),$.clearColor(Q.r,Q.g,Q.b,J),this.context=$;var Ie=$.getParameter($.MAX_TEXTURE_IMAGE_UNITS),Oe=$.getParameter($.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Ge=($.getParameter($.MAX_TEXTURE_SIZE),$.getParameter($.MAX_CUBE_MAP_TEXTURE_SIZE)),ke=re?$.getParameter(re.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,We=Oe>0,je=We&&ee;ie&&$.getParameter($.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return $},this.supportsVertexTextures=function(){return We},this.getMaxAnisotropy=function(){return ke},this.setSize=function(e,t){W.width=e,W.height=t,this.setViewport(0,0,W.width,W.height)},this.setViewport=function(e,t,r,i){Se=void 0!==e?e:0,we=void 0!==t?t:0,Me=void 0!==r?r:W.width,Ce=void 0!==i?i:W.height,$.viewport(Se,we,Me,Ce)},this.setScissor=function(e,t,r,i){$.scissor(e,t,r,i)},this.enableScissorTest=function(e){e?$.enable($.SCISSOR_TEST):$.disable($.SCISSOR_TEST)},this.setClearColorHex=function(e,t){Q.setHex(e),J=t,$.clearColor(Q.r,Q.g,Q.b,J)},this.setClearColor=function(e,t){Q.copy(e),J=t,$.clearColor(Q.r,Q.g,Q.b,J)},this.getClearColor=function(){return Q},this.getClearAlpha=function(){return J},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=$.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=$.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=$.STENCIL_BUFFER_BIT),$.clear(i)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.deallocateObject=function(e){if(e.__webglInit)if(e.__webglInit=!1,delete e._modelViewMatrix,delete e._normalMatrix,e instanceof THREE.Mesh)for(var t in e.geometry.geometryGroups)!function(e){$.deleteBuffer(e.__webglVertexBuffer),$.deleteBuffer(e.__webglNormalBuffer),$.deleteBuffer(e.__webglTangentBuffer),$.deleteBuffer(e.__webglColorBuffer),$.deleteBuffer(e.__webglUVBuffer),$.deleteBuffer(e.__webglUV2Buffer),$.deleteBuffer(e.__webglSkinIndicesBuffer),$.deleteBuffer(e.__webglSkinWeightsBuffer),$.deleteBuffer(e.__webglFaceBuffer),$.deleteBuffer(e.__webglLineBuffer);var t,i;if(e.numMorphTargets)for(t=0,i=e.numMorphTargets;t<i;t++)$.deleteBuffer(e.__webglMorphTargetsBuffers[t]);if(e.numMorphNormals)for(t=0,i=e.numMorphNormals;t<i;t++)$.deleteBuffer(e.__webglMorphNormalsBuffers[t]);r(e),oe.info.memory.geometries--}(e.geometry.geometryGroups[t]);else e instanceof THREE.Ribbon?function(e){$.deleteBuffer(e.__webglVertexBuffer),$.deleteBuffer(e.__webglColorBuffer),$.deleteBuffer(e.__webglNormalBuffer),r(e),oe.info.memory.geometries--}(e.geometry):e instanceof THREE.Line?function(e){$.deleteBuffer(e.__webglVertexBuffer),$.deleteBuffer(e.__webglColorBuffer),$.deleteBuffer(e.__webglLineDistanceBuffer),r(e),oe.info.memory.geometries--}(e.geometry):e instanceof THREE.ParticleSystem&&function(e){$.deleteBuffer(e.__webglVertexBuffer),$.deleteBuffer(e.__webglColorBuffer),r(e),oe.info.memory.geometries--}(e.geometry)},this.deallocateTexture=function(e){if(e.image&&e.image.__webglTextureCube)$.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,$.deleteTexture(e.__webglTexture)}oe.info.memory.textures--},this.deallocateRenderTarget=function(e){if(e&&e.__webglTexture)if($.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;t<6;t++)$.deleteFramebuffer(e.__webglFramebuffer[t]),$.deleteRenderbuffer(e.__webglRenderbuffer[t]);else $.deleteFramebuffer(e.__webglFramebuffer),$.deleteRenderbuffer(e.__webglRenderbuffer)},this.deallocateMaterial=function(e){var t=e.program;if(t){e.program=void 0;var r,i,o,a=!1;for(r=0,i=ae.length;r<i;r++)if((o=ae[r]).program===t){o.usedTimes--,0===o.usedTimes&&(a=!0);break}if(a){var n=[];for(r=0,i=ae.length;r<i;r++)(o=ae[r]).program!==t&&n.push(o);ae=n,$.deleteProgram(t),oe.info.memory.programs--}}},this.updateShadowMap=function(e,t){se=null,me=-1,ye=-1,Re=-1,ce=-1,he=-1,Be=!0,Ee=-1,de=-1,this.shadowMapPlugin.update(e,t)},this.renderBufferImmediate=function(e,t,r){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=$.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=$.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=$.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=$.createBuffer()),e.hasPositions&&($.bindBuffer($.ARRAY_BUFFER,e.__webglVertexBuffer),$.bufferData($.ARRAY_BUFFER,e.positionArray,$.DYNAMIC_DRAW),$.enableVertexAttribArray(t.attributes.position),$.vertexAttribPointer(t.attributes.position,3,$.FLOAT,!1,0,0)),e.hasNormals){if($.bindBuffer($.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,o,a,n,s,l,h,c,f,u,p,E=3*e.count;for(p=0;p<E;p+=9)n=(u=e.normalArray)[p],l=u[p+1],c=u[p+2],s=u[p+3],h=u[p+4],f=u[p+5],i=(n+s+u[p+6])/3,o=(l+h+u[p+7])/3,a=(c+f+u[p+8])/3,u[p]=i,u[p+1]=o,u[p+2]=a,u[p+3]=i,u[p+4]=o,u[p+5]=a,u[p+6]=i,u[p+7]=o,u[p+8]=a}$.bufferData($.ARRAY_BUFFER,e.normalArray,$.DYNAMIC_DRAW),$.enableVertexAttribArray(t.attributes.normal),$.vertexAttribPointer(t.attributes.normal,3,$.FLOAT,!1,0,0)}e.hasUvs&&r.map&&($.bindBuffer($.ARRAY_BUFFER,e.__webglUvBuffer),$.bufferData($.ARRAY_BUFFER,e.uvArray,$.DYNAMIC_DRAW),$.enableVertexAttribArray(t.attributes.uv),$.vertexAttribPointer(t.attributes.uv,2,$.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&($.bindBuffer($.ARRAY_BUFFER,e.__webglColorBuffer),$.bufferData($.ARRAY_BUFFER,e.colorArray,$.DYNAMIC_DRAW),$.enableVertexAttribArray(t.attributes.color),$.vertexAttribPointer(t.attributes.color,3,$.FLOAT,!1,0,0)),$.drawArrays($.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,o,a){if(!1!==i.visible){var n,s;s=(n=w(e,t,r,i,a)).attributes;var l=!1,h=i.wireframe?1:0,c=16777215*o.id+2*n.id+h;if(c!==ce&&(ce=c,l=!0),l&&p(),a instanceof THREE.Mesh){var f=o.attributes.index;if(f){var E=o.offsets;E.length>1&&(l=!0);for(var d=0,m=E.length;d<m;d++){var g=E[d].index;if(l){b=(_=o.attributes.position).itemSize;$.bindBuffer($.ARRAY_BUFFER,_.buffer),u(s.position),$.vertexAttribPointer(s.position,b,$.FLOAT,!1,0,g*b*4);v=o.attributes.normal;if(s.normal>=0&&v){T=v.itemSize;$.bindBuffer($.ARRAY_BUFFER,v.buffer),u(s.normal),$.vertexAttribPointer(s.normal,T,$.FLOAT,!1,0,g*T*4)}y=o.attributes.uv;if(s.uv>=0&&y){R=y.itemSize;$.bindBuffer($.ARRAY_BUFFER,y.buffer),u(s.uv),$.vertexAttribPointer(s.uv,R,$.FLOAT,!1,0,g*R*4)}S=o.attributes.color;if(s.color>=0&&S){M=S.itemSize;$.bindBuffer($.ARRAY_BUFFER,S.buffer),u(s.color),$.vertexAttribPointer(s.color,M,$.FLOAT,!1,0,g*M*4)}x=o.attributes.tangent;if(s.tangent>=0&&x){H=x.itemSize;$.bindBuffer($.ARRAY_BUFFER,x.buffer),u(s.tangent),$.vertexAttribPointer(s.tangent,H,$.FLOAT,!1,0,g*H*4)}$.bindBuffer($.ELEMENT_ARRAY_BUFFER,f.buffer)}$.drawElements($.TRIANGLES,E[d].count,$.UNSIGNED_SHORT,2*E[d].start),oe.info.render.calls++,oe.info.render.vertices+=E[d].count,oe.info.render.faces+=E[d].count/3}}else{if(l){b=(_=o.attributes.position).itemSize;$.bindBuffer($.ARRAY_BUFFER,_.buffer),u(s.position),$.vertexAttribPointer(s.position,b,$.FLOAT,!1,0,0);var v=o.attributes.normal;if(s.normal>=0&&v){var T=v.itemSize;$.bindBuffer($.ARRAY_BUFFER,v.buffer),u(s.normal),$.vertexAttribPointer(s.normal,T,$.FLOAT,!1,0,0)}var y=o.attributes.uv;if(s.uv>=0&&y){var R=y.itemSize;$.bindBuffer($.ARRAY_BUFFER,y.buffer),u(s.uv),$.vertexAttribPointer(s.uv,R,$.FLOAT,!1,0,0)}S=o.attributes.color;if(s.color>=0&&S){M=S.itemSize;$.bindBuffer($.ARRAY_BUFFER,S.buffer),u(s.color),$.vertexAttribPointer(s.color,M,$.FLOAT,!1,0,0)}var x=o.attributes.tangent;if(s.tangent>=0&&x){var H=x.itemSize;$.bindBuffer($.ARRAY_BUFFER,x.buffer),u(s.tangent),$.vertexAttribPointer(s.tangent,H,$.FLOAT,!1,0,0)}}$.drawArrays($.TRIANGLES,0,_.numItems/3),oe.info.render.calls++,oe.info.render.vertices+=_.numItems/3,oe.info.render.faces+=_.numItems/3/3}}else if(a instanceof THREE.ParticleSystem&&l){var _=o.attributes.position,b=_.itemSize;$.bindBuffer($.ARRAY_BUFFER,_.buffer),u(s.position),$.vertexAttribPointer(s.position,b,$.FLOAT,!1,0,0);var S=o.attributes.color;if(s.color>=0&&S){var M=S.itemSize;$.bindBuffer($.ARRAY_BUFFER,S.buffer),u(s.color),$.vertexAttribPointer(s.color,M,$.FLOAT,!1,0,0)}$.drawArrays($.POINTS,0,_.numItems/3),oe.info.render.calls++,oe.info.render.points+=_.numItems/3}}},this.renderBuffer=function(e,t,r,i,o,a){if(!1!==i.visible){var n,s,l,h,c,f;s=(n=w(e,t,r,i,a)).attributes;var d=!1,m=i.wireframe?1:0,g=16777215*o.id+2*n.id+m;if(g!==ce&&(ce=g,d=!0),d&&p(),!i.morphTargets&&s.position>=0?d&&($.bindBuffer($.ARRAY_BUFFER,o.__webglVertexBuffer),u(s.position),$.vertexAttribPointer(s.position,3,$.FLOAT,!1,0,0)):a.morphTargetBase&&E(i,o,a),d){if(o.__webglCustomAttributesList)for(c=0,f=o.__webglCustomAttributesList.length;c<f;c++)s[(h=o.__webglCustomAttributesList[c]).buffer.belongsToAttribute]>=0&&($.bindBuffer($.ARRAY_BUFFER,h.buffer),u(s[h.buffer.belongsToAttribute]),$.vertexAttribPointer(s[h.buffer.belongsToAttribute],h.size,$.FLOAT,!1,0,0));s.color>=0&&($.bindBuffer($.ARRAY_BUFFER,o.__webglColorBuffer),u(s.color),$.vertexAttribPointer(s.color,3,$.FLOAT,!1,0,0)),s.normal>=0&&($.bindBuffer($.ARRAY_BUFFER,o.__webglNormalBuffer),u(s.normal),$.vertexAttribPointer(s.normal,3,$.FLOAT,!1,0,0)),s.tangent>=0&&($.bindBuffer($.ARRAY_BUFFER,o.__webglTangentBuffer),u(s.tangent),$.vertexAttribPointer(s.tangent,4,$.FLOAT,!1,0,0)),s.uv>=0&&($.bindBuffer($.ARRAY_BUFFER,o.__webglUVBuffer),u(s.uv),$.vertexAttribPointer(s.uv,2,$.FLOAT,!1,0,0)),s.uv2>=0&&($.bindBuffer($.ARRAY_BUFFER,o.__webglUV2Buffer),u(s.uv2),$.vertexAttribPointer(s.uv2,2,$.FLOAT,!1,0,0)),i.skinning&&s.skinIndex>=0&&s.skinWeight>=0&&($.bindBuffer($.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),u(s.skinIndex),$.vertexAttribPointer(s.skinIndex,4,$.FLOAT,!1,0,0),$.bindBuffer($.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),u(s.skinWeight),$.vertexAttribPointer(s.skinWeight,4,$.FLOAT,!1,0,0)),s.lineDistance>=0&&($.bindBuffer($.ARRAY_BUFFER,o.__webglLineDistanceBuffer),u(s.lineDistance),$.vertexAttribPointer(s.lineDistance,1,$.FLOAT,!1,0,0))}a instanceof THREE.Mesh?(i.wireframe?(F(i.wireframeLinewidth),d&&$.bindBuffer($.ELEMENT_ARRAY_BUFFER,o.__webglLineBuffer),$.drawElements($.LINES,o.__webglLineCount,$.UNSIGNED_SHORT,0)):(d&&$.bindBuffer($.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer),$.drawElements($.TRIANGLES,o.__webglFaceCount,$.UNSIGNED_SHORT,0)),oe.info.render.calls++,oe.info.render.vertices+=o.__webglFaceCount,oe.info.render.faces+=o.__webglFaceCount/3):a instanceof THREE.Line?(l=a.type===THREE.LineStrip?$.LINE_STRIP:$.LINES,F(i.linewidth),$.drawArrays(l,0,o.__webglLineCount),oe.info.render.calls++):a instanceof THREE.ParticleSystem?($.drawArrays($.POINTS,0,o.__webglParticleCount),oe.info.render.calls++,oe.info.render.points+=o.__webglParticleCount):a instanceof THREE.Ribbon&&($.drawArrays($.TRIANGLE_STRIP,0,o.__webglVertexCount),oe.info.render.calls++)}},this.render=function(e,t,r,i){if(t instanceof THREE.Camera!=!1){var o,a,n,s,l,h=e.__lights,c=e.fog;for(he=-1,Be=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Ue.multiply(t.projectionMatrix,t.matrixWorldInverse),Fe.setFromMatrix(Ue),this.autoUpdateObjects&&this.initWebGLObjects(e),g(this.renderPluginsPre,e,t),oe.info.render.calls=0,oe.info.render.vertices=0,oe.info.render.faces=0,oe.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),o=0,a=(l=e.__webglObjects).length;o<a;o++)s=(n=l[o]).object,n.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!Fe.contains(s)||(A(s,t),function(e){var t,r,i,o=e.object,a=e.buffer;(i=o.material)instanceof THREE.MeshFaceMaterial?(r=a.materialIndex,(t=i.materials[r]).transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)):(t=i)&&(t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null))}(n),n.render=!0,!0===this.sortObjects&&(null!==s.renderDepth?n.z=s.renderDepth:(ze.copy(s.matrixWorld.getPosition()),Ue.multiplyVector3(ze),n.z=ze.z),n.id=s.id)));for(this.sortObjects&&l.sort(d),o=0,a=(l=e.__webglObjectsImmediate).length;o<a;o++)(s=(n=l[o]).object).visible&&(A(s,t),function(e){var t=e.object.material;t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)}(n));if(e.overrideMaterial){f=e.overrideMaterial;this.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),this.setDepthTest(f.depthTest),this.setDepthWrite(f.depthWrite),U(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits),v(e.__webglObjects,!1,"",t,h,c,!0,f),T(e.__webglObjectsImmediate,"",t,h,c,!1,f)}else{var f=null;this.setBlending(THREE.NoBlending),v(e.__webglObjects,!0,"opaque",t,h,c,!1,f),T(e.__webglObjectsImmediate,"opaque",t,h,c,!1,f),v(e.__webglObjects,!1,"transparent",t,h,c,!0,f),T(e.__webglObjectsImmediate,"transparent",t,h,c,!0,f)}g(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&function(e){e instanceof THREE.WebGLRenderTargetCube?($.bindTexture($.TEXTURE_CUBE_MAP,e.__webglTexture),$.generateMipmap($.TEXTURE_CUBE_MAP),$.bindTexture($.TEXTURE_CUBE_MAP,null)):($.bindTexture($.TEXTURE_2D,e.__webglTexture),$.generateMipmap($.TEXTURE_2D),$.bindTexture($.TEXTURE_2D,null))}(r),this.setDepthTest(!0),this.setDepthWrite(!0)}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.renderImmediateObject=function(e,t,r,i,o){var a=w(e,t,r,i,o);ce=-1,oe.setMaterialFaces(i),o.immediateRenderCallback?o.immediateRenderCallback(a,$,Fe):o.render(function(e){oe.renderBufferImmediate(e,a,i)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)y(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)!function(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Ribbon||e instanceof THREE.Line?b(t.__webglObjects,e):e instanceof THREE.Sprite?S(t.__webglSprites,e):e instanceof THREE.LensFlare?S(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&b(t.__webglObjectsImmediate,e),e.__webglActive=!1}(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,r=e.__webglObjects.length;t<r;t++)x(e.__webglObjects[t].object)},this.initMaterial=function(e,t,r,i){var o,a,n,s,l,h,c;e instanceof THREE.MeshDepthMaterial?c="depth":e instanceof THREE.MeshNormalMaterial?c="normal":e instanceof THREE.MeshBasicMaterial?c="basic":e instanceof THREE.MeshLambertMaterial?c="lambert":e instanceof THREE.MeshPhongMaterial?c="phong":e instanceof THREE.LineBasicMaterial?c="basic":e instanceof THREE.LineDashedMaterial?c="dashed":e instanceof THREE.ParticleBasicMaterial&&(c="particle_basic"),c&&function(e,t){e.uniforms=THREE.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}(e,THREE.ShaderLib[c]),s=function(e){var t,r,i,o,a,n,s;for(o=a=n=s=0,t=0,r=e.length;t<r;t++)(i=e[t]).onlyShadow||(i instanceof THREE.DirectionalLight&&o++,i instanceof THREE.PointLight&&a++,i instanceof THREE.SpotLight&&n++,i instanceof THREE.HemisphereLight&&s++);return{directional:o,point:a,spot:n,hemi:s}}(t),h=function(e){var t,r,i,o=0;for(t=0,r=e.length;t<r;t++)(i=e[t]).castShadow&&(i instanceof THREE.SpotLight&&o++,i instanceof THREE.DirectionalLight&&!i.shadowCascade&&o++);return o}(t),l=function(e){if(je&&e&&e.useVertexTexture)return 1024;var t=$.getParameter($.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((t-20)/4);return void 0!==e&&e instanceof THREE.SkinnedMesh&&(r=Math.min(e.bones.length,r))<e.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)"),r}(i),n={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:je&&i&&i.useVertexTexture,boneTextureWidth:i&&i.boneTextureWidth,boneTextureHeight:i&&i.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:s.directional,maxPointLights:s.point,maxSpotLights:s.spot,maxHemiLights:s.hemi,maxShadows:h,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},e.program=D(c,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,n);var f=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;u="morphTarget";for(a=0;a<this.maxMorphTargets;a++)f[u+a]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;var u="morphNormal";for(a=0;a<this.maxMorphNormals;a++)f[u+a]>=0&&e.numSupportedMorphNormals++}e.uniformsList=[];for(o in e.uniforms)e.uniformsList.push([e.uniforms[o],o])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?$.disable($.CULL_FACE):(t===THREE.FrontFaceDirectionCW?$.frontFace($.CW):$.frontFace($.CCW),e===THREE.CullFaceBack?$.cullFace($.BACK):e===THREE.CullFaceFront?$.cullFace($.FRONT):$.cullFace($.FRONT_AND_BACK),$.enable($.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;Ee!==t&&(t?$.disable($.CULL_FACE):$.enable($.CULL_FACE),Ee=t),de!==r&&(r?$.frontFace($.CW):$.frontFace($.CCW),de=r)},this.setDepthTest=function(e){ye!==e&&(e?$.enable($.DEPTH_TEST):$.disable($.DEPTH_TEST),ye=e)},this.setDepthWrite=function(e){Re!==e&&($.depthMask(e),Re=e)},this.setBlending=function(e,t,r,i){e!==me&&(e===THREE.NoBlending?$.disable($.BLEND):e===THREE.AdditiveBlending?($.enable($.BLEND),$.blendEquation($.FUNC_ADD),$.blendFunc($.SRC_ALPHA,$.ONE)):e===THREE.SubtractiveBlending?($.enable($.BLEND),$.blendEquation($.FUNC_ADD),$.blendFunc($.ZERO,$.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?($.enable($.BLEND),$.blendEquation($.FUNC_ADD),$.blendFunc($.ZERO,$.SRC_COLOR)):e===THREE.CustomBlending?$.enable($.BLEND):($.enable($.BLEND),$.blendEquationSeparate($.FUNC_ADD,$.FUNC_ADD),$.blendFuncSeparate($.SRC_ALPHA,$.ONE_MINUS_SRC_ALPHA,$.ONE,$.ONE_MINUS_SRC_ALPHA)),me=e),e===THREE.CustomBlending?(t!==ge&&($.blendEquation(k(t)),ge=t),r===ve&&i===Te||($.blendFunc(k(r),k(i)),ve=r,Te=i)):(ge=null,ve=null,Te=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.__webglTexture=$.createTexture(),oe.info.memory.textures++),$.activeTexture($.TEXTURE0+t),$.bindTexture($.TEXTURE_2D,e.__webglTexture),$.pixelStorei($.UNPACK_FLIP_Y_WEBGL,e.flipY),$.pixelStorei($.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),$.pixelStorei($.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=N(r.width)&&N(r.height),o=k(e.format),a=k(e.type);B($.TEXTURE_2D,e,i);var n,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&i){for(var l=0,h=s.length;l<h;l++)n=s[l],$.texImage2D($.TEXTURE_2D,l,o,n.width,n.height,0,o,a,n.data);e.generateMipmaps=!1}else $.texImage2D($.TEXTURE_2D,0,o,r.width,r.height,0,o,a,r.data);else if(e instanceof THREE.CompressedTexture)for(var l=0,h=s.length;l<h;l++)n=s[l],$.compressedTexImage2D($.TEXTURE_2D,l,o,n.width,n.height,0,n.data);else if(s.length>0&&i){for(var l=0,h=s.length;l<h;l++)n=s[l],$.texImage2D($.TEXTURE_2D,l,o,o,a,n);e.generateMipmaps=!1}else $.texImage2D($.TEXTURE_2D,0,o,o,a,e.image);e.generateMipmaps&&i&&$.generateMipmap($.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else $.activeTexture($.TEXTURE0+t),$.bindTexture($.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.__webglTexture=$.createTexture(),oe.info.memory.textures++;var r=N(e.width)&&N(e.height),i=k(e.format),o=k(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],$.bindTexture($.TEXTURE_CUBE_MAP,e.__webglTexture),B($.TEXTURE_CUBE_MAP,e,r);for(var a=0;a<6;a++)e.__webglFramebuffer[a]=$.createFramebuffer(),e.__webglRenderbuffer[a]=$.createRenderbuffer(),$.texImage2D($.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,i,e.width,e.height,0,i,o,null),I(e.__webglFramebuffer[a],e,$.TEXTURE_CUBE_MAP_POSITIVE_X+a),O(e.__webglRenderbuffer[a],e);r&&$.generateMipmap($.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=$.createFramebuffer(),e.__webglRenderbuffer=$.createRenderbuffer(),$.bindTexture($.TEXTURE_2D,e.__webglTexture),B($.TEXTURE_2D,e,r),$.texImage2D($.TEXTURE_2D,0,i,e.width,e.height,0,i,o,null),I(e.__webglFramebuffer,e,$.TEXTURE_2D),O(e.__webglRenderbuffer,e),r&&$.generateMipmap($.TEXTURE_2D);t?$.bindTexture($.TEXTURE_CUBE_MAP,null):$.bindTexture($.TEXTURE_2D,null),$.bindRenderbuffer($.RENDERBUFFER,null),$.bindFramebuffer($.FRAMEBUFFER,null)}var n,s,l,h,c;e?(n=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,s=e.width,l=e.height,h=0,c=0):(n=null,s=Me,l=Ce,h=Se,c=we),n!==le&&($.bindFramebuffer($.FRAMEBUFFER,n),$.viewport(h,c,s,l),le=n),Ae=s,Le=l},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e},THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.object=null,this.z=null},THREE.RenderableParticle=function(){this.object=null,this.x=null,this.y=null,this.z=null,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(e,t,r,i){var o=THREE.ColorUtils.__hsv;e.getHSV(o),o.h=THREE.Math.clamp(o.h+t,0,1),o.s=THREE.Math.clamp(o.s+r,0,1),o.v=THREE.Math.clamp(o.v+i,0,1),e.setHSV(o.h,o.s,o.v)}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(e,t){var r,i,o=e.vertices.length,a=(e.faceVertexUvs[0].length,t instanceof THREE.Mesh?t.geometry:t),n=e.vertices,s=a.vertices,l=e.faces,h=a.faces,c=e.faceVertexUvs[0],f=a.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,(i=new THREE.Matrix4).extractRotation(r,t.scale));for(var u=0,p=s.length;u<p;u++){var E=s[u].clone();r&&r.multiplyVector3(E),n.push(E)}for(u=0,p=h.length;u<p;u++){var d,m,g,v=h[u],T=v.vertexNormals,y=v.vertexColors;v instanceof THREE.Face3?d=new THREE.Face3(v.a+o,v.b+o,v.c+o):v instanceof THREE.Face4&&(d=new THREE.Face4(v.a+o,v.b+o,v.c+o,v.d+o)),d.normal.copy(v.normal),i&&i.multiplyVector3(d.normal);for(var R=0,x=T.length;R<x;R++)m=T[R].clone(),i&&i.multiplyVector3(m),d.vertexNormals.push(m);d.color.copy(v.color);for(var R=0,x=y.length;R<x;R++)g=y[R],d.vertexColors.push(g.clone());d.materialIndex=v.materialIndex,d.centroid.copy(v.centroid),r&&r.multiplyVector3(d.centroid),l.push(d)}for(u=0,p=f.length;u<p;u++){for(var H=f[u],_=[],R=0,x=H.length;R<x;R++)_.push(new THREE.Vector2(H[R].x,H[R].y));c.push(_)}},removeMaterials:function(e,t){for(var r={},i=0,o=t.length;i<o;i++)r[t[i]]=!0;for(var a,n=[],i=0,o=e.faces.length;i<o;i++)(a=e.faces[i]).materialIndex in r||n.push(a);e.faces=n},randomPointInTriangle:function(e,t,r){var i,o,a,n=new THREE.Vector3,s=THREE.GeometryUtils.__v1;return i=THREE.GeometryUtils.random(),o=THREE.GeometryUtils.random(),i+o>1&&(i=1-i,o=1-o),a=1-i-o,n.copy(e),n.multiplyScalar(i),s.copy(t),s.multiplyScalar(o),n.addSelf(s),s.copy(r),s.multiplyScalar(a),n.addSelf(s),n},randomPointInFace:function(e,t,r){var i,o,a,n;if(e instanceof THREE.Face3)return i=t.vertices[e.a],o=t.vertices[e.b],a=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(i,o,a);if(e instanceof THREE.Face4){i=t.vertices[e.a],o=t.vertices[e.b],a=t.vertices[e.c],n=t.vertices[e.d];var s,l;r?e._area1&&e._area2?(s=e._area1,l=e._area2):(s=THREE.GeometryUtils.triangleArea(i,o,n),l=THREE.GeometryUtils.triangleArea(o,a,n),e._area1=s,e._area2=l):(s=THREE.GeometryUtils.triangleArea(i,o,n),l=THREE.GeometryUtils.triangleArea(o,a,n));return THREE.GeometryUtils.random()*(s+l)<s?THREE.GeometryUtils.randomPointInTriangle(i,o,n):THREE.GeometryUtils.randomPointInTriangle(o,a,n)}},randomPointsInGeometry:function(e,t){function r(e){function t(r,i){if(i<r)return r;var o=r+Math.floor((i-r)/2);return p[o]>e?t(r,o-1):p[o]<e?t(o+1,i):o}return t(0,p.length-1)}var i,o,a,n,s,l,h=e.faces,c=e.vertices,f=h.length,u=0,p=[];for(o=0;o<f;o++)(i=h[o])instanceof THREE.Face3?(a=c[i.a],n=c[i.b],s=c[i.c],i._area=THREE.GeometryUtils.triangleArea(a,n,s)):i instanceof THREE.Face4&&(a=c[i.a],n=c[i.b],s=c[i.c],l=c[i.d],i._area1=THREE.GeometryUtils.triangleArea(a,n,l),i._area2=THREE.GeometryUtils.triangleArea(n,s,l),i._area=i._area1+i._area2),u+=i._area,p[o]=u;var E,d=[],m={};for(o=0;o<t;o++)E=r(THREE.GeometryUtils.random()*u),d[o]=THREE.GeometryUtils.randomPointInFace(h[E],e,!0),m[E]?m[E]+=1:m[E]=1;return d},triangleArea:function(e,t,r){var i=THREE.GeometryUtils.__v1,o=THREE.GeometryUtils.__v2;return i.sub(t,e),o.sub(r,e),i.crossSelf(o),.5*i.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.add(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r},normalizeUVs:function(e){for(var t=e.faceVertexUvs[0],r=0,i=t.length;r<i;r++)for(var o=t[r],a=0,n=o.length;a<n;a++)1!==o[a].x&&(o[a].x=o[a].x-Math.floor(o[a].x)),1!==o[a].y&&(o[a].y=o[a].y-Math.floor(o[a].y))},triangulateQuads:function(e){var t,r,i,o,a=[],n=[],s=[];for(t=0,r=e.faceUvs.length;t<r;t++)n[t]=[];for(t=0,r=e.faceVertexUvs.length;t<r;t++)s[t]=[];for(t=0,r=e.faces.length;t<r;t++){var l=e.faces[t];if(l instanceof THREE.Face4){var h=l.a,c=l.b,f=l.c,u=l.d,p=new THREE.Face3,E=new THREE.Face3;for(p.color.copy(l.color),E.color.copy(l.color),p.materialIndex=l.materialIndex,E.materialIndex=l.materialIndex,p.a=h,p.b=c,p.c=u,E.a=c,E.b=f,E.c=u,4===l.vertexColors.length&&(p.vertexColors[0]=l.vertexColors[0].clone(),p.vertexColors[1]=l.vertexColors[1].clone(),p.vertexColors[2]=l.vertexColors[3].clone(),E.vertexColors[0]=l.vertexColors[1].clone(),E.vertexColors[1]=l.vertexColors[2].clone(),E.vertexColors[2]=l.vertexColors[3].clone()),a.push(p,E),i=0,o=e.faceVertexUvs.length;i<o;i++)if(e.faceVertexUvs[i].length){var d=e.faceVertexUvs[i][t],m=d[0],g=d[1],v=d[2],T=d[3],y=[m.clone(),g.clone(),T.clone()],R=[g.clone(),v.clone(),T.clone()];s[i].push(y,R)}for(i=0,o=e.faceUvs.length;i<o;i++)if(e.faceUvs[i].length){var x=e.faceUvs[i][t];n[i].push(x,x)}}else{for(a.push(l),i=0,o=e.faceUvs.length;i<o;i++)n[i].push(e.faceUvs[i][t]);for(i=0,o=e.faceVertexUvs.length;i<o;i++)s[i].push(e.faceVertexUvs[i][t])}}e.faces=a,e.faceUvs=n,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},explode:function(e){for(var t=[],r=0,i=e.faces.length;r<i;r++){var o=t.length,a=e.faces[r];if(a instanceof THREE.Face4){var n=a.a,s=a.b,l=a.c,h=a.d,c=e.vertices[n],f=e.vertices[s],u=e.vertices[l],p=e.vertices[h];t.push(c.clone()),t.push(f.clone()),t.push(u.clone()),t.push(p.clone()),a.a=o,a.b=o+1,a.c=o+2,a.d=o+3}else{var n=a.a,s=a.b,l=a.c,c=e.vertices[n],f=e.vertices[s],u=e.vertices[l];t.push(c.clone()),t.push(f.clone()),t.push(u.clone()),a.a=o,a.b=o+1,a.c=o+2}}e.vertices=t,delete e.__tmpVertices},tessellate:function(e,t){var r,i,o,a,n,s,l,h,c,f,u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w,M,C,A,L,P,F,U,D=[],z=[];for(r=0,i=e.faceVertexUvs.length;r<i;r++)z[r]=[];for(r=0,i=e.faces.length;r<i;r++)if((o=e.faces[r])instanceof THREE.Face3)if(a=o.a,n=o.b,s=o.c,h=e.vertices[a],c=e.vertices[n],f=e.vertices[s],p=h.distanceTo(c),E=c.distanceTo(f),d=h.distanceTo(f),p>t||E>t||d>t){v=e.vertices.length,A=o.clone(),L=o.clone(),p>=E&&p>=d?((R=h.clone()).lerpSelf(c,.5),A.a=a,A.b=v,A.c=s,L.a=v,L.b=n,L.c=s,3===o.vertexNormals.length&&((_=o.vertexNormals[0].clone()).lerpSelf(o.vertexNormals[1],.5),A.vertexNormals[1].copy(_),L.vertexNormals[0].copy(_)),3===o.vertexColors.length&&((w=o.vertexColors[0].clone()).lerpSelf(o.vertexColors[1],.5),A.vertexColors[1].copy(w),L.vertexColors[0].copy(w)),U=0):E>=p&&E>=d?((R=c.clone()).lerpSelf(f,.5),A.a=a,A.b=n,A.c=v,L.a=v,L.b=s,L.c=a,3===o.vertexNormals.length&&((_=o.vertexNormals[1].clone()).lerpSelf(o.vertexNormals[2],.5),A.vertexNormals[2].copy(_),L.vertexNormals[0].copy(_),L.vertexNormals[1].copy(o.vertexNormals[2]),L.vertexNormals[2].copy(o.vertexNormals[0])),3===o.vertexColors.length&&((w=o.vertexColors[1].clone()).lerpSelf(o.vertexColors[2],.5),A.vertexColors[2].copy(w),L.vertexColors[0].copy(w),L.vertexColors[1].copy(o.vertexColors[2]),L.vertexColors[2].copy(o.vertexColors[0])),U=1):((R=h.clone()).lerpSelf(f,.5),A.a=a,A.b=n,A.c=v,L.a=v,L.b=n,L.c=s,3===o.vertexNormals.length&&((_=o.vertexNormals[0].clone()).lerpSelf(o.vertexNormals[2],.5),A.vertexNormals[2].copy(_),L.vertexNormals[0].copy(_)),3===o.vertexColors.length&&((w=o.vertexColors[0].clone()).lerpSelf(o.vertexColors[2],.5),A.vertexColors[2].copy(w),L.vertexColors[0].copy(w)),U=2),D.push(A,L),e.vertices.push(R);var N,B,V;for(I=0,O=e.faceVertexUvs.length;I<O;I++)e.faceVertexUvs[I].length&&(k=(G=e.faceVertexUvs[I][r])[0],W=G[1],j=G[2],0===U?((N=k.clone()).lerpSelf(W,.5),B=[k.clone(),N.clone(),j.clone()],V=[N.clone(),W.clone(),j.clone()]):1===U?((N=W.clone()).lerpSelf(j,.5),B=[k.clone(),W.clone(),N.clone()],V=[N.clone(),j.clone(),k.clone()]):((N=k.clone()).lerpSelf(j,.5),B=[k.clone(),W.clone(),N.clone()],V=[N.clone(),W.clone(),j.clone()]),z[I].push(B,V))}else for(D.push(o),I=0,O=e.faceVertexUvs.length;I<O;I++)z[I].push(e.faceVertexUvs[I][r]);else if(a=o.a,n=o.b,s=o.c,l=o.d,h=e.vertices[a],c=e.vertices[n],f=e.vertices[s],u=e.vertices[l],p=h.distanceTo(c),E=c.distanceTo(f),m=f.distanceTo(u),g=h.distanceTo(u),p>t||E>t||m>t||g>t){T=e.vertices.length,y=e.vertices.length+1,P=o.clone(),F=o.clone(),p>=E&&p>=m&&p>=g||m>=E&&m>=p&&m>=g?((x=h.clone()).lerpSelf(c,.5),(H=f.clone()).lerpSelf(u,.5),P.a=a,P.b=T,P.c=y,P.d=l,F.a=T,F.b=n,F.c=s,F.d=y,4===o.vertexNormals.length&&((b=o.vertexNormals[0].clone()).lerpSelf(o.vertexNormals[1],.5),(S=o.vertexNormals[2].clone()).lerpSelf(o.vertexNormals[3],.5),P.vertexNormals[1].copy(b),P.vertexNormals[2].copy(S),F.vertexNormals[0].copy(b),F.vertexNormals[3].copy(S)),4===o.vertexColors.length&&((M=o.vertexColors[0].clone()).lerpSelf(o.vertexColors[1],.5),(C=o.vertexColors[2].clone()).lerpSelf(o.vertexColors[3],.5),P.vertexColors[1].copy(M),P.vertexColors[2].copy(C),F.vertexColors[0].copy(M),F.vertexColors[3].copy(C)),U=0):((x=c.clone()).lerpSelf(f,.5),(H=u.clone()).lerpSelf(h,.5),P.a=a,P.b=n,P.c=T,P.d=y,F.a=y,F.b=T,F.c=s,F.d=l,4===o.vertexNormals.length&&((b=o.vertexNormals[1].clone()).lerpSelf(o.vertexNormals[2],.5),(S=o.vertexNormals[3].clone()).lerpSelf(o.vertexNormals[0],.5),P.vertexNormals[2].copy(b),P.vertexNormals[3].copy(S),F.vertexNormals[0].copy(S),F.vertexNormals[1].copy(b)),4===o.vertexColors.length&&((M=o.vertexColors[1].clone()).lerpSelf(o.vertexColors[2],.5),(C=o.vertexColors[3].clone()).lerpSelf(o.vertexColors[0],.5),P.vertexColors[2].copy(M),P.vertexColors[3].copy(C),F.vertexColors[0].copy(C),F.vertexColors[1].copy(M)),U=1),D.push(P,F),e.vertices.push(x,H);var I,O,G,k,W,j,X,Y,q,K,Z;for(I=0,O=e.faceVertexUvs.length;I<O;I++)e.faceVertexUvs[I].length&&(k=(G=e.faceVertexUvs[I][r])[0],W=G[1],j=G[2],X=G[3],0===U?((Y=k.clone()).lerpSelf(W,.5),(q=j.clone()).lerpSelf(X,.5),K=[k.clone(),Y.clone(),q.clone(),X.clone()],Z=[Y.clone(),W.clone(),j.clone(),q.clone()]):((Y=W.clone()).lerpSelf(j,.5),(q=X.clone()).lerpSelf(k,.5),K=[k.clone(),W.clone(),Y.clone(),q.clone()],Z=[q.clone(),Y.clone(),j.clone(),X.clone()]),z[I].push(K,Z))}else for(D.push(o),I=0,O=e.faceVertexUvs.length;I<O;I++)z[I].push(e.faceVertexUvs[I][r]);e.faces=D,e.faceVertexUvs=z}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,r,i){var o=new Image,a=new THREE.Texture(o,t),n=new THREE.ImageLoader;return n.addEventListener("load",function(e){a.image=e.content,a.needsUpdate=!0,r&&r(a)}),n.addEventListener("error",function(e){i&&i(e.message)}),n.crossOrigin=this.crossOrigin,n.load(e,o),a.sourceFile=e,a},loadCompressedTexture:function(e,t,r,i){var o=new THREE.CompressedTexture;o.mapping=t;var a=new XMLHttpRequest;return a.onload=function(){var e=a.response,t=THREE.ImageUtils.parseDDS(e,!0);o.format=t.format,o.mipmaps=t.mipmaps,o.image.width=t.width,o.image.height=t.height,o.generateMipmaps=!1,o.needsUpdate=!0,r&&r(o)},a.onerror=i,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),o},loadTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.Texture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1;for(var n=0,s=e.length;n<s;++n){var l=new Image;o[n]=l,l.onload=function(){o.loadCount+=1,6===o.loadCount&&(a.needsUpdate=!0,r&&r(a))},l.onerror=i,l.crossOrigin=this.crossOrigin,l.src=e[n]}return a},loadCompressedTextureCube:function(e,t,r,i){var o=[];o.loadCount=0;var a=new THREE.CompressedTexture;a.image=o,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1;var n=function(e,t){return function(){var i=e.response,n=THREE.ImageUtils.parseDDS(i,!0);t.format=n.format,t.mipmaps=n.mipmaps,t.width=n.width,t.height=n.height,o.loadCount+=1,6===o.loadCount&&(a.format=n.format,a.needsUpdate=!0,r&&r(a))}};if(e instanceof Array)for(var s=0,l=e.length;s<l;++s){var h={};o[s]=h;(f=new XMLHttpRequest).onload=n(f,h),f.onerror=i;c=e[s];f.open("GET",c,!0),f.responseType="arraybuffer",f.send(null)}else{var c=e,f=new XMLHttpRequest;f.onload=function(){var e=f.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var i=t.mipmaps.length/t.mipmapCount,n=0;n<i;n++){o[n]={mipmaps:[]};for(var s=0;s<t.mipmapCount;s++)o[n].mipmaps.push(t.mipmaps[n*t.mipmapCount+s]),o[n].format=t.format,o[n].width=t.width,o[n].height=t.height}a.format=t.format,a.needsUpdate=!0,r&&r(a)}},f.onerror=i,f.open("GET",c,!0),f.responseType="arraybuffer",f.send(null)}return a},parseDDS:function(e,t){function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var i={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},o=r("DXT1"),a=r("DXT3"),n=r("DXT5"),s=new Int32Array(e,0,31);if(542327876!==s[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),i;if(4&!s[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),i;var l,h=s[21];switch(h){case o:l=8,i.format=THREE.RGB_S3TC_DXT1_Format;break;case a:l=16,i.format=THREE.RGBA_S3TC_DXT3_Format;break;case n:l=16,i.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",function(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}(h)),i}i.mipmapCount=1,131072&s[2]&&!1!==t&&(i.mipmapCount=Math.max(1,s[7])),i.isCubemap=!!(512&s[28]),i.width=s[4],i.height=s[3];for(var c=s[1]+4,f=i.width,u=i.height,p=i.isCubemap?6:1,E=0;E<p;E++){for(var d=0;d<i.mipmapCount;d++){var m=Math.max(4,f)/4*Math.max(4,u)/4*l,g={data:new Uint8Array(e,c,m),width:f,height:u};i.mipmaps.push(g),c+=m,f=Math.max(.5*f,1),u=Math.max(.5*u,1)}f=i.width,u=i.height}return i},getNormalMap:function(e,t){var r=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},i=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},o=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var a=e.width,n=e.height,s=document.createElement("canvas");s.width=a,s.height=n;var l=s.getContext("2d");l.drawImage(e,0,0);for(var h=l.getImageData(0,0,a,n).data,c=l.createImageData(a,n),f=c.data,u=0;u<a;u++)for(var p=0;p<n;p++){var E=p-1<0?0:p-1,d=p+1>n-1?n-1:p+1,m=u-1<0?0:u-1,g=u+1>a-1?a-1:u+1,v=[],T=[0,0,h[4*(p*a+u)]/255*t];v.push([-1,0,h[4*(p*a+m)]/255*t]),v.push([-1,-1,h[4*(E*a+m)]/255*t]),v.push([0,-1,h[4*(E*a+u)]/255*t]),v.push([1,-1,h[4*(E*a+g)]/255*t]),v.push([1,0,h[4*(p*a+g)]/255*t]),v.push([1,1,h[4*(d*a+g)]/255*t]),v.push([0,1,h[4*(d*a+u)]/255*t]),v.push([-1,1,h[4*(d*a+m)]/255*t]);for(var y=[],R=v.length,x=0;x<R;x++){var H=v[x],_=v[(x+1)%R];H=i(H,T),_=i(_,T),y.push(o(r(H,_)))}for(var b=[0,0,0],x=0;x<y.length;x++)b[0]+=y[x][0],b[1]+=y[x][1],b[2]+=y[x][2];b[0]/=y.length,b[1]/=y.length,b[2]/=y.length;var S=4*(p*a+u);f[S]=(b[0]+1)/2*255|0,f[S+1]=(b[1]+1)/2*255|0,f[S+2]=255*b[2]|0,f[S+3]=255}return l.putImageData(c,0,0),s},generateDataTexture:function(e,t,r){for(var i=e*t,o=new Uint8Array(3*i),a=Math.floor(255*r.r),n=Math.floor(255*r.g),s=Math.floor(255*r.b),l=0;l<i;l++)o[3*l]=a,o[3*l+1]=n,o[3*l+2]=s;var h=new THREE.DataTexture(o,e,t,THREE.RGBFormat);return h.needsUpdate=!0,h}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,o=t.length;i<o;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:["uniform samplerCube tCube;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","vec4 refractedColor = vec4( 1.0 );","refractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;","refractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;","refractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;","gl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );","}"].join("\n"),vertexShader:["uniform float mRefractionRatio;","uniform float mFresnelBias;","uniform float mFresnelScale;","uniform float mFresnelPower;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );","vec3 I = worldPosition.xyz - cameraPosition;","vReflect = reflect( I, worldNormal );","vRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );","vRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );","vRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );","vReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n")},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")}}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return e},drawText:function(e){var t,r=this.getFace(),i=this.size/r.resolution,o=0,a=String(e).split(""),n=a.length,s=[];for(t=0;t<n;t++){var l=new THREE.Path,h=this.extractGlyphPoints(a[t],r,i,o,l);o+=h.offset,s.push(h.path)}return{paths:s,offset:o/2}},extractGlyphPoints:function(e,t,r,i,o){var a,n,s,l,h,c,f,u,p,E,d,m,g,v,T,y,R,x,H=[],_=t.glyphs[e]||t.glyphs["?"];if(_){if(_.o)for(h=(l=_._cachedOutline||(_._cachedOutline=_.o.split(" "))).length,c=r,f=r,a=0;a<h;)switch(l[a++]){case"m":u=l[a++]*c+i,p=l[a++]*f,o.moveTo(u,p);break;case"l":u=l[a++]*c+i,p=l[a++]*f,o.lineTo(u,p);break;case"q":if(E=l[a++]*c+i,d=l[a++]*f,v=l[a++]*c+i,T=l[a++]*f,o.quadraticCurveTo(v,T,E,d),x=H[H.length-1])for(m=x.x,g=x.y,n=1,s=this.divisions;n<=s;n++)b=n/s,THREE.Shape.Utils.b2(b,m,v,E),THREE.Shape.Utils.b2(b,g,T,d);break;case"b":if(E=l[a++]*c+i,d=l[a++]*f,v=l[a++]*c+i,T=l[a++]*-f,y=l[a++]*c+i,R=l[a++]*-f,o.bezierCurveTo(E,d,v,T,y,R),x=H[H.length-1])for(m=x.x,g=x.y,n=1,s=this.divisions;n<=s;n++){var b=n/s;THREE.Shape.Utils.b3(b,m,v,y,E),THREE.Shape.Utils.b3(b,g,T,R,d)}}return{offset:_.ha*r,path:o}}}},THREE.FontUtils.generateShapes=function(e,t){var r=void 0!==(t=t||{}).size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,o=void 0!==t.font?t.font:"helvetiker",a=void 0!==t.weight?t.weight:"normal",n=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=o,THREE.FontUtils.weight=a,THREE.FontUtils.style=n;for(var s=THREE.FontUtils.drawText(e).paths,l=[],h=0,c=s.length;h<c;h++)Array.prototype.push.apply(l,s[h].toShapes());return l},function(e){var t=function(e){for(var t=e.length,r=0,i=t-1,o=0;o<t;i=o++)r+=e[i].x*e[o].y-e[o].x*e[i].y;return.5*r},r=function(e,t,r,i,o,a){var n,s,l,h,c,f,u,p,E;if(s=e[a[t]].x,l=e[a[t]].y,h=e[a[r]].x,c=e[a[r]].y,f=e[a[i]].x,u=e[a[i]].y,1e-10>(h-s)*(u-l)-(c-l)*(f-s))return!1;var d,m,g,v,T,y,R,x,H,_,b,S,w,M,C;for(d=f-h,m=u-c,g=s-f,v=l-u,T=h-s,y=c-l,n=0;n<o;n++)if(n!==t&&n!==r&&n!==i&&(p=e[a[n]].x,E=e[a[n]].y,R=p-s,x=E-l,H=p-h,_=E-c,b=p-f,S=E-u,C=d*_-m*H,w=T*x-y*R,M=g*S-v*b,C>=0&&M>=0&&w>=0))return!1;return!0};e.Triangulate=function(e,i){var o=e.length;if(o<3)return null;var a,n,s,l=[],h=[],c=[];if(t(e)>0)for(n=0;n<o;n++)h[n]=n;else for(n=0;n<o;n++)h[n]=o-1-n;var f=o,u=2*f;for(n=f-1;f>2;){if(u--<=0)return console.log("Warning, unable to triangulate polygon!"),i?c:l;if(a=n,f<=a&&(a=0),n=a+1,f<=n&&(n=0),s=n+1,f<=s&&(s=0),r(e,a,n,s,f,h)){var p,E,d,m,g;for(p=h[a],E=h[n],d=h[s],l.push([e[p],e[E],e[d]]),c.push([h[a],h[n],h[s]]),m=n,g=n+1;g<f;m++,g++)h[m]=h[g];u=2*--f}}return i?c:l},e.Triangulate.area=t}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;t<=e;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],o=this.getPoint(0),a=0;for(i.push(0),r=1;r<=e;r++)a+=(t=this.getPoint(r/e)).distanceTo(o),i.push(a),o=t;return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r,i=this.getLengths(),o=0,a=i.length;r=t||e*i[a-1];for(var n,s=0,l=a-1;s<=l;)if(o=Math.floor(s+(l-s)/2),(n=i[o]-r)<0)s=o+1;else{if(!(n>0)){l=o;break}l=o-1}if(o=l,i[o]==r){return c=o/(a-1)}var h=i[o],c=(o+(r-h)/(i[o+1]-h))/(a-1);return c},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,r=e+1e-4;t<0&&(t=0),r>1&&(r=1);var i=this.getPoint(t);return this.getPoint(r).clone().subSelf(i).normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().subSelf(this.v1);return t.multiplyScalar(e).addSelf(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().subSelf(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,r,i,o=new THREE.Vector2,a=[],n=this.points;return t=(n.length-1)*e,r=Math.floor(t),i=t-r,a[0]=0==r?r:r-1,a[1]=r,a[2]=r>n.length-2?n.length-1:r+1,a[3]=r>n.length-3?n.length-1:r+2,o.x=THREE.Curve.Utils.interpolate(n[a[0]].x,n[a[1]].x,n[a[2]].x,n[a[3]].x,i),o.y=THREE.Curve.Utils.interpolate(n[a[0]].y,n[a[1]].y,n[a[2]].y,n[a[3]].y,i),o},THREE.EllipseCurve=function(e,t,r,i,o,a,n){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=a,this.aClockwise=n},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;this.aClockwise||(e=1-e);var r=this.aStartAngle+e*t,i=this.aX+this.xRadius*Math.cos(r),o=this.aY+this.yRadius*Math.sin(r);return new THREE.Vector2(i,o)},THREE.ArcCurve=function(e,t,r,i,o,a){THREE.EllipseCurve.call(this,e,t,r,r,i,o,a)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,o){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*o},tangentSpline:function(e,t,r,i,o){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,i,o){var a=.5*(r-e),n=.5*(i-t),s=o*o;return(2*t-2*r+a+n)*(o*s)+(-3*t+3*r-2*a-n)*s+a*o+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.sub(this.v2,this.v1),t.multiplyScalar(e),t.addSelf(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t,r,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t,r,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,o=new THREE.Vector3,a=[],n=this.points;i=(t=(n.length-1)*e)-(r=Math.floor(t)),a[0]=0==r?r:r-1,a[1]=r,a[2]=r>n.length-2?n.length-1:r+1,a[3]=r>n.length-3?n.length-1:r+2;var s=n[a[0]],l=n[a[1]],h=n[a[2]],c=n[a[3]];return o.x=THREE.Curve.Utils.interpolate(s.x,l.x,h.x,c.x,i),o.y=THREE.Curve.Utils.interpolate(s.y,l.y,h.y,c.y,i),o.z=THREE.Curve.Utils.interpolate(s.z,l.z,h.z,c.z,i),o}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,o=new THREE.Vector3,a=[],n=this.points;return t=(n.length-0)*e,r=Math.floor(t),i=t-r,r+=r>0?0:(Math.floor(Math.abs(r)/n.length)+1)*n.length,a[0]=(r-1)%n.length,a[1]=r%n.length,a[2]=(r+1)%n.length,a[3]=(r+2)%n.length,o.x=THREE.Curve.Utils.interpolate(n[a[0]].x,n[a[1]].x,n[a[2]].x,n[a[3]].x,i),o.y=THREE.Curve.Utils.interpolate(n[a[0]].y,n[a[1]].y,n[a[2]].y,n[a[3]].y,i),o.z=THREE.Curve.Utils.interpolate(n[a[0]].z,n[a[1]].z,n[a[2]].z,n[a[3]].z,i),o}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t,r,i=e*this.getLength(),o=this.getCurveLengths(),a=0;a<o.length;){if(o[a]>=i){var n=1-(t=o[a]-i)/(r=this.curves[a]).getLength();return r.getPointAt(n)}a++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;e<i;e++)r+=this.curves[e].getLength(),t.push(r);return this.cacheLengths=t,t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,o,a,n=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=o=Number.POSITIVE_INFINITY;var s,l,h,c,f=n[0]instanceof THREE.Vector3;for(c=f?new THREE.Vector3:new THREE.Vector2,l=0,h=n.length;l<h;l++)(s=n[l]).x>e?e=s.x:s.x<i&&(i=s.x),s.y>t?t=s.y:s.y<o&&(o=s.y),f&&(s.z>r?r=s.z:s.z<a&&(a=s.z)),c.addSelf(s);var u={minX:i,minY:o,maxX:e,maxY:t,centroid:c.divideScalar(h)};return f&&(u.maxZ=r,u.minZ=a),u},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,o=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)o=this.getWrapPoints(o,t[r]);return o},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,o=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;r<i;r++)o=this.getWrapPoints(o,t[r]);return o},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,o,a,n,s,l=this.getBoundingBox();for(r=0,i=e.length;r<i;r++){a=(o=e[r]).x,n=o.y,s=a/l.maxX,s=t.getUtoTmapping(s,a);var h=t.getPoint(s),c=t.getNormalVector(s).multiplyScalar(n);o.x=h.x+c.x,o.y=h.y+c.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,o=i[i.length-2],a=i[i.length-1],n=new THREE.LineCurve(new THREE.Vector2(o,a),new THREE.Vector2(e,t));this.curves.push(n),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var o=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,n=a[a.length-2],s=a[a.length-1],l=new THREE.QuadraticBezierCurve(new THREE.Vector2(n,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(l),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:o})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,o,a){var n=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,l=s[s.length-2],h=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(l,h),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(o,a));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:n})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],o=r[r.length-1],a=[new THREE.Vector2(i,o)];Array.prototype.push.apply(a,e);var n=new THREE.SplineCurve(a);this.curves.push(n),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,o,a){var n=this.actions[this.actions.length-1].args,s=n[n.length-2],l=n[n.length-1];this.absarc(e+s,t+l,r,i,o,a)},THREE.Path.prototype.absarc=function(e,t,r,i,o,a){this.absellipse(e,t,r,r,i,o,a)},THREE.Path.prototype.ellipse=function(e,t,r,i,o,a,n){var s=this.actions[this.actions.length-1].args,l=s[s.length-2],h=s[s.length-1];this.absellipse(e+l,t+h,r,i,o,a,n)},THREE.Path.prototype.absellipse=function(e,t,r,i,o,a,n){var s=Array.prototype.slice.call(arguments),l=new THREE.EllipseCurve(e,t,r,i,o,a,n);this.curves.push(l);var h=l.getPoint(n?1:0);s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;i<e;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r,i,o,a,n,s,l,h,c,f,u,p,E,d,m,g,v,T,y=[];for(r=0,i=this.actions.length;r<i;r++)switch(o=this.actions[r],a=o.action,n=o.args,a){case THREE.PathActions.MOVE_TO:case THREE.PathActions.LINE_TO:y.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=n[2],l=n[3],f=n[0],u=n[1],y.length>0?(p=(d=y[y.length-1]).x,E=d.y):(p=(d=this.actions[r-1].args)[d.length-2],E=d[d.length-1]),m=1;m<=e;m++)g=m/e,v=THREE.Shape.Utils.b2(g,p,f,s),T=THREE.Shape.Utils.b2(g,E,u,l),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.BEZIER_CURVE_TO:for(s=n[4],l=n[5],f=n[0],u=n[1],h=n[2],c=n[3],y.length>0?(p=(d=y[y.length-1]).x,E=d.y):(p=(d=this.actions[r-1].args)[d.length-2],E=d[d.length-1]),m=1;m<=e;m++)g=m/e,v=THREE.Shape.Utils.b3(g,p,f,h,s),T=THREE.Shape.Utils.b3(g,E,u,c,l),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.CSPLINE_THRU:d=this.actions[r-1].args;var R=[new THREE.Vector2(d[d.length-2],d[d.length-1])],x=e*n[0].length;R=R.concat(n[0]);var H=new THREE.SplineCurve(R);for(m=1;m<=x;m++)y.push(H.getPointAt(m/x));break;case THREE.PathActions.ARC:var _=n[0],b=n[1],S=n[2],w=n[3],M=n[4],C=!!n[5],A=M-w,L=2*e;for(m=1;m<=L;m++)g=m/L,C||(g=1-g),P=w+g*A,v=_+S*Math.cos(P),T=b+S*Math.sin(P),y.push(new THREE.Vector2(v,T));break;case THREE.PathActions.ELLIPSE:var P,_=n[0],b=n[1],F=n[2],U=n[3],w=n[4],M=n[5],C=!!n[6],A=M-w,L=2*e;for(m=1;m<=L;m++)g=m/L,C||(g=1-g),P=w+g*A,v=_+F*Math.cos(P),T=b+U*Math.sin(P),y.push(new THREE.Vector2(v,T))}var D=y[y.length-1];return Math.abs(D.x-y[0].x)<1e-10&&Math.abs(D.y-y[0].y)<1e-10&&y.splice(y.length-1,1),t&&y.push(y[0]),y},THREE.Path.prototype.toShapes=function(){var e,t,r,i,o,a=[],n=new THREE.Path;for(e=0,t=this.actions.length;e<t;e++)o=(r=this.actions[e]).args,(i=r.action)==THREE.PathActions.MOVE_TO&&0!=n.actions.length&&(a.push(n),n=new THREE.Path),n[i].apply(n,o);if(0!=n.actions.length&&a.push(n),0==a.length)return[];var s,l,h=[],c=!THREE.Shape.Utils.isClockWise(a[0].getPoints());if(1==a.length)return s=a[0],l=new THREE.Shape,l.actions=s.actions,l.curves=s.curves,h.push(l),h;if(c)for(l=new THREE.Shape,e=0,t=a.length;e<t;e++)s=a[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(l.actions=s.actions,l.curves=s.curves,h.push(l),l=new THREE.Shape):l.holes.push(s);else{for(e=0,t=a.length;e<t;e++)s=a[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(l&&h.push(l),(l=new THREE.Shape).actions=s.actions,l.curves=s.curves):l.holes.push(s);h.push(l)}return h},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;t<r;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var r,i,o,a,n,s,l,h,c,f,u,p,E,d,m,g,v=e.concat(),T=v.concat(),y=[];for(n=0;n<t.length;n++){for(l=t[n],Array.prototype.push.apply(T,l),h=Number.POSITIVE_INFINITY,s=0;s<l.length;s++){u=l[s];var R=[];for(f=0;f<v.length;f++)p=v[f],c=u.distanceToSquared(p),R.push(c),c<h&&(h=c,o=s,a=f)}r=a-1>=0?a-1:v.length-1,i=o-1>=0?o-1:l.length-1;var x=[l[o],v[a],v[r]],H=THREE.FontUtils.Triangulate.area(x),_=[l[o],l[i],v[a]],b=THREE.FontUtils.Triangulate.area(_),S=a,w=o;o+=-1,(a+=1)<0&&(a+=v.length),a%=v.length,o<0&&(o+=l.length),o%=l.length,r=a-1>=0?a-1:v.length-1,i=o-1>=0?o-1:l.length-1,x=[l[o],v[a],v[r]];var M=THREE.FontUtils.Triangulate.area(x);_=[l[o],l[i],v[a]];H+b>M+THREE.FontUtils.Triangulate.area(_)&&(o=w,(a=S)<0&&(a+=v.length),a%=v.length,o<0&&(o+=l.length),o%=l.length,r=a-1>=0?a-1:v.length-1,i=o-1>=0?o-1:l.length-1),E=v.slice(0,a),d=v.slice(a),m=l.slice(o),g=l.slice(0,o);var C=[l[o],v[a],v[r]],A=[l[o],l[i],v[a]];y.push(C),y.push(A),v=E.concat(m).concat(g).concat(d)}return{shape:v,isolatedPts:y,allpoints:T}},triangulateShape:function(e,t){var r,i,o,a,n,s,l=THREE.Shape.Utils.removeHoles(e,t),h=l.shape,c=l.allpoints,f=l.isolatedPts,u=THREE.FontUtils.Triangulate(h,!1),p={};for(r=0,i=c.length;r<i;r++)void 0!==p[n=c[r].x+":"+c[r].y]&&console.log("Duplicate point",n),p[n]=r;for(r=0,i=u.length;r<i;r++)for(a=u[r],o=0;o<3;o++)void 0!==(s=p[n=a[o].x+":"+a[o].y])&&(a[o]=s);for(r=0,i=f.length;r<i;r++)for(a=f[r],o=0;o<3;o++)void 0!==(s=p[n=a[o].x+":"+a[o].y])&&(a[o]=s);return u.concat(f)},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,o){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,o)}},THREE.AnimationHandler=function(){var e=[],t={},r={};r.update=function(t){for(var r=0;r<e.length;r++)e[r].update(t)},r.addToUpdate=function(t){-1===e.indexOf(t)&&e.push(t)},r.removeFromUpdate=function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},r.add=function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,o(e)},r.get=function(e){if("string"==typeof e)return t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null)},r.parse=function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var r=0;r<e.bones.length;r++)t.push(e.bones[r]);else i(e,t);return t};var i=function(e,t){t.push(e);for(var r=0;r<e.children.length;r++)i(e.children[r],t)},o=function(e){if(!0!==e.initialized){for(l=0;l<e.hierarchy.length;l++){for(i=0;i<e.hierarchy[l].keys.length;i++)if(e.hierarchy[l].keys[i].time<0&&(e.hierarchy[l].keys[i].time=0),void 0!==e.hierarchy[l].keys[i].rot&&!(e.hierarchy[l].keys[i].rot instanceof THREE.Quaternion)){var t=e.hierarchy[l].keys[i].rot;e.hierarchy[l].keys[i].rot=new THREE.Quaternion(t[0],t[1],t[2],t[3])}if(e.hierarchy[l].keys.length&&void 0!==e.hierarchy[l].keys[0].morphTargets){for(var r={},i=0;i<e.hierarchy[l].keys.length;i++)for(n=0;n<e.hierarchy[l].keys[i].morphTargets.length;n++){r[a=e.hierarchy[l].keys[i].morphTargets[n]]=-1}e.hierarchy[l].usedMorphTargets=r;for(i=0;i<e.hierarchy[l].keys.length;i++){var o={};for(var a in r){for(var n=0;n<e.hierarchy[l].keys[i].morphTargets.length;n++)if(e.hierarchy[l].keys[i].morphTargets[n]===a){o[a]=e.hierarchy[l].keys[i].morphTargetsInfluences[n];break}n===e.hierarchy[l].keys[i].morphTargets.length&&(o[a]=0)}e.hierarchy[l].keys[i].morphTargetsInfluences=o}}for(i=1;i<e.hierarchy[l].keys.length;i++)e.hierarchy[l].keys[i].time===e.hierarchy[l].keys[i-1].time&&(e.hierarchy[l].keys.splice(i,1),i--);for(i=0;i<e.hierarchy[l].keys.length;i++)e.hierarchy[l].keys[i].index=i}var s=parseInt(e.length*e.fps,10);e.JIT={},e.JIT.hierarchy=[];for(var l=0;l<e.hierarchy.length;l++)e.JIT.hierarchy.push(new Array(s));e.initialized=!0}};return r.LINEAR=0,r.CATMULLROM=1,r.CATMULLROM_FORWARD=2,r}(),THREE.Animation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==r?r:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0;var r,i,o=this.hierarchy.length;for(r=0;r<o;r++){i=this.hierarchy[r],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(i.useQuaternion=!0),i.matrixAutoUpdate=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var a=i.animationCache.prevKey,n=i.animationCache.nextKey;a.pos=this.data.hierarchy[r].keys[0],a.rot=this.data.hierarchy[r].keys[0],a.scl=this.data.hierarchy[r].keys[0],n.pos=this.getNextKeyWith("pos",r,1),n.rot=this.getNextKeyWith("rot",r,1),n.scl=this.getNextKeyWith("scl",r,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t,r,i,o,a,n,s,l,h,c,f,u,p,E,d=["pos","rot","scl"];this.data.JIT.hierarchy;this.currentTime+=e*this.timeScale,f=this.currentTime,c=this.currentTime=this.currentTime%this.data.length,parseInt(Math.min(c*this.data.fps,this.data.length*this.data.fps),10);for(var m=0,g=this.hierarchy.length;m<g;m++){h=(l=this.hierarchy[m]).animationCache;for(var v=0;v<3;v++){if(t=d[v],n=h.prevKey[t],(s=h.nextKey[t]).time<=f){if(c<f){if(!this.loop)return void this.stop();for(n=this.data.hierarchy[m].keys[0],s=this.getNextKeyWith(t,m,1);s.time<c;)n=s,s=this.getNextKeyWith(t,m,s.index+1)}else do{n=s,s=this.getNextKeyWith(t,m,s.index+1)}while(s.time<c);h.prevKey[t]=n,h.nextKey[t]=s}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0,r=(c-n.time)/(s.time-n.time),o=n[t],a=s[t],(r<0||r>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+m),r=r<0?0:1),"pos"===t?(i=l.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(i.x=o[0]+(a[0]-o[0])*r,i.y=o[1]+(a[1]-o[1])*r,i.z=o[2]+(a[2]-o[2])*r):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",m,n.index-1).pos,this.points[1]=o,this.points[2]=a,this.points[3]=this.getNextKeyWith("pos",m,s.index+1).pos,r=.33*r+.33,u=this.interpolateCatmullRom(this.points,r),i.x=u[0],i.y=u[1],i.z=u[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(p=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(p[0],p[1],p[2]),this.target.subSelf(i),this.target.y=0,this.target.normalize(),E=Math.atan2(this.target.x,this.target.z),l.rotation.set(0,E,0)))):"rot"===t?THREE.Quaternion.slerp(o,a,l.quaternion,r):"scl"===t&&((i=l.scale).x=o[0]+(a[0]-o[0])*r,i.y=o[1]+(a[1]-o[1])*r,i.z=o[2]+(a[2]-o[2])*r)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var r,i,o,a,n,s,l,h,c,f=[],u=[];return r=(e.length-1)*t,i=Math.floor(r),o=r-i,f[0]=0===i?i:i-1,f[1]=i,f[2]=i>e.length-2?i:i+1,f[3]=i>e.length-3?i:i+2,s=e[f[0]],l=e[f[1]],h=e[f[2]],c=e[f[3]],a=o*o,n=o*a,u[0]=this.interpolate(s[0],l[0],h[0],c[0],o,a,n),u[1]=this.interpolate(s[1],l[1],h[1],c[1],o,a,n),u[2]=this.interpolate(s[2],l[2],h[2],c[2],o,a,n),u},THREE.Animation.prototype.interpolate=function(e,t,r,i,o,a,n){var s=.5*(r-e),l=.5*(i-t);return(2*(t-r)+s+l)*n+(-3*(t-r)-2*s-l)*a+s*o+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0===r||r;for(var i=0,o=this.hierarchy.length;i<o;i++){var a=this.data.hierarchy[i].keys,n=this.data.hierarchy[i].sids,s=this.hierarchy[i];if(a.length&&n){for(var l=0;l<n.length;l++){var h=n[l],c=this.getNextKeyWith(h,i,0);c&&c.apply(h)}s.matrixAutoUpdate=!1,this.data.hierarchy[i].node.updateMatrix(),s.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var r,i,o,a=this.hierarchy.length;for(r=0;r<a;r++){i=this.hierarchy[r],o=this.data.hierarchy[r],i.useQuaternion=!0,void 0===o.animationCache&&(o.animationCache={},o.animationCache.prevKey=null,o.animationCache.nextKey=null,o.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var n=this.data.hierarchy[r].keys;n.length&&(o.animationCache.prevKey=n[0],o.animationCache.nextKey=n[1],this.startTime=Math.min(n[0].time,this.startTime),this.endTime=Math.max(n[n.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;t instanceof THREE.Bone?(i.copy(t.skinMatrix),t.skinMatrix=i):(i.copy(t.matrix),t.matrix=i),delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,r,i,o,a,n,s,l,h=this.data.JIT.hierarchy;if(this.currentTime+=e*this.timeScale,s=this.currentTime,(n=this.currentTime=this.currentTime%this.data.length)<this.startTimeMs&&(n=this.currentTime=this.startTimeMs+n),a=parseInt(Math.min(n*this.data.fps,this.data.length*this.data.fps),10),!(l=n<s)||this.loop){if(!(n<this.startTime)){for(var c=0,f=this.hierarchy.length;c<f;c++){i=this.hierarchy[c];var u=(o=this.data.hierarchy[c]).keys,p=o.animationCache;if(this.JITCompile&&void 0!==h[c][a])i instanceof THREE.Bone?(i.skinMatrix=h[c][a],i.matrixWorldNeedsUpdate=!1):(i.matrix=h[c][a],i.matrixWorldNeedsUpdate=!0);else if(u.length){if(this.JITCompile&&p&&(i instanceof THREE.Bone?i.skinMatrix=p.originalMatrix:i.matrix=p.originalMatrix),t=p.prevKey,r=p.nextKey,t&&r){if(r.time<=s){if(l&&this.loop)for(t=u[0],r=u[1];r.time<n;)r=u[(t=r).index+1];else if(!l)for(var E=u.length-1;r.time<n&&r.index!==E;)r=u[(t=r).index+1];p.prevKey=t,p.nextKey=r}r.time>=n?t.interpolate(r,n):t.interpolate(r,r.time)}this.data.hierarchy[c].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===h[0][a]){this.hierarchy[0].updateMatrixWorld(!0);for(c=0;c<this.hierarchy.length;c++)this.hierarchy[c]instanceof THREE.Bone?h[c][a]=this.hierarchy[c].skinMatrix.clone():h[c][a]=this.hierarchy[c].matrix.clone()}}}else{for(var c=0,f=this.hierarchy.length;c<f;c++){var u=this.data.hierarchy[c].keys,d=this.data.hierarchy[c].sids,m=u.length-1,g=this.hierarchy[c];if(u.length){for(var v=0;v<d.length;v++){var T=d[v],y=this.getPrevKeyWith(T,c,m);y&&y.apply(T)}this.data.hierarchy[c].node.updateMatrix(),g.matrixWorldNeedsUpdate=!0}}this.stop()}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(e))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,1),a.lookAt(new THREE.Vector3(0,1,0)),this.add(a);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,0,-1),n.lookAt(new THREE.Vector3(0,-1,0)),this.add(n);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var l=new THREE.PerspectiveCamera(90,1,e,t);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,-1)),this.add(l),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,h=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,i,r),r.activeCubeFace=1,e.render(t,o,r),r.activeCubeFace=2,e.render(t,a,r),r.activeCubeFace=3,e.render(t,n,r),r.activeCubeFace=4,e.render(t,s,r),r.generateMipmaps=h,r.activeCubeFace=5,e.render(t,l,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,r,i,o,a,n){THREE.Camera.call(this),this.fov=r,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,a,n),this.cameraP=new THREE.PerspectiveCamera(r,e/t,i,o),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.fov,t=this.cameraP.aspect,r=(this.cameraP.near+this.cameraP.far)/2,i=Math.tan(e/2)*r,o=2*i*t/2;i/=this.zoom,o/=this.zoom,this.cameraO.left=-o,this.cameraO.right=o,this.cameraO.top=i,this.cameraO.bottom=-i,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var r=2*Math.atan(t/(2*e))*(180/Math.PI);return this.setFov(r),r},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var r=.707*e,i=.707*t,o=[[e,0,0],[t,0,0],[-e,0,0],[-t,0,0],[0,e,0],[0,t,0],[0,-e,0],[0,-t,0],[0,0,e],[0,0,t],[0,0,-e],[0,0,-t],[r,r,0],[i,i,0],[-r,-r,0],[-i,-i,0],[r,-r,0],[i,-i,0],[-r,r,0],[-i,i,0],[r,0,r],[i,0,i],[-r,0,-r],[-i,0,-i],[r,0,-r],[i,0,-i],[-r,0,r],[-i,0,i],[0,r,r],[0,i,i],[0,-r,-r],[0,-i,-i],[0,r,-r],[0,i,-i],[0,-r,r],[0,-i,i]],a=0,n=o.length;a<n;a++){var s=o[a][0],l=o[a][1],h=o[a][2];this.vertices.push(new THREE.Vector3(s,l,h))}},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),e=e||50,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,t=void 0!==t?Math.max(3,t):8;var o,a=[],n=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(n),a.push(s),o=0;o<=t;o++){var l=new THREE.Vector3;l.x=e*Math.cos(r+o/t*i),l.y=e*Math.sin(r+o/t*i),this.vertices.push(l),a.push(new THREE.Vector2((l.x/e+1)/2,-(l.y/e+1)/2+1))}var h=new THREE.Vector3(0,0,-1);for(o=1;o<=t;o++){var c=o,f=o+1;this.faces.push(new THREE.Face3(c,f,0,[h,h,h])),this.faceVertexUvs[0].push([a[o],a[o+1],s])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,r,i,o,a){function n(e,t,r,i,o,a,n,l){var h,c,f,u=s.widthSegments,p=s.heightSegments,E=o/2,d=a/2,m=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?h="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(h="y",p=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(h="x",u=s.depthSegments);var g=u+1,v=p+1,T=o/u,y=a/p,R=new THREE.Vector3;for(R[h]=n>0?1:-1,f=0;f<v;f++)for(c=0;c<g;c++){var x=new THREE.Vector3;x[e]=(c*T-E)*r,x[t]=(f*y-d)*i,x[h]=n,s.vertices.push(x)}for(f=0;f<p;f++)for(c=0;c<u;c++){var H=c+g*f,_=c+g*(f+1),b=c+1+g*(f+1),S=c+1+g*f,w=new THREE.Face4(H+m,_+m,b+m,S+m);w.normal.copy(R),w.vertexNormals.push(R.clone(),R.clone(),R.clone(),R.clone()),w.materialIndex=l,s.faces.push(w),s.faceVertexUvs[0].push([new THREE.Vector2(c/u,1-f/p),new THREE.Vector2(c/u,1-(f+1)/p),new THREE.Vector2((c+1)/u,1-(f+1)/p),new THREE.Vector2((c+1)/u,1-f/p)])}}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=r,this.widthSegments=i||1,this.heightSegments=o||1,this.depthSegments=a||1;var l=this.width/2,h=this.height/2,c=this.depth/2;n("z","y",-1,-1,this.depth,this.height,l,0),n("z","y",1,-1,this.depth,this.height,-l,1),n("x","z",1,1,this.width,this.depth,h,2),n("x","z",1,-1,this.width,this.depth,-h,3),n("x","y",1,-1,this.width,this.height,c,4),n("x","y",-1,-1,this.width,this.height,-c,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,r,i,o,a){THREE.Geometry.call(this),e=void 0!==e?e:20,t=void 0!==t?t:20;var n,s,l=(r=void 0!==r?r:100)/2,h=i||8,c=o||1,f=[],u=[];for(s=0;s<=c;s++){var p=[],E=[],d=s/c,m=d*(t-e)+e;for(n=0;n<=h;n++){var g=n/h,v=new THREE.Vector3;v.x=m*Math.sin(g*Math.PI*2),v.y=-d*r+l,v.z=m*Math.cos(g*Math.PI*2),this.vertices.push(v),p.push(this.vertices.length-1),E.push(new THREE.Vector2(g,1-d))}f.push(p),u.push(E)}var T,y,R=(t-e)/r;for(n=0;n<h;n++)for(0!==e?(T=this.vertices[f[0][n]].clone(),y=this.vertices[f[0][n+1]].clone()):(T=this.vertices[f[1][n]].clone(),y=this.vertices[f[1][n+1]].clone()),T.setY(Math.sqrt(T.x*T.x+T.z*T.z)*R).normalize(),y.setY(Math.sqrt(y.x*y.x+y.z*y.z)*R).normalize(),s=0;s<c;s++){var x=f[s][n],H=f[s+1][n],_=f[s+1][n+1],b=f[s][n+1],S=T.clone(),w=T.clone(),M=y.clone(),C=y.clone(),A=u[s][n].clone(),L=u[s+1][n].clone(),P=u[s+1][n+1].clone(),F=u[s][n+1].clone();this.faces.push(new THREE.Face4(x,H,_,b,[S,w,M,C])),this.faceVertexUvs[0].push([A,L,P,F])}if(!a&&e>0)for(this.vertices.push(new THREE.Vector3(0,l,0)),n=0;n<h;n++){var x=f[0][n],H=f[0][n+1],_=this.vertices.length-1,S=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),M=new THREE.Vector3(0,1,0),A=u[0][n].clone(),L=u[0][n+1].clone(),P=new THREE.Vector2(L.u,0);this.faces.push(new THREE.Face3(x,H,_,[S,w,M])),this.faceVertexUvs[0].push([A,L,P])}if(!a&&t>0)for(this.vertices.push(new THREE.Vector3(0,-l,0)),n=0;n<h;n++){var x=f[s][n+1],H=f[s][n],_=this.vertices.length-1,S=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),M=new THREE.Vector3(0,-1,0),A=u[s][n+1].clone(),L=u[s][n].clone(),P=new THREE.Vector2(L.u,1);this.faces.push(new THREE.Face3(x,H,_,[S,w,M])),this.faceVertexUvs[0].push([A,L,P])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){void 0!==e?(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()):e=[]},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;i<r;i++){var o=e[i];this.addShape(o,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).addSelf(e)}function i(e,t,r){return function(e,t,r){var i,o,a,n,s,l=THREE.ExtrudeGeometry.__v1,h=THREE.ExtrudeGeometry.__v2,c=THREE.ExtrudeGeometry.__v3,f=THREE.ExtrudeGeometry.__v4,u=THREE.ExtrudeGeometry.__v5,p=THREE.ExtrudeGeometry.__v6;if(l.set(e.x-t.x,e.y-t.y),h.set(e.x-r.x,e.y-r.y),i=l.normalize(),o=h.normalize(),c.set(-i.y,i.x),f.set(o.y,-o.x),u.copy(e).addSelf(c),p.copy(e).addSelf(f),u.equals(p))return f.clone();u.copy(t).addSelf(c),p.copy(r).addSelf(f),a=i.dot(f),n=p.subSelf(u).dot(f),0===a&&(console.log("Either infinite or no solutions!"),0===n?console.log("Its finite solutions."):console.log("Too bad, no solutions."));if((s=n/a)<0)return function(e,t,r){var i=Math.atan2(t.y-e.y,t.x-e.x),o=Math.atan2(r.y-e.y,r.x-e.x);i>o&&(o+=2*Math.PI);var a=(i+o)/2,n=-Math.cos(a),s=-Math.sin(a);return new THREE.Vector2(n,s)}(e,t,r);return i.multiplyScalar(s).addSelf(u).subSelf(e).clone()}(e,t,r)}function o(r,i){var o,a;for(W=r.length;--W>=0;){o=W,(a=W-1)<0&&(a=r.length-1);var n=0,s=v+2*d;for(n=0;n<s;n++){var l=O*n,h=O*(n+1);!function(r,i,o,a,n,s,l,h,c){r+=M,i+=M,o+=M,a+=M,w.faces.push(new THREE.Face4(r,i,o,a,null,null,x));var f=H.generateSideWallUV(w,e,n,t,r,i,o,a,s,l,h,c);w.faceVertexUvs[0].push(f)}(i+o+l,i+a+l,i+a+h,i+o+h,r,n,s,o,a)}}}function a(e,t,r){w.vertices.push(new THREE.Vector3(e,t,r))}function n(r,i,o,a){r+=M,i+=M,o+=M,w.faces.push(new THREE.Face3(r,i,o,null,null,R));var n=a?H.generateBottomUV(w,e,t,r,i,o):H.generateTopUV(w,e,t,r,i,o);w.faceVertexUvs[0].push(n)}var s,l,h,c,f,u=void 0!==t.amount?t.amount:100,p=void 0!==t.bevelThickness?t.bevelThickness:6,E=void 0!==t.bevelSize?t.bevelSize:p-2,d=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0===t.bevelEnabled||t.bevelEnabled,g=void 0!==t.curveSegments?t.curveSegments:12,v=void 0!==t.steps?t.steps:1,T=t.extrudePath,y=!1,R=t.material,x=t.extrudeMaterial,H=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;T&&(s=T.getSpacedPoints(v),y=!0,m=!1,l=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(T,v,!1),h=new THREE.Vector3,c=new THREE.Vector3,f=new THREE.Vector3),m||(d=0,p=0,E=0);var _,b,S,w=this,M=this.vertices.length,C=e.extractPoints(g),A=C.shape,L=C.holes,P=!THREE.Shape.Utils.isClockWise(A);if(P){for(A=A.reverse(),b=0,S=L.length;b<S;b++)_=L[b],THREE.Shape.Utils.isClockWise(_)&&(L[b]=_.reverse());P=!1}var F=THREE.Shape.Utils.triangulateShape(A,L),U=A;for(b=0,S=L.length;b<S;b++)_=L[b],A=A.concat(_);for(var D,z,N,B,V,I,O=A.length,G=F.length,k=(U.length,Math.PI,[]),W=0,j=U.length,X=j-1,Y=W+1;W<j;W++,X++,Y++){X===j&&(X=0),Y===j&&(Y=0);U[W],U[X],U[Y];k[W]=i(U[W],U[X],U[Y])}var q,K=[],Z=k.concat();for(b=0,S=L.length;b<S;b++){for(_=L[b],q=[],W=0,X=(j=_.length)-1,Y=W+1;W<j;W++,X++,Y++)X===j&&(X=0),Y===j&&(Y=0),q[W]=i(_[W],_[X],_[Y]);K.push(q),Z=Z.concat(q)}for(D=0;D<d;D++){for(B=p*(1-(N=D/d)),z=E*Math.sin(N*Math.PI/2),W=0,j=U.length;W<j;W++)a((V=r(U[W],k[W],z)).x,V.y,-B);for(b=0,S=L.length;b<S;b++)for(_=L[b],q=K[b],W=0,j=_.length;W<j;W++)a((V=r(_[W],q[W],z)).x,V.y,-B)}for(z=E,W=0;W<O;W++)V=m?r(A[W],Z[W],z):A[W],y?(c.copy(l.normals[0]).multiplyScalar(V.x),h.copy(l.binormals[0]).multiplyScalar(V.y),f.copy(s[0]).addSelf(c).addSelf(h),a(f.x,f.y,f.z)):a(V.x,V.y,0);var Q;for(Q=1;Q<=v;Q++)for(W=0;W<O;W++)V=m?r(A[W],Z[W],z):A[W],y?(c.copy(l.normals[Q]).multiplyScalar(V.x),h.copy(l.binormals[Q]).multiplyScalar(V.y),f.copy(s[Q]).addSelf(c).addSelf(h),a(f.x,f.y,f.z)):a(V.x,V.y,u/v*Q);for(D=d-1;D>=0;D--){for(B=p*(1-(N=D/d)),z=E*Math.sin(N*Math.PI/2),W=0,j=U.length;W<j;W++)a((V=r(U[W],k[W],z)).x,V.y,u+B);for(b=0,S=L.length;b<S;b++)for(_=L[b],q=K[b],W=0,j=_.length;W<j;W++)V=r(_[W],q[W],z),y?a(V.x,V.y+s[v-1].y,s[v-1].x+B):a(V.x,V.y,u+B)}!function(){if(m){var e=0,t=O*e;for(W=0;W<G;W++)n((I=F[W])[2]+t,I[1]+t,I[0]+t,!0);for(t=O*(e=v+2*d),W=0;W<G;W++)n((I=F[W])[0]+t,I[1]+t,I[2]+t,!1)}else{for(W=0;W<G;W++)n((I=F[W])[2],I[1],I[0],!0);for(W=0;W<G;W++)n((I=F[W])[0]+O*v,I[1]+O*v,I[2]+O*v,!1)}}(),function(){var e=0;for(o(U,e),e+=U.length,b=0,S=L.length;b<S;b++)o(_=L[b],e),e+=_.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,o,a){var n=e.vertices[i].x,s=e.vertices[i].y,l=e.vertices[o].x,h=e.vertices[o].y,c=e.vertices[a].x,f=e.vertices[a].y;return[new THREE.Vector2(n,s),new THREE.Vector2(l,h),new THREE.Vector2(c,f)]},generateBottomUV:function(e,t,r,i,o,a){return this.generateTopUV(e,t,r,i,o,a)},generateSideWallUV:function(e,t,r,i,o,a,n,s,l,h,c,f){var u=e.vertices[o].x,p=e.vertices[o].y,E=e.vertices[o].z,d=e.vertices[a].x,m=e.vertices[a].y,g=e.vertices[a].z,v=e.vertices[n].x,T=e.vertices[n].y,y=e.vertices[n].z,R=e.vertices[s].x,x=e.vertices[s].y,H=e.vertices[s].z;return Math.abs(p-m)<.01?[new THREE.Vector2(u,1-E),new THREE.Vector2(d,1-g),new THREE.Vector2(v,1-y),new THREE.Vector2(R,1-H)]:[new THREE.Vector2(p,1-E),new THREE.Vector2(m,1-g),new THREE.Vector2(T,1-y),new THREE.Vector2(x,1-H)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;r<i;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r,i,o,a=void 0!==t.curveSegments?t.curveSegments:12,n=t.material,s=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,l=(this.shapebb,this.vertices.length),h=e.extractPoints(a),c=h.shape,f=h.holes,u=!THREE.Shape.Utils.isClockWise(c);if(u){for(c=c.reverse(),r=0,i=f.length;r<i;r++)o=f[r],THREE.Shape.Utils.isClockWise(o)&&(f[r]=o.reverse());u=!1}var p=THREE.Shape.Utils.triangulateShape(c,f),E=c;for(r=0,i=f.length;r<i;r++)o=f[r],c=c.concat(o);var d,m,g=c.length,v=p.length;E.length;for(r=0;r<g;r++)d=c[r],this.vertices.push(new THREE.Vector3(d.x,d.y,0));for(r=0;r<v;r++){var T=(m=p[r])[0]+l,y=m[1]+l,R=m[2]+l;this.faces.push(new THREE.Face3(T,y,R,null,null,n)),this.faceVertexUvs[0].push(s.generateBottomUV(this,e,t,T,y,R))}},THREE.LatheGeometry=function(e,t,r){THREE.Geometry.call(this);for(var i=t||12,o=r||2*Math.PI,a=[],n=(new THREE.Matrix4).makeRotationZ(o/i),s=0;s<e.length;s++)a[s]=e[s].clone(),this.vertices.push(a[s]);var l,h=i+1;for(l=0;l<h;l++)for(s=0;s<a.length;s++)a[s]=n.multiplyVector3(a[s].clone()),this.vertices.push(a[s]);for(l=0;l<i;l++)for(var c=0,f=e.length;c<f-1;c++){var u=l*f+c,p=(l+1)%h*f+c,E=(l+1)%h*f+(c+1)%f,d=l*f+(c+1)%f;this.faces.push(new THREE.Face4(u,p,E,d)),this.faceVertexUvs[0].push([new THREE.Vector2(1-l/i,c/f),new THREE.Vector2(1-(l+1)/i,c/f),new THREE.Vector2(1-(l+1)/i,(c+1)/f),new THREE.Vector2(1-l/i,(c+1)/f)])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=r||1,this.heightSegments=i||1;var o,a,n=e/2,s=t/2,l=this.widthSegments,h=this.heightSegments,c=l+1,f=h+1,u=this.width/l,p=this.height/h,E=new THREE.Vector3(0,0,1);for(a=0;a<f;a++)for(o=0;o<c;o++){var d=o*u-n,m=a*p-s;this.vertices.push(new THREE.Vector3(d,-m,0))}for(a=0;a<h;a++)for(o=0;o<l;o++){var g=o+c*a,v=o+c*(a+1),T=o+1+c*(a+1),y=o+1+c*a,R=new THREE.Face4(g,v,T,y);R.normal.copy(E),R.vertexNormals.push(E.clone(),E.clone(),E.clone(),E.clone()),this.faces.push(R),this.faceVertexUvs[0].push([new THREE.Vector2(o/l,1-a/h),new THREE.Vector2(o/l,1-(a+1)/h),new THREE.Vector2((o+1)/l,1-(a+1)/h),new THREE.Vector2((o+1)/l,1-a/h)])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,o,a,n){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,o=void 0!==o?o:2*Math.PI,a=void 0!==a?a:0,n=void 0!==n?n:Math.PI;var s,l,h=[],c=[];for(l=0;l<=this.heightSegments;l++){var f=[],u=[];for(s=0;s<=this.widthSegments;s++){var p=s/this.widthSegments,E=l/this.heightSegments,d=new THREE.Vector3;d.x=-this.radius*Math.cos(i+p*o)*Math.sin(a+E*n),d.y=this.radius*Math.cos(a+E*n),d.z=this.radius*Math.sin(i+p*o)*Math.sin(a+E*n),this.vertices.push(d),f.push(this.vertices.length-1),u.push(new THREE.Vector2(p,1-E))}h.push(f),c.push(u)}for(l=0;l<this.heightSegments;l++)for(s=0;s<this.widthSegments;s++){var m=h[l][s+1],g=h[l][s],v=h[l+1][s],T=h[l+1][s+1],y=this.vertices[m].clone().normalize(),R=this.vertices[g].clone().normalize(),x=this.vertices[v].clone().normalize(),H=this.vertices[T].clone().normalize(),_=c[l][s+1].clone(),b=c[l][s].clone(),S=c[l+1][s].clone(),w=c[l+1][s+1].clone();Math.abs(this.vertices[m].y)===this.radius?(this.faces.push(new THREE.Face3(m,v,T,[y,x,H])),this.faceVertexUvs[0].push([_,S,w])):Math.abs(this.vertices[v].y)===this.radius?(this.faces.push(new THREE.Face3(m,g,v,[y,R,x])),this.faceVertexUvs[0].push([_,b,S])):(this.faces.push(new THREE.Face4(m,g,v,T,[y,R,x,H])),this.faceVertexUvs[0].push([_,b,S,w]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,o){THREE.Geometry.call(this);this.radius=e||100,this.tube=t||40,this.radialSegments=r||8,this.tubularSegments=i||6,this.arc=o||2*Math.PI;for(var a=new THREE.Vector3,n=[],s=[],l=0;l<=this.radialSegments;l++)for(u=0;u<=this.tubularSegments;u++){var h=u/this.tubularSegments*this.arc,c=l/this.radialSegments*Math.PI*2;a.x=this.radius*Math.cos(h),a.y=this.radius*Math.sin(h);var f=new THREE.Vector3;f.x=(this.radius+this.tube*Math.cos(c))*Math.cos(h),f.y=(this.radius+this.tube*Math.cos(c))*Math.sin(h),f.z=this.tube*Math.sin(c),this.vertices.push(f),n.push(new THREE.Vector2(u/this.tubularSegments,l/this.radialSegments)),s.push(f.clone().subSelf(a).normalize())}for(l=1;l<=this.radialSegments;l++)for(var u=1;u<=this.tubularSegments;u++){var p=(this.tubularSegments+1)*l+u-1,E=(this.tubularSegments+1)*(l-1)+u-1,d=(this.tubularSegments+1)*(l-1)+u,m=(this.tubularSegments+1)*l+u,g=new THREE.Face4(p,E,d,m,[s[p],s[E],s[d],s[m]]);g.normal.addSelf(s[p]),g.normal.addSelf(s[E]),g.normal.addSelf(s[d]),g.normal.addSelf(s[m]),g.normal.normalize(),this.faces.push(g),this.faceVertexUvs[0].push([n[p].clone(),n[E].clone(),n[d].clone(),n[m].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,o,a,n){function s(e,t,r,i,o,a){var n=Math.cos(e),s=(Math.cos(t),Math.sin(e)),l=r/i*e,h=Math.cos(l),c=o*(2+h)*.5*n,f=o*(2+h)*s*.5,u=a*o*Math.sin(l)*.5;return new THREE.Vector3(c,f,u)}THREE.Geometry.call(this);var l=this;this.radius=e||200,this.tube=t||40,this.radialSegments=r||64,this.tubularSegments=i||8,this.p=o||2,this.q=a||3,this.heightScale=n||1,this.grid=new Array(this.radialSegments);for(var h=new THREE.Vector3,c=new THREE.Vector3,f=new THREE.Vector3,u=0;u<this.radialSegments;++u){this.grid[u]=new Array(this.tubularSegments);for(T=0;T<this.tubularSegments;++T){var p,E,d=u/this.radialSegments*2*this.p*Math.PI,m=T/this.tubularSegments*2*Math.PI,g=s(d,m,this.q,this.p,this.radius,this.heightScale),v=s(d+.01,m,this.q,this.p,this.radius,this.heightScale);h.sub(v,g),c.add(v,g),f.cross(h,c),c.cross(f,h),f.normalize(),c.normalize(),p=-this.tube*Math.cos(m),E=this.tube*Math.sin(m),g.x+=p*c.x+E*f.x,g.y+=p*c.y+E*f.y,g.z+=p*c.z+E*f.z,this.grid[u][T]=function(e,t,r){return l.vertices.push(new THREE.Vector3(e,t,r))-1}(g.x,g.y,g.z)}}for(u=0;u<this.radialSegments;++u)for(var T=0;T<this.tubularSegments;++T){var y=(u+1)%this.radialSegments,R=(T+1)%this.tubularSegments,x=this.grid[u][T],H=this.grid[y][T],_=this.grid[y][R],b=this.grid[u][R],S=new THREE.Vector2(u/this.radialSegments,T/this.tubularSegments),w=new THREE.Vector2((u+1)/this.radialSegments,T/this.tubularSegments),M=new THREE.Vector2((u+1)/this.radialSegments,(T+1)/this.tubularSegments),C=new THREE.Vector2(u/this.radialSegments,(T+1)/this.tubularSegments);this.faces.push(new THREE.Face4(x,H,_,b)),this.faceVertexUvs[0].push([S,w,M,C])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,o,a){function n(e,t,r){return w.vertices.push(new THREE.Vector3(e,t,r))-1}THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=r||1,this.radiusSegments=i||8,this.closed=o||!1,a&&(this.debug=new THREE.Object3D),this.grid=[];var s,l,h,c,f,u,p,E,d,m,g,v,T,y,R,x,H,_,b,S,w=this,M=this.segments+1,C=new THREE.Vector3,A=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),L=A.tangents,P=A.normals,F=A.binormals;for(this.tangents=L,this.normals=P,this.binormals=F,d=0;d<M;d++)for(this.grid[d]=[],c=d/(M-1),E=e.getPointAt(c),s=L[d],l=P[d],h=F[d],this.debug&&(this.debug.add(new THREE.ArrowHelper(s,E,r,255)),this.debug.add(new THREE.ArrowHelper(l,E,r,16711680)),this.debug.add(new THREE.ArrowHelper(h,E,r,65280))),m=0;m<this.radiusSegments;m++)f=m/this.radiusSegments*2*Math.PI,u=-this.radius*Math.cos(f),p=this.radius*Math.sin(f),C.copy(E),C.x+=u*l.x+p*h.x,C.y+=u*l.y+p*h.y,C.z+=u*l.z+p*h.z,this.grid[d][m]=n(C.x,C.y,C.z);for(d=0;d<this.segments;d++)for(m=0;m<this.radiusSegments;m++)g=this.closed?(d+1)%this.segments:d+1,v=(m+1)%this.radiusSegments,T=this.grid[d][m],y=this.grid[g][m],R=this.grid[g][v],x=this.grid[d][v],H=new THREE.Vector2(d/this.segments,m/this.radiusSegments),_=new THREE.Vector2((d+1)/this.segments,m/this.radiusSegments),b=new THREE.Vector2((d+1)/this.segments,(m+1)/this.radiusSegments),S=new THREE.Vector2(d/this.segments,(m+1)/this.radiusSegments),this.faces.push(new THREE.Face4(T,y,R,x)),this.faceVertexUvs[0].push([H,_,b,S]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){new THREE.Vector3;var i,o,a,n,s,l,h,c=new THREE.Vector3,f=(new THREE.Vector3,[]),u=[],p=[],E=new THREE.Vector3,d=new THREE.Matrix4,m=t+1,g=1e-4;for(this.tangents=f,this.normals=u,this.binormals=p,l=0;l<m;l++)h=l/(m-1),f[l]=e.getTangentAt(h),f[l].normalize();for(u[0]=new THREE.Vector3,p[0]=new THREE.Vector3,o=Number.MAX_VALUE,a=Math.abs(f[0].x),n=Math.abs(f[0].y),s=Math.abs(f[0].z),a<=o&&(o=a,c.set(1,0,0)),n<=o&&(o=n,c.set(0,1,0)),s<=o&&c.set(0,0,1),E.cross(f[0],c).normalize(),u[0].cross(f[0],E),p[0].cross(f[0],u[0]),l=1;l<m;l++)u[l]=u[l-1].clone(),p[l]=p[l-1].clone(),E.cross(f[l-1],f[l]),E.length()>g&&(E.normalize(),i=Math.acos(f[l-1].dot(f[l])),d.makeRotationAxis(E,i).multiplyVector3(u[l])),p[l].cross(f[l],u[l]);if(r)for(i=Math.acos(u[0].dot(u[m-1])),i/=m-1,f[0].dot(E.cross(u[0],u[m-1]))>0&&(i=-i),l=1;l<m;l++)d.makeRotationAxis(f[l],i*l).multiplyVector3(u[l]),p[l].cross(f[l],u[l])},THREE.PolyhedronGeometry=function(e,t,r,i){function o(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var r=s(e)/2/Math.PI+.5,i=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(e)/Math.PI+.5;return t.uv=new THREE.Vector2(r,1-i),t}function a(e,t,r,i){if(i<1){var o=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);o.centroid.addSelf(e).addSelf(t).addSelf(r).divideScalar(3),o.normal=o.centroid.clone().normalize(),h.faces.push(o);var c=s(o.centroid);h.faceVertexUvs[0].push([l(e.uv,e,c),l(t.uv,t,c),l(r.uv,r,c)])}else i-=1,a(e,n(e,t),n(e,r),i),a(n(e,t),t,n(t,r),i),a(n(e,r),n(t,r),r,i),a(n(e,t),n(t,r),n(e,r),i)}function n(e,t){u[e.index]||(u[e.index]=[]),u[t.index]||(u[t.index]=[]);var r=u[e.index][t.index];return void 0===r&&(u[e.index][t.index]=u[t.index][e.index]=r=o((new THREE.Vector3).add(e,t).divideScalar(2))),r}function s(e){return Math.atan2(e.z,-e.x)}function l(e,t,r){return r<0&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e}THREE.Geometry.call(this),r=r||1,i=i||0;for(var h=this,c=0,f=e.length;c<f;c++)o(new THREE.Vector3(e[c][0],e[c][1],e[c][2]));for(var u=[],p=this.vertices,c=0,f=t.length;c<f;c++)a(p[t[c][0]],p[t[c][1]],p[t[c][2]],i);this.mergeVertices();for(var c=0,f=this.vertices.length;c<f;c++)this.vertices[c].multiplyScalar(r);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2,i=[[-1,r,0],[1,r,0],[-1,-r,0],[1,-r,0],[0,-1,r],[0,1,r],[0,-1,-r],[0,1,-r],[r,0,-1],[r,0,1],[-r,0,-1],[-r,0,1]];THREE.PolyhedronGeometry.call(this,i,[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r,i){THREE.Geometry.call(this);var o=this.vertices,a=this.faces,n=this.faceVertexUvs[0];i=void 0!==i&&i;var s,l,h,c,f=t+1;for(s=0;s<=r;s++)for(c=s/r,l=0;l<=t;l++)h=e(l/t,c),o.push(h);var u,p,E,d,m,g,v,T;for(s=0;s<r;s++)for(l=0;l<t;l++)u=s*f+l,p=s*f+l+1,E=(s+1)*f+l,d=(s+1)*f+l+1,m=new THREE.Vector2(l/t,s/r),g=new THREE.Vector2((l+1)/t,s/r),v=new THREE.Vector2(l/t,(s+1)/r),T=new THREE.Vector2((l+1)/t,(s+1)/r),i?(a.push(new THREE.Face3(u,p,E)),a.push(new THREE.Face3(p,d,E)),n.push([m,g,v]),n.push([g,T,v])):(a.push(new THREE.Face4(u,p,d,E)),n.push([m,g,T,v]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(){return 2*(Math.random()-.5)*1e-6}function r(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var i=[[0,1,2],[0,2,1]],o=3;o<e.length;o++)!function(r){var o=e[r].clone(),a=o.length();o.x+=a*t(),o.y+=a*t(),o.z+=a*t();for(var n=[],s=0;s<i.length;){var l=i[s];if(function(t,r){var i=e[t[0]],o=e[t[1]],a=e[t[2]],n=function(e,t,r){var i=new THREE.Vector3,o=new THREE.Vector3;return i.sub(r,t),o.sub(e,t),i.crossSelf(o),i.normalize(),i}(i,o,a),s=n.dot(i);return n.dot(r)>=s}(l,o)){for(var h=0;h<3;h++){for(var c=[l[h],l[(h+1)%3]],f=!0,u=0;u<n.length;u++)if(function(e,t){return e[0]===t[1]&&e[1]===t[0]}(n[u],c)){n[u]=n[n.length-1],n.pop(),f=!1;break}f&&n.push(c)}i[s]=i[i.length-1],i.pop()}else s++}for(u=0;u<n.length;u++)i.push([n[u][0],n[u][1],r])}(o);for(var a=0,n=new Array(e.length),o=0;o<i.length;o++)for(var s=i[o],l=0;l<3;l++)void 0===n[s[l]]&&(n[s[l]]=a++,this.vertices.push(e[s[l]])),s[l]=n[s[l]];for(o=0;o<i.length;o++)this.faces.push(new THREE.Face3(i[o][0],i[o][1],i[o][2]));for(o=0;o<this.faces.length;o++){s=this.faces[o];this.faceVertexUvs[0].push([r(this.vertices[s.a]),r(this.vertices[s.b]),r(this.vertices[s.c])])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,r,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,r,i){THREE.Object3D.call(this),void 0===i&&(i=16776960),void 0===r&&(r=20);var o=new THREE.Geometry;o.vertices.push(new THREE.Vector3(0,0,0)),o.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(o,new THREE.LineBasicMaterial({color:i})),this.add(this.line);var a=new THREE.CylinderGeometry(0,.05,.25,5,1);this.cone=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:i})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(r)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=new THREE.Vector3(0,1,0).crossSelf(e),r=Math.acos(new THREE.Vector3(0,1,0).dot(e.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(t.normalize(),r),this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.geometry.vertices.push(new THREE.Vector3),i.geometry.colors.push(new THREE.Color(t)),void 0===i.pointMap[e]&&(i.pointMap[e]=[]),i.pointMap[e].push(i.geometry.vertices.length-1)}THREE.Line.call(this);var i=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={};t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,r,i,o){THREE.CameraHelper.__v.set(r,i,o),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);var a=t.pointMap[e];if(void 0!==a)for(var n=0,s=a.length;n<s;n++)t.geometry.vertices[a[n]].copy(THREE.CameraHelper.__v)}var t=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t,r){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.sub(e.target.position,e.position),this.color=e.color.clone();var i=THREE.Math.clamp(e.intensity,0,1);this.color.r*=i,this.color.g*=i,this.color.b*=i;var o=this.color.getHex(),a=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),s=new THREE.MeshBasicMaterial({color:o,fog:!1}),l=new THREE.LineBasicMaterial({color:o,fog:!1});if(this.lightArrow=new THREE.ArrowHelper(this.direction,null,r,o),this.lightSphere=new THREE.Mesh(a,s),this.lightArrow.cone.material.fog=!1,this.lightArrow.line.material.fog=!1,this.lightRays=new THREE.Line(n,l,THREE.LinePieces),this.add(this.lightArrow),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,e.target.properties.targetInverse){var h=new THREE.SphereGeometry(t,8,4),c=new THREE.MeshBasicMaterial({color:o,wireframe:!0,fog:!1});this.targetSphere=new THREE.Mesh(h,c),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var f=new THREE.LineDashedMaterial({color:o,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),u=new THREE.Geometry;u.vertices.push(this.position.clone()),u.vertices.push(this.targetSphere.position.clone()),u.computeLineDistances(),this.targetLine=new THREE.Line(u,f),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position),this.lightArrow.setDirection(this.direction),this.color.copy(this.light.color);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=e,this.color.g*=e,this.color.b*=e,this.lightArrow.setColor(this.color.getHex()),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t,r,i){THREE.Object3D.call(this),this.light=e,this.position=e.position;var o=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.r*=o,this.color.g*=o,this.color.b*=o;var a=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.r*=o,this.groundColor.g*=o,this.groundColor.b*=o;for(var n=this.groundColor.getHex(),s=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),l=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),h=new THREE.MeshBasicMaterial({color:a,fog:!1}),c=new THREE.MeshBasicMaterial({color:n,fog:!1}),f=0,u=s.faces.length;f<u;f++)s.faces[f].materialIndex=0;for(var f=0,u=l.faces.length;f<u;f++)l.faces[f].materialIndex=1;THREE.GeometryUtils.merge(s,l),this.lightSphere=new THREE.Mesh(s,new THREE.MeshFaceMaterial([h,c])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+r),0),r,a),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(t+r),0),r,n);var p=new THREE.Object3D;p.rotation.x=.5*-Math.PI,p.add(this.lightSphere),p.add(this.lightArrow),p.add(this.lightArrowGround),this.add(p),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.groundColor.copy(this.light.groundColor),this.color.r*=e,this.color.g*=e,this.color.b*=e,this.groundColor.r*=e,this.groundColor.g*=e,this.groundColor.b*=e,this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.color=e.color.clone();var r=THREE.Math.clamp(e.intensity,0,1);this.color.r*=r,this.color.g*=r,this.color.b*=r;var i=this.color.getHex(),o=new THREE.SphereGeometry(t,16,8),a=new THREE.AsteriskGeometry(1.25*t,2.25*t),n=new THREE.IcosahedronGeometry(1,2),s=new THREE.MeshBasicMaterial({color:i,fog:!1}),l=new THREE.LineBasicMaterial({color:i,fog:!1}),h=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(o,s),this.lightRays=new THREE.Line(a,l,THREE.LinePieces),this.lightDistance=new THREE.Mesh(n,h);var c=e.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){this.color.copy(this.light.color);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=e,this.color.g*=e,this.color.b*=e,this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color);var t=this.light.distance;0===t?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(t,t,t))},THREE.SpotLightHelper=function(e,t,r){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.sub(e.target.position,e.position),this.color=e.color.clone();var i=THREE.Math.clamp(e.intensity,0,1);this.color.r*=i,this.color.g*=i,this.color.b*=i;var o=this.color.getHex(),a=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),s=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),l=new THREE.Matrix4;l.rotateX(-Math.PI/2),l.translate(new THREE.Vector3(0,-.5,0)),s.applyMatrix(l);var h=new THREE.MeshBasicMaterial({color:o,fog:!1}),c=new THREE.LineBasicMaterial({color:o,fog:!1}),f=new THREE.MeshBasicMaterial({color:o,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightArrow=new THREE.ArrowHelper(this.direction,null,r,o),this.lightSphere=new THREE.Mesh(a,h),this.lightCone=new THREE.Mesh(s,f);var u=e.distance?e.distance:1e4,p=u*Math.tan(.5*e.angle)*2;if(this.lightCone.scale.set(p,p,u),this.lightArrow.cone.material.fog=!1,this.lightArrow.line.material.fog=!1,this.lightRays=new THREE.Line(n,c,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightArrow),this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,e.target.properties.targetInverse){var E=new THREE.SphereGeometry(t,8,4),d=new THREE.MeshBasicMaterial({color:o,wireframe:!0,fog:!1});this.targetSphere=new THREE.Mesh(E,d),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var m=new THREE.LineDashedMaterial({color:o,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),g=new THREE.Geometry;g.vertices.push(this.position.clone()),g.vertices.push(this.targetSphere.position.clone()),g.computeLineDistances(),this.targetLine=new THREE.Line(g,m),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position),this.lightArrow.setDirection(this.direction),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=e*Math.tan(.5*this.light.angle)*2;this.lightCone.scale.set(t,t,e),this.color.copy(this.light.color);var r=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=r,this.color.g*=r,this.color.b*=r,this.lightArrow.setColor(this.color.getHex()),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0},THREE.SubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e,this.useOldVertexColors=!1,this.supportUVs=!0,this.debug=!1},THREE.SubdivisionModifier.prototype.modify=function(e){for(var t=this.subdivisions;t-- >0;)this.smooth(e)},THREE.GeometryUtils.orderedKey=function(e,t){return Math.min(e,t)+"_"+Math.max(e,t)},THREE.GeometryUtils.computeEdgeFaces=function(e){function t(e,t){void 0===a[e]&&(a[e]=[]),a[e].push(t)}var r,i,o,a={},n=THREE.GeometryUtils.orderedKey;for(r=0,i=e.faces.length;r<i;r++)(o=e.faces[r])instanceof THREE.Face3?(t(n(o.a,o.b),r),t(n(o.b,o.c),r),t(n(o.c,o.a),r)):o instanceof THREE.Face4&&(t(n(o.a,o.b),r),t(n(o.b,o.c),r),t(n(o.c,o.d),r),t(n(o.d,o.a),r));return a},THREE.SubdivisionModifier.prototype.smooth=function(e){function t(){g.debug&&console&&console.assert&&console.assert.apply(console,arguments)}function r(){g.debug&&console.log.apply(console,arguments)}function i(){console&&console.log.apply(console,arguments)}function o(e,t,i,o,n,s,l){var h=new THREE.Face4(e,t,i,o,null,n.color,n.materialIndex);if(g.useOldVertexColors){h.vertexColors=[];for(var c,f,u,p=0;p<4;p++){u=s[p],(c=new THREE.Color).setRGB(0,0,0);for(var E=0;E<u.length;E++)f=n.vertexColors[u[E]-1],c.r+=f.r,c.g+=f.g,c.b+=f.b;c.r/=u.length,c.g/=u.length,c.b/=u.length,h.vertexColors[p]=c}}if(d.push(h),g.supportUVs){var v=[a(e,""),a(t,l),a(i,l),a(o,l)];v[0]?v[1]?v[2]?v[3]?m.push(v):r("d :( ",o+":"+l):r("c :( ",i+":"+l):r("b :( ",t+":"+l):r("a :( ",e+":"+l)}}function a(e,t){var o=e+":"+t,a=M[o];return a||(r(e>=x&&e<x+R.length?"face pt":"edge pt"),i("warning, UV not found for",o),null)}function n(e,t,r){var o=e+":"+t;o in M?i("dup vertexNo",e,"oldFaceNo",t,"value",r,"key",o,M[o]):M[o]=r}function s(e,t){void 0===G[e]&&(G[e]=[]),G[e].push(t)}function l(e,t,r){void 0===k[e]&&(k[e]={}),k[e][t]=r}var h,c,f,u,p,E=[],d=[],m=[],g=this,v=THREE.GeometryUtils.orderedKey,T=THREE.GeometryUtils.computeEdgeFaces,y=e.vertices,R=e.faces,x=y.length,H=y.concat(),_=[],b={},S={},w=[],M={},C=e.faceVertexUvs[0];if(r("originalFaces, uvs, originalVerticesLength",R.length,C.length,x),g.supportUVs)for(h=0,c=C.length;h<c;h++)for(f=0,u=C[h].length;f<u;f++)n(R[h]["abcd".charAt(f)],h,C[h][f]);0==C.length&&(g.supportUVs=!1);var A=0;for(var L in M)A++;A||(g.supportUVs=!1,r("no uvs"));var P;for(h=0,c=R.length;h<c;h++)p=R[h],_.push(p.centroid),H.push(p.centroid),g.supportUVs&&(P=new THREE.Vector2,p instanceof THREE.Face3?(P.x=a(p.a,h).x+a(p.b,h).x+a(p.c,h).x,P.y=a(p.a,h).y+a(p.b,h).y+a(p.c,h).y,P.x/=3,P.y/=3):p instanceof THREE.Face4&&(P.x=a(p.a,h).x+a(p.b,h).x+a(p.c,h).x+a(p.d,h).x,P.y=a(p.a,h).y+a(p.b,h).y+a(p.c,h).y+a(p.d,h).y,P.x/=4,P.y/=4),n(x+h,"",P));var F,U,D,z,N,B,V,I=T(e),O=0,G={},k={};for(h in I){for(F=I[h],s(B=(N=h.split("_"))[0],[B,V=N[1]]),s(V,[B,V]),f=0,u=F.length;f<u;f++)l(B,p=F[f],h),l(V,p,h);F.length<2&&(S[h]=!0,w[B]=!0,w[V]=!0)}for(h in I)U=(F=I[h])[0],D=F[1],B=(N=h.split("_"))[0],V=N[1],z=new THREE.Vector3,t(F.length>0,"an edge without faces?!"),1==F.length?(z.addSelf(y[B]),z.addSelf(y[V]),z.multiplyScalar(.5),w[H.length]=!0):(z.addSelf(_[U]),z.addSelf(_[D]),z.addSelf(y[B]),z.addSelf(y[V]),z.multiplyScalar(.25)),b[h]=x+R.length+O,H.push(z),O++,g.supportUVs&&((P=new THREE.Vector2).x=a(B,U).x+a(V,U).x,P.y=a(B,U).y+a(V,U).y,P.x/=2,P.y/=2,n(b[h],U,P),F.length>=2&&(t(2==F.length,"did we plan for more than 2 edges?"),(P=new THREE.Vector2).x=a(B,D).x+a(V,D).x,P.y=a(B,D).y+a(V,D).y,P.x/=2,P.y/=2,n(b[h],D,P)));r("-- Step 2 done");var W,j,X,Y,q,K,Z=["123","12","2","23"],Q=["123","23","3","31"],J=["123","31","1","12"],$=["1234","12","2","23"],ee=["1234","23","3","34"],te=["1234","34","4","41"],re=["1234","41","1","12"];for(h=0,c=_.length;h<c;h++)_[h],p=R[h],W=x+h,p instanceof THREE.Face3?(j=v(p.a,p.b),X=v(p.b,p.c),K=v(p.c,p.a),o(W,b[j],p.b,b[X],p,Z,h),o(W,b[X],p.c,b[K],p,Q,h),o(W,b[K],p.a,b[j],p,J,h)):p instanceof THREE.Face4?(j=v(p.a,p.b),X=v(p.b,p.c),Y=v(p.c,p.d),q=v(p.d,p.a),o(W,b[j],p.b,b[X],p,$,h),o(W,b[X],p.c,b[Y],p,ee,h),o(W,b[Y],p.d,b[q],p,te,h),o(W,b[q],p.a,b[j],p,re,h)):r("face should be a face!",p);E=H;var ie,oe=new THREE.Vector3,ae=new THREE.Vector3;for(h=0,c=y.length;h<c;h++)if(void 0!==G[h]){oe.set(0,0,0),ae.set(0,0,0);var ne=new THREE.Vector3(0,0,0),se=0;for(f in k[h])oe.addSelf(_[f]),se++;var le=se!=(ie=G[h].length);for(f=0;f<ie;f++)S[v(G[h][f][0],G[h][f][1])]&&0;oe.divideScalar(se);var he=0;if(le){for(f=0;f<ie;f++)if(F=G[h][f],1==I[v(F[0],F[1])].length){ce=y[F[0]].clone().addSelf(y[F[1]]).divideScalar(2);ae.addSelf(ce),he++}ae.divideScalar(4),t(2==he,"should have only 2 boundary edges")}else{for(f=0;f<ie;f++){var ce=y[(F=G[h][f])[0]].clone().addSelf(y[F[1]]).divideScalar(2);ae.addSelf(ce)}ae.divideScalar(ie)}ne.addSelf(y[h]),le?(ne.divideScalar(2),ne.addSelf(ae)):(ne.multiplyScalar(ie-3),ne.addSelf(oe),ne.addSelf(ae.multiplyScalar(2)),ne.divideScalar(ie)),E[h]=ne}var fe=e;fe.vertices=E,fe.faces=d,fe.faceVertexUvs[0]=m,delete fe.__tmpVertices,fe.computeCentroids(),fe.computeFaceNormals(),fe.computeVertexNormals()},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,o){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,o)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,o,a){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===a&&(a=1),void 0===o&&(o=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:o,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=2*-this.positionScreen.x,o=2*-this.positionScreen.y;for(e=0;e<r;e++)(t=this.lensFlares[e]).x=this.positionScreen.x+i*t.distance,t.y=this.positionScreen.y+o*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i=r-1,o=r/1;this.createAnimation("__default",0,i,o),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var o={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=o,this.animationsList.push(o)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)(\d+)/,i={},o=this.geometry,a=0,n=o.morphTargets.length;a<n;a++){var s=o.morphTargets[a].name.match(r);if(s&&s.length>1){l=s[1],s[2];i[l]||(i[l]={start:1/0,end:-1/0});a<(h=i[l]).start&&(h.start=a),a>h.end&&(h.end=a),t||(t=l)}}for(var l in i){var h=i[l];this.createAnimation(l,h.start,h.end,e)}this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;t<r;t++){var i=this.animationsList[t];if(i.active){var o=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var a=i.startFrame+THREE.Math.clamp(Math.floor(i.time/o),0,i.length-1),n=i.weight;a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*n,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a);var s=i.time%o/o;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*n,this.morphTargetInfluences[i.lastFrame]=(1-s)*n}}},THREE.LensFlarePlugin=function(){function e(e){var r=t.createProgram(),i=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER);return t.shaderSource(i,e.fragmentShader),t.shaderSource(o,e.vertexShader),t.compileShader(i),t.compileShader(o),t.attachShader(r,i),t.attachShader(r,o),t.linkProgram(r),r}var t,r,i={};this.init=function(o){t=o.context,r=o,i.vertices=new Float32Array(16),i.faces=new Uint16Array(6);var a=0;i.vertices[a++]=-1,i.vertices[a++]=-1,i.vertices[a++]=0,i.vertices[a++]=0,i.vertices[a++]=1,i.vertices[a++]=-1,i.vertices[a++]=1,i.vertices[a++]=0,i.vertices[a++]=1,i.vertices[a++]=1,i.vertices[a++]=1,i.vertices[a++]=1,i.vertices[a++]=-1,i.vertices[a++]=1,i.vertices[a++]=0,i.vertices[a++]=1,a=0,i.faces[a++]=0,i.faces[a++]=1,i.faces[a++]=2,i.faces[a++]=0,i.faces[a++]=2,i.faces[a++]=3,i.vertexBuffer=t.createBuffer(),i.elementBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,i.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,i.vertices,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.elementBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,i.faces,t.STATIC_DRAW),i.tempTexture=t.createTexture(),i.occlusionTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,i.tempTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,i.occlusionTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(i.hasVertexTexture=!1,i.program=e(THREE.ShaderFlares.lensFlare)):(i.hasVertexTexture=!0,i.program=e(THREE.ShaderFlares.lensFlareVertexTexture)),i.attributes={},i.uniforms={},i.attributes.vertex=t.getAttribLocation(i.program,"position"),i.attributes.uv=t.getAttribLocation(i.program,"uv"),i.uniforms.renderType=t.getUniformLocation(i.program,"renderType"),i.uniforms.map=t.getUniformLocation(i.program,"map"),i.uniforms.occlusionMap=t.getUniformLocation(i.program,"occlusionMap"),i.uniforms.opacity=t.getUniformLocation(i.program,"opacity"),i.uniforms.color=t.getUniformLocation(i.program,"color"),i.uniforms.scale=t.getUniformLocation(i.program,"scale"),i.uniforms.rotation=t.getUniformLocation(i.program,"rotation"),i.uniforms.screenPosition=t.getUniformLocation(i.program,"screenPosition")},this.render=function(e,o,a,n){var s=e.__webglFlares,l=s.length;if(l){var h=new THREE.Vector3,c=n/a,f=.5*a,u=.5*n,p=16/n,E=new THREE.Vector2(p*c,p),d=new THREE.Vector3(1,1,0),m=new THREE.Vector2(1,1),g=i.uniforms,v=i.attributes;t.useProgram(i.program),t.enableVertexAttribArray(i.attributes.vertex),t.enableVertexAttribArray(i.attributes.uv),t.uniform1i(g.occlusionMap,0),t.uniform1i(g.map,1),t.bindBuffer(t.ARRAY_BUFFER,i.vertexBuffer),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.elementBuffer),t.disable(t.CULL_FACE),t.depthMask(!1);var T,y,R,x,H;for(T=0;T<l;T++)if(p=16/n,E.set(p*c,p),x=s[T],h.set(x.matrixWorld.elements[12],x.matrixWorld.elements[13],x.matrixWorld.elements[14]),o.matrixWorldInverse.multiplyVector3(h),o.projectionMatrix.multiplyVector3(h),d.copy(h),m.x=d.x*f+f,m.y=d.y*u+u,i.hasVertexTexture||m.x>0&&m.x<a&&m.y>0&&m.y<n)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,i.tempTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,m.x-8,m.y-8,16,16,0),t.uniform1i(g.renderType,0),t.uniform2f(g.scale,E.x,E.y),t.uniform3f(g.screenPosition,d.x,d.y,d.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,i.occlusionTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,m.x-8,m.y-8,16,16,0),t.uniform1i(g.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,i.tempTexture),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),x.positionScreen.copy(d),x.customUpdateCallback?x.customUpdateCallback(x):x.updateLensFlares(),t.uniform1i(g.renderType,2),t.enable(t.BLEND),y=0,R=x.lensFlares.length;y<R;y++)(H=x.lensFlares[y]).opacity>.001&&H.scale>.001&&(d.x=H.x,d.y=H.y,d.z=H.z,p=H.size*H.scale/n,E.x=p*c,E.y=p,t.uniform3f(g.screenPosition,d.x,d.y,d.z),t.uniform2f(g.scale,E.x,E.y),t.uniform1f(g.rotation,H.rotation),t.uniform1f(g.opacity,H.opacity),t.uniform3f(g.color,H.color.r,H.color.g,H.color.b),r.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),r.setTexture(H.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,r,i,o,a,n=new THREE.Frustum,s=new THREE.Matrix4,l=new THREE.Vector3,h=new THREE.Vector3;this.init=function(n){e=n.context,t=n;var s=THREE.ShaderLib.depthRGBA,l=THREE.UniformsUtils.clone(s.uniforms);r=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l}),i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(e,r){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,r)},this.update=function(c,f){var u,p,E,d,m,g,v,T,y,R,x,H,_,b,S=[],w=0;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),u=0,p=c.__lights.length;u<p;u++)if((_=c.__lights[u]).castShadow)if(_ instanceof THREE.DirectionalLight&&_.shadowCascade)for(m=0;m<_.shadowCascadeCount;m++){var M;if(_.shadowCascadeArray[m])M=_.shadowCascadeArray[m];else{(M=function(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,o=r.pointsFrustum,a=0;a<8;a++)i[a]=new THREE.Vector3,o[a]=new THREE.Vector3;var n=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return o[0].set(-1,-1,n),o[1].set(1,-1,n),o[2].set(-1,1,n),o[3].set(1,1,n),o[4].set(-1,-1,s),o[5].set(1,-1,s),o[6].set(-1,1,s),o[7].set(1,1,s),r}(_,m)).originalCamera=f;var C=new THREE.Gyroscope;C.position=_.shadowCascadeOffset,C.add(M),C.add(M.target),f.add(C),_.shadowCascadeArray[m]=M,console.log("Created virtualLight",M)}!function(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],o=e.shadowCascadeFarZ[t],a=r.pointsFrustum;a[0].z=i,a[1].z=i,a[2].z=i,a[3].z=i,a[4].z=o,a[5].z=o,a[6].z=o,a[7].z=o}(_,m),S[w]=M,w++}else S[w]=_,w++;for(u=0,p=S.length;u<p;u++){if(!(_=S[u]).shadowMap){var A=THREE.LinearFilter;t.shadowMapType===THREE.PCFSoftShadowMap&&(A=THREE.NearestFilter);var L={minFilter:A,magFilter:A,format:THREE.RGBAFormat};_.shadowMap=new THREE.WebGLRenderTarget(_.shadowMapWidth,_.shadowMapHeight,L),_.shadowMapSize=new THREE.Vector2(_.shadowMapWidth,_.shadowMapHeight),_.shadowMatrix=new THREE.Matrix4}if(!_.shadowCamera){if(_ instanceof THREE.SpotLight)_.shadowCamera=new THREE.PerspectiveCamera(_.shadowCameraFov,_.shadowMapWidth/_.shadowMapHeight,_.shadowCameraNear,_.shadowCameraFar);else{if(!(_ instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}_.shadowCamera=new THREE.OrthographicCamera(_.shadowCameraLeft,_.shadowCameraRight,_.shadowCameraTop,_.shadowCameraBottom,_.shadowCameraNear,_.shadowCameraFar)}c.add(_.shadowCamera),t.autoUpdateScene&&c.updateMatrixWorld()}for(_.shadowCameraVisible&&!_.cameraHelper&&(_.cameraHelper=new THREE.CameraHelper(_.shadowCamera),_.shadowCamera.add(_.cameraHelper)),_.isVirtual&&M.originalCamera==f&&function(e,t){var r=t.shadowCamera,i=t.pointsFrustum,o=t.pointsWorld;l.set(1/0,1/0,1/0),h.set(-1/0,-1/0,-1/0);for(var a=0;a<8;a++){var n=o[a];n.copy(i[a]),THREE.ShadowMapPlugin.__projector.unprojectVector(n,e),r.matrixWorldInverse.multiplyVector3(n),n.x<l.x&&(l.x=n.x),n.x>h.x&&(h.x=n.x),n.y<l.y&&(l.y=n.y),n.y>h.y&&(h.y=n.y),n.z<l.z&&(l.z=n.z),n.z>h.z&&(h.z=n.z)}r.left=l.x,r.right=h.x,r.top=h.y,r.bottom=l.y,r.updateProjectionMatrix()}(f,_),g=_.shadowMap,v=_.shadowMatrix,(T=_.shadowCamera).position.copy(_.matrixWorld.getPosition()),T.lookAt(_.target.matrixWorld.getPosition()),T.updateMatrixWorld(),T.matrixWorldInverse.getInverse(T.matrixWorld),_.cameraHelper&&(_.cameraHelper.visible=_.shadowCameraVisible),_.shadowCameraVisible&&_.cameraHelper.update(),v.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),v.multiplySelf(T.projectionMatrix),v.multiplySelf(T.matrixWorldInverse),s.multiply(T.projectionMatrix,T.matrixWorldInverse),n.setFromMatrix(s),t.setRenderTarget(g),t.clear(),E=0,d=(b=c.__webglObjects).length;E<d;E++)H=(x=b[E]).object,x.render=!1,H.visible&&H.castShadow&&((H instanceof THREE.Mesh||H instanceof THREE.ParticleSystem)&&H.frustumCulled&&!n.contains(H)||(H._modelViewMatrix.multiply(T.matrixWorldInverse,H.matrixWorld),x.render=!0));var P,F,U;for(E=0,d=b.length;E<d;E++)(x=b[E]).render&&(H=x.object,y=x.buffer,P=function(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}(H),F=H.geometry.morphTargets.length>0&&P.morphTargets,U=H instanceof THREE.SkinnedMesh&&P.skinning,R=H.customDepthMaterial?H.customDepthMaterial:U?F?a:o:F?i:r,y instanceof THREE.BufferGeometry?t.renderBufferDirect(T,c.__lights,null,R,y,H):t.renderBuffer(T,c.__lights,null,R,y,H));for(E=0,d=(b=c.__webglObjectsImmediate).length;E<d;E++)(H=(x=b[E]).object).visible&&H.castShadow&&(H._modelViewMatrix.multiply(T.matrixWorldInverse,H.matrixWorld),t.renderImmediateObject(T,c.__lights,null,r,H))}var D=t.getClearColor(),z=t.getClearAlpha();e.clearColor(D.r,D.g,D.b,z),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,r,i={};this.init=function(e){t=e.context,r=e,i.vertices=new Float32Array(16),i.faces=new Uint16Array(6);var o=0;i.vertices[o++]=-1,i.vertices[o++]=-1,i.vertices[o++]=0,i.vertices[o++]=0,i.vertices[o++]=1,i.vertices[o++]=-1,i.vertices[o++]=1,i.vertices[o++]=0,i.vertices[o++]=1,i.vertices[o++]=1,i.vertices[o++]=1,i.vertices[o++]=1,i.vertices[o++]=-1,i.vertices[o++]=1,i.vertices[o++]=0,i.vertices[o++]=1,o=0,i.faces[o++]=0,i.faces[o++]=1,i.faces[o++]=2,i.faces[o++]=0,i.faces[o++]=2,i.faces[o++]=3,i.vertexBuffer=t.createBuffer(),i.elementBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,i.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,i.vertices,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.elementBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,i.faces,t.STATIC_DRAW),i.program=function(e){var r=t.createProgram(),i=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER);return t.shaderSource(i,e.fragmentShader),t.shaderSource(o,e.vertexShader),t.compileShader(i),t.compileShader(o),t.attachShader(r,i),t.attachShader(r,o),t.linkProgram(r),r}(THREE.ShaderSprite.sprite),i.attributes={},i.uniforms={},i.attributes.position=t.getAttribLocation(i.program,"position"),i.attributes.uv=t.getAttribLocation(i.program,"uv"),i.uniforms.uvOffset=t.getUniformLocation(i.program,"uvOffset"),i.uniforms.uvScale=t.getUniformLocation(i.program,"uvScale"),i.uniforms.rotation=t.getUniformLocation(i.program,"rotation"),i.uniforms.scale=t.getUniformLocation(i.program,"scale"),i.uniforms.alignment=t.getUniformLocation(i.program,"alignment"),i.uniforms.color=t.getUniformLocation(i.program,"color"),i.uniforms.map=t.getUniformLocation(i.program,"map"),i.uniforms.opacity=t.getUniformLocation(i.program,"opacity"),i.uniforms.useScreenCoordinates=t.getUniformLocation(i.program,"useScreenCoordinates"),i.uniforms.sizeAttenuation=t.getUniformLocation(i.program,"sizeAttenuation"),i.uniforms.screenPosition=t.getUniformLocation(i.program,"screenPosition"),i.uniforms.modelViewMatrix=t.getUniformLocation(i.program,"modelViewMatrix"),i.uniforms.projectionMatrix=t.getUniformLocation(i.program,"projectionMatrix"),i.uniforms.fogType=t.getUniformLocation(i.program,"fogType"),i.uniforms.fogDensity=t.getUniformLocation(i.program,"fogDensity"),i.uniforms.fogNear=t.getUniformLocation(i.program,"fogNear"),i.uniforms.fogFar=t.getUniformLocation(i.program,"fogFar"),i.uniforms.fogColor=t.getUniformLocation(i.program,"fogColor"),i.uniforms.alphaTest=t.getUniformLocation(i.program,"alphaTest")},this.render=function(o,a,n,s){var l=o.__webglSprites,h=l.length;if(h){var c=i.attributes,f=i.uniforms,u=s/n,p=.5*n,E=.5*s;t.useProgram(i.program),t.enableVertexAttribArray(c.position),t.enableVertexAttribArray(c.uv),t.disable(t.CULL_FACE),t.enable(t.BLEND),t.bindBuffer(t.ARRAY_BUFFER,i.vertexBuffer),t.vertexAttribPointer(c.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(c.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,i.elementBuffer),t.uniformMatrix4fv(f.projectionMatrix,!1,a.projectionMatrix.elements),t.activeTexture(t.TEXTURE0),t.uniform1i(f.map,0);var d=0,m=0,g=o.fog;g?(t.uniform3f(f.fogColor,g.color.r,g.color.g,g.color.b),g instanceof THREE.Fog?(t.uniform1f(f.fogNear,g.near),t.uniform1f(f.fogFar,g.far),t.uniform1i(f.fogType,1),d=1,m=1):g instanceof THREE.FogExp2&&(t.uniform1f(f.fogDensity,g.density),t.uniform1i(f.fogType,2),d=2,m=2)):(t.uniform1i(f.fogType,0),d=0,m=0);var v,T,y,R,x,H=[];for(v=0;v<h;v++)y=(T=l[v]).material,T.visible&&0!==y.opacity&&(y.useScreenCoordinates?T.z=-T.position.z:(T._modelViewMatrix.multiply(a.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]));for(l.sort(e),v=0;v<h;v++)y=(T=l[v]).material,T.visible&&0!==y.opacity&&y.map&&y.map.image&&y.map.image.width&&(t.uniform1f(f.alphaTest,y.alphaTest),y.useScreenCoordinates?(t.uniform1i(f.useScreenCoordinates,1),t.uniform3f(f.screenPosition,(T.position.x-p)/p,(E-T.position.y)/E,Math.max(0,Math.min(1,T.position.z)))):(t.uniform1i(f.useScreenCoordinates,0),t.uniform1i(f.sizeAttenuation,y.sizeAttenuation?1:0),t.uniformMatrix4fv(f.modelViewMatrix,!1,T._modelViewMatrix.elements)),d!==(x=o.fog&&y.fog?m:0)&&(t.uniform1i(f.fogType,x),d=x),R=1/(y.scaleByViewport?s:1),H[0]=R*u*T.scale.x,H[1]=R*T.scale.y,t.uniform2f(f.uvScale,y.uvScale.x,y.uvScale.y),t.uniform2f(f.uvOffset,y.uvOffset.x,y.uvOffset.y),t.uniform2f(f.alignment,y.alignment.x,y.alignment.y),t.uniform1f(f.opacity,y.opacity),t.uniform3f(f.color,y.color.r,y.color.g,y.color.b),t.uniform1f(f.rotation,T.rotation),t.uniform2fv(f.scale,H),r.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),r.setDepthTest(y.depthTest),r.setDepthWrite(y.depthWrite),r.setTexture(y.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,r,i,o,a,n=new THREE.Frustum,s=new THREE.Matrix4;this.init=function(n){e=n.context,t=n;var s=THREE.ShaderLib.depthRGBA,l=THREE.UniformsUtils.clone(s.uniforms);r=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l}),i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0,skinning:!0}),r._shadowPass=!0,i._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(l,h){var c,f,u,p,E,d,m;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),t.autoUpdateScene&&l.updateMatrixWorld(),h.matrixWorldInverse.getInverse(h.matrixWorld),s.multiply(h.projectionMatrix,h.matrixWorldInverse),n.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),c=0,f=(m=l.__webglObjects).length;c<f;c++)d=(E=m[c]).object,E.render=!1,d.visible&&((d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem)&&d.frustumCulled&&!n.contains(d)||(d._modelViewMatrix.multiply(h.matrixWorldInverse,d.matrixWorld),E.render=!0));var g,v,T;for(c=0,f=m.length;c<f;c++)if((E=m[c]).render){if(d=E.object,u=E.buffer,d instanceof THREE.ParticleSystem&&!d.customDepthMaterial)continue;(g=function(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}(d))&&t.setMaterialFaces(d.material),v=d.geometry.morphTargets.length>0&&g.morphTargets,T=d instanceof THREE.SkinnedMesh&&g.skinning,p=d.customDepthMaterial?d.customDepthMaterial:T?v?a:o:v?i:r,u instanceof THREE.BufferGeometry?t.renderBufferDirect(h,l.__lights,null,p,u,d):t.renderBuffer(h,l.__lights,null,p,u,d)}for(c=0,f=(m=l.__webglObjectsImmediate).length;c<f;c++)(d=(E=m[c]).object).visible&&(d._modelViewMatrix.multiply(h.matrixWorldInverse,d.matrixWorld),t.renderImmediateObject(h,l.__lights,null,r,d));var y=t.getClearColor(),R=t.getClearAlpha();e.clearColor(y.r,y.g,y.b,R),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform int renderType;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform sampler2D map;","uniform float opacity;","uniform int renderType;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform int renderType;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform int renderType;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["precision mediump float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};
//# sourceMappingURL=/sm/5b9427c813b35371b140da46eee58f32cb89a4ddce747d02906bf0252142d999.map